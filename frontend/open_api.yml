openapi: 3.0.0
paths:
  /v1/health:
    get:
      operationId: HealthController_healthchecker
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - health
  /v1/booklets/search:
    get:
      operationId: BookletController_search
      summary: 冊子検索
      parameters:
        - name: editionCodes
          required: false
          in: query
          example: KANTO
          description: 版コード
          schema:
            type: array
            items:
              type: string
              enum:
                - HOKKAIDO
                - TOUHOKU
                - JOSHINETSU
                - KITA_KANTO
                - KANTO
                - TOKAI
                - KANSAI
                - HOKURIKU
                - CHUGOKU_SHIKOKU
                - KYUSHU
                - KANSAI_HOKURIKU
                - TOUKAI_HOKURIKU
                - TEST
        - name: mediaTypeCodes
          required: false
          in: query
          description: 媒体種別
          schema:
            type: array
            items:
              type: string
              enum:
                - MAGAZINE
                - TEST
        - name: issueYearMonth
          required: false
          in: query
          description: 月号年月=>バックエンド側でパースする(2022-01or2022/01)
          schema:
            type: array
            items:
              type: string
        - name: bookletModifiedAtFrom
          required: false
          in: query
          example: 2022/01/01 00:00:00
          description: 冊子最終更新日From
          schema:
            format: date-time
            type: string
        - name: bookletModifiedAtTo
          required: false
          in: query
          example: 2022/01/01 00:00:00
          description: 冊子最終更新日To
          schema:
            format: date-time
            type: string
      responses:
        default:
          description: 冊子の検索
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookletSearchWithCountDto'
      tags:
        - booklets
  /v1/booklets/test-count-by-status/{projectId}:
    get:
      operationId: BookletController_countDocumentByStatus
      summary: ''
      parameters:
        - name: projectId
          required: true
          in: path
          schema:
            type: number
      responses:
        default:
          description: ''
      tags:
        - booklets
  /v1/booklets/{id}:
    get:
      operationId: BookletController_get
      summary: 冊子取得(ページと原稿も含んで)
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: 冊子取得(ページと原稿も含んで)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookletDetailResponseDto'
      tags:
        - booklets
    delete:
      operationId: BookletController_delete
      summary: 冊子削除
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookletResponseDto'
      tags:
        - booklets
  /v1/booklets:
    post:
      operationId: BookletController_create
      summary: 冊子作成
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBookletDto'
      responses:
        default:
          description: 冊子作成
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookletResponseDto'
      tags:
        - booklets
    put:
      operationId: BookletController_update
      summary: 冊子更新
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBookletDto'
      responses:
        default:
          description: 冊子作成
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookletResponseDto'
      tags:
        - booklets
  /v1/booklets/update-locked:
    put:
      operationId: BookletController_updateLock
      summary: 入稿ロック
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLockDto'
      responses:
        default:
          description: 入稿ロック
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookletResponseDto'
      tags:
        - booklets
  /v1/booklets/copy-booklet:
    post:
      operationId: BookletController_copyBooklet
      summary: 冊子コピー
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyBookletDto'
      responses:
        default:
          description: 自身を別のプロジェクトにコピー(ページ、原稿含む)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookletResponseDto'
      tags:
        - booklets
  /v1/booklets/progress-aggregation/{projectId}:
    get:
      operationId: BookletController_progressAggregation
      summary: 冊子進捗状況
      parameters:
        - name: take
          required: false
          in: query
          example: '10'
          description: 取得件数
          schema:
            type: number
        - name: skip
          required: false
          in: query
          example: '0'
          description: スキップ値
          schema:
            type: number
        - name: projectId
          required: true
          in: path
          schema:
            type: number
      responses:
        default:
          description: 現在の原稿ステータスごとに集計して表示
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookletProgressAggregationDto'
      tags:
        - booklets
  /v1/imports/entry:
    post:
      operationId: ImportController_entryImport
      summary: エントリーインポート
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EntryFileRequestDto'
      responses:
        default:
          description: エントリーインポート
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImportXlsDocumentProgressDto'
      tags:
        - imports
  /v1/imports/draft-pages:
    post:
      operationId: ImportController_draftImport
      summary: 台割りインポート
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DraftPagesFileRequestDto'
      responses:
        default:
          description: 台割りインポート
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportXlsDocumentProgressDto'
      tags:
        - imports
  /v1/imports/entry-progress/{id}:
    get:
      operationId: ImportController_getEntryProgress
      summary: エントリーインポート進捗
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        default:
          description: idよりエントリーインポート進捗取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportXlsDocumentProgressDto'
      tags:
        - imports
  /v1/imports/draft-progress/{id}:
    get:
      operationId: ImportController_getProgress
      summary: 台割りインポート進捗
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        default:
          description: idより台割りインポート進捗取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportXlsDocumentProgressDto'
      tags:
        - imports
  /v1/imports/entry-cancel/{id}:
    delete:
      operationId: ImportController_entryTaskCancel
      summary: idよりエントリーインポートキャンセル
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        default:
          description: idよりエントリーインポートキャンセル
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportXlsDocumentProgressDto'
      tags:
        - imports
  /v1/imports/draft-cancel/{id}:
    delete:
      operationId: ImportController_draftTaskCancel
      summary: idより台割りインポートキャンセル
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        default:
          description: idより台割りインポートキャンセル
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportXlsDocumentProgressDto'
      tags:
        - imports
  /v1/imports/entry-progress-sse/{id}/{intervalNum}:
    get:
      operationId: ImportController_getEntryProgressFromSse
      summary: エントリーインポート進捗SSEリクエスト対応
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
        - name: intervalNum
          required: true
          in: path
          schema:
            type: number
      responses:
        default:
          description: idよりエントリーインポート進捗取得SSEリクエスト対応
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportXlsDocumentProgressSSMDto'
      tags:
        - imports
  /v1/imports/entry-progress-list:
    get:
      operationId: ImportController_entryList
      summary: エントリーインポート進捗一覧
      parameters:
        - name: take
          required: false
          in: query
          example: '10'
          description: 取得件数
          schema:
            type: number
        - name: skip
          required: false
          in: query
          example: '0'
          description: スキップ値
          schema:
            type: number
        - name: projectId
          required: true
          in: query
          example: 1
          description: projectId
          schema:
            type: number
      responses:
        default:
          description: エントリーインポート進捗一覧
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportXlsDocumentProgressDtoWithCountDto'
      tags:
        - imports
  /v1/projects:
    get:
      operationId: ProjectController_list
      summary: プロジェクト一覧取得
      parameters:
        - name: take
          required: false
          in: query
          example: '10'
          description: 取得件数
          schema:
            type: number
        - name: skip
          required: false
          in: query
          example: '0'
          description: スキップ値
          schema:
            type: number
      responses:
        '200':
          description: プロジェクト一覧取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectWithCountResponse'
      tags:
        - projects
    post:
      operationId: ProjectController_create
      summary: プロジェクト作成
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectWithEditionCodeDto'
      responses:
        default:
          description: プロジェクト作成
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCreatedResponseDto'
      tags:
        - projects
    put:
      operationId: ProjectController_update
      summary: プロジェクト年月の更新
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectIssueDto'
      responses:
        default:
          description: プロジェクト年月の更新
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponseDto'
      tags:
        - projects
  /v1/projects/project-issue-list:
    get:
      operationId: ProjectController_getIssueProject
      summary: ''
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectIssueYearMonth'
      tags:
        - projects
  /v1/projects/project-setting:
    put:
      operationId: ProjectController_projectSetting
      summary: プロジェクト設定更新
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateProjectSettingDto'
      responses:
        default:
          description: プロジェクト設定更新
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectWithXlsFilesResponseDto'
      tags:
        - projects
  /v1/projects/{id}:
    get:
      operationId: ProjectController_details
      summary: プロジェクト取得
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: idからプロジェクト取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsWithImagesResponseDto'
      tags:
        - projects
    delete:
      operationId: ProjectController_delete
      summary: プロジェクトの削除
      parameters:
        - name: id
          required: true
          in: path
          example: 1
          description: プロジェクトid
          schema:
            type: number
      responses:
        default:
          description: idからプロジェクトの削除
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponseDto'
      tags:
        - projects
  /v1/projects/copy-project:
    post:
      operationId: ProjectController_duplicate
      summary: 複製プロジェクト
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DuplicateProjectDto'
      responses:
        default:
          description: 複製プロジェクト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponseDto'
      tags:
        - projects
  /v1/idml-replace/workspace/items:
    get:
      operationId: IdmlReplaceController_getWorkspaceItems
      summary: Workspaceアイテム一覧取得
      parameters:
        - name: editId
          required: true
          in: query
          example: '1_1_1_1'
          description: 編集ID
          schema:
            type: string
        - name: packageId
          required: false
          in: query
          example: template
          description: パッケージID
          schema:
            type: string
      responses:
        '200':
          description: Workspaceアイテム一覧
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdmlItemsResponseDto'
      tags:
        - idml-replace
  /v1/idml-replace/workspace/tags:
    get:
      operationId: IdmlReplaceController_getWorkspaceTags
      summary: Workspaceパッケージのタグ一覧取得
      parameters:
        - name: editId
          required: true
          in: query
          example: '1_1_1_1'
          description: 編集ID
          schema:
            type: string
        - name: packageId
          required: false
          in: query
          example: template
          description: パッケージID
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagInfoResponseDto'
      tags:
        - idml-replace
  /v1/idml-replace/workspace/contents:
    put:
      operationId: IdmlReplaceController_updateWorkspaceContents
      summary: Workspaceコンテンツの更新
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkspaceContentRequestDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceCommonResponse'
      tags:
        - idml-replace
  /v1/idml-replace/workspace/icons:
    put:
      operationId: IdmlReplaceController_updateWorkspaceIcons
      summary: Workspaceアイコンの更新
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkspaceIconsRequestDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceCommonResponse'
      tags:
        - idml-replace
  /v1/idml-replace/workspace/image:
    put:
      operationId: IdmlReplaceController_updateWorkspaceImage
      summary: Workspace画像の更新
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadWorkspaceImageRequestDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceCommonResponse'
      tags:
        - idml-replace
  /v1/idml-replace/workspace/bg-image/{sizeCode}:
    get:
      operationId: IdmlReplaceController_getWorkspaceBackgroundImage
      summary: Workspace背景画像ファイル取得
      parameters:
        - name: sizeCode
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - idml-replace
  /v1/idml-replace/workspace/image/{fileName}:
    get:
      operationId: IdmlReplaceController_getWorkspaceImage
      summary: Workspace画像ファイル取得
      parameters:
        - name: fileName
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - idml-replace
  /v1/idml-replace/workspace/appeal-layout:
    post:
      operationId: IdmlReplaceController_createWorkspaceAppealLayout
      summary: Workspace訴求レイアウト作成
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceAppealLayoutRequestDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceCommonResponse'
      tags:
        - idml-replace
  /v1/idml-replace/workspace/feetable-header:
    post:
      operationId: IdmlReplaceController_createWorkspacFeeTableHeader
      summary: Workspace料金表ヘッダ作成
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceFeetableHeaderRequestDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceCommonResponse'
      tags:
        - idml-replace
  /v1/idml-replace/workspace/parts-layout:
    post:
      operationId: IdmlReplaceController_createWorkspacePartsLayout
      summary: Workspaceパーツレイアウト作成
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspacePartsLayoutRequestDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceCommonResponse'
      tags:
        - idml-replace
  /v1/idml-replace/workspace/parts:
    post:
      operationId: IdmlReplaceController_createWorkspacePartsCoumn
      summary: Workspaceパーツコラム作成
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspacePartsRequestDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceCommonResponse'
      tags:
        - idml-replace
  /v1/idml-replace/workspace/reset-iconfiles:
    put:
      operationId: IdmlReplaceController_resetWorkspaceIcons
      summary: Workspaceアイコンファイルリセット
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - idml-replace
  /v1/idml-replace/list:
    get:
      operationId: IdmlReplaceController_list
      summary: ファイル一覧の取得
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - idml-replace
  /v1/idml-replace/upload:
    post:
      operationId: IdmlReplaceController_upload
      summary: IDMLファイルの追加
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadIdmlFileRequestDto'
      responses:
        '201':
          description: ''
      tags:
        - idml-replace
  /v1/idml-replace/update-settings/{sizeCode}:
    post:
      operationId: IdmlReplaceController_updateSetting
      parameters:
        - name: sizeCode
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTemplateSettingRequestDto'
      responses:
        '201':
          description: ''
      tags:
        - idml-replace
  /v1/idml-replace/background-image/{templateId}:
    post:
      operationId: IdmlReplaceController_uploadOriginalBackgroundImage
      summary: 背景画像ファイル登録
      parameters:
        - name: templateId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadBackgroundImageFileRequestDto'
      responses:
        '201':
          description: ''
      tags:
        - idml-replace
  /v1/idml-replace/idml-links:
    get:
      operationId: IdmlReplaceController_workspaceIdmlLinks
      summary: IDML参照しているリンクを取得
      parameters:
        - name: editId
          required: true
          in: query
          schema:
            type: string
        - name: partsId
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - idml-replace
  /v1/idml-replace/idml-links/{fileName}:
    get:
      operationId: IdmlReplaceController_idmlLinks
      summary: IDML参照しているリンクを取得
      parameters:
        - name: fileName
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - idml-replace
  /v1/idml-replace/idml-colors/{fileName}:
    get:
      operationId: IdmlReplaceController_getColors
      summary: IDML参照しているリンクを取得
      parameters:
        - name: fileName
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - idml-replace
  /v1/idml-replace/idml-tags/{fileName}:
    get:
      operationId: IdmlReplaceController_idmlTags
      summary: IDML参照しているリンクを取得
      parameters:
        - name: fileName
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - idml-replace
  /v1/idml-replace/tags:
    get:
      operationId: IdmlReplaceController_tags
      summary: IDML参照しているリンクを取得
      parameters:
        - name: editId
          required: true
          in: query
          schema:
            type: string
        - name: packageId
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - idml-replace
  /v1/idml-replace/export/document/{editId}:
    get:
      operationId: IdmlReplaceController_sendToIndesignServer
      parameters:
        - name: editId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - idml-replace
  /v1/idml-replace/export/page/{pageId}:
    get:
      operationId: IdmlReplaceController_exprotToPagePdf
      parameters:
        - name: pageId
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags:
        - idml-replace
  /v1/idml-replace/create-share-link:
    post:
      operationId: IdmlReplaceController_createShareLink
      summary: Create Share Link
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIdmlDocumentShare'
      responses:
        default:
          description: ''
          content:
            application/json:
              schema:
                type: string
      tags:
        - idml-replace
  /v1/idml-replace/image-crop:
    post:
      operationId: IdmlReplaceController_imageCropping
      summary: 画像トリミング処理
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImageCroppingRequestDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceCommonResponse'
      tags:
        - idml-replace
  /v1/documents:
    post:
      operationId: DocumentController_createDocument
      summary: 原稿作成
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDocumentDto'
      responses:
        default:
          description: 原稿作成
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponseDto'
      tags:
        - documents
    get:
      operationId: DocumentController_list
      summary: 原稿ゲット
      parameters:
        - name: take
          required: false
          in: query
          example: '10'
          description: 取得件数
          schema:
            type: number
        - name: skip
          required: false
          in: query
          example: '0'
          description: スキップ値
          schema:
            type: number
      responses:
        default:
          description: 原稿ゲット
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentResponseWithProject'
      tags:
        - documents
  /v1/documents/search:
    get:
      operationId: DocumentController_search
      summary: 原稿検索
      parameters:
        - name: take
          required: false
          in: query
          example: '10'
          description: 取得件数
          schema:
            type: number
        - name: skip
          required: false
          in: query
          example: '0'
          description: スキップ値
          schema:
            type: number
        - name: projectId
          required: false
          in: query
          example: '1'
          description: プロジェクトID
          schema:
            type: number
        - name: statusCodes
          required: false
          in: query
          example: CHECKING
          description: 原稿ステータスコード
          schema:
            type: array
            items: {}
        - name: mediaTypeCodes
          required: false
          in: query
          example: MAGAZINE
          description: 媒体種別マスタ
          schema:
            type: array
            items: {}
        - name: editionCodes
          required: false
          in: query
          example: KANTO
          description: 版コード
          schema:
            type: array
            items: {}
        - name: issueYearMonth
          required: false
          in: query
          description: 月号 年月 => バックエンド側でパースする
          schema:
            type: array
            items:
              type: string
        - name: hotelCode
          required: false
          in: query
          example: '2986'
          description: ホテルコード
          schema:
            type: string
        - name: hotelName
          required: false
          in: query
          example: ゆこホテル
          description: ホテル名
          schema:
            type: string
        - name: documentSizeCode
          required: false
          in: query
          example: ONE_ONE
          description: 原稿サイズコード
          schema:
            enum:
              - ONE_ONE
              - ONE_TWO
              - ONE_FOUR
            type: string
        - name: manuscriptPersonCognito
          required: false
          in: query
          description: 編集担当のcognitoID配列
          schema:
            type: array
            items:
              type: string
        - name: salesPersonCognito
          required: false
          in: query
          description: 営業担当のcognitoID配列
          schema:
            type: array
            items:
              type: string
        - name: documentCode
          required: false
          in: query
          example: Y202210WB10100
          schema:
            type: string
        - name: documentModifiedAtFrom
          required: false
          in: query
          example: 2022/01/01 00:00:00
          description: ドキュメント最終更新日From
          schema:
            format: date-time
            type: string
        - name: documentModifiedAtTo
          required: false
          in: query
          example: 2022/01/01 00:00:00
          description: ドキュメント最終更新日To
          schema:
            format: date-time
            type: string
      responses:
        default:
          description: 原稿、冊子の検索
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentSearchWithCountDto'
      tags:
        - documents
  /v1/documents/searchDiversion:
    get:
      operationId: DocumentController_searchDiversion
      summary: 流用原稿検索
      parameters:
        - name: take
          required: false
          in: query
          example: '10'
          description: 取得件数
          schema:
            type: number
        - name: skip
          required: false
          in: query
          example: '0'
          description: スキップ値
          schema:
            type: number
        - name: documentId
          required: true
          in: query
          example: '1'
          description: 原稿ID
          schema:
            type: number
      responses:
        default:
          description: 流用原稿の検索
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentDiversionSearchDto'
      tags:
        - documents
  /v1/documents/searchAlias:
    get:
      operationId: DocumentController_searchAlias
      summary: 相乗り原稿検索
      parameters:
        - name: take
          required: false
          in: query
          example: '10'
          description: 取得件数
          schema:
            type: number
        - name: skip
          required: false
          in: query
          example: '0'
          description: スキップ値
          schema:
            type: number
        - name: documentId
          required: true
          in: query
          example: '1'
          description: 原稿ID
          schema:
            type: number
        - name: createPersonCognito
          required: true
          in: query
          example: AAAXXXCCVCC
          description: マイストック登録者コード
          schema:
            type: string
      responses:
        default:
          description: 流用原稿の検索
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentAliasSearchDto'
      tags:
        - documents
  /v1/documents/diversion:
    put:
      operationId: DocumentController_diversion
      summary: 原稿流用
      parameters:
        - name: originalDocumentId
          required: true
          in: query
          example: '1'
          description: 流用元原稿ID
          schema:
            type: number
        - name: destinationDocumentId
          required: true
          in: query
          example: '1'
          description: 流用先原稿ID
          schema:
            type: number
      responses:
        default:
          description: idか原稿情報(数字の連番から)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponseWithContentDto'
      tags:
        - documents
  /v1/documents/setAlias:
    put:
      operationId: DocumentController_setAlias
      summary: 原稿相乗り
      parameters:
        - name: originalDocumentId
          required: true
          in: query
          example: '1'
          description: 流用元原稿ID
          schema:
            type: number
        - name: destinationDocumentId
          required: true
          in: query
          example: '1'
          description: 流用先原稿ID
          schema:
            type: number
      responses:
        default:
          description: idか原稿情報(数字の連番から)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponseWithContentDto'
      tags:
        - documents
  /v1/documents/removeAlias/{documentId}:
    put:
      operationId: DocumentController_removeAlias
      summary: 原稿相乗り解除
      parameters:
        - name: documentId
          required: true
          in: path
          schema:
            type: number
      responses:
        default:
          description: idか原稿情報(数字の連番から)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponseWithContentDto'
      tags:
        - documents
  /v1/documents/updateStatus:
    put:
      operationId: DocumentController_updateDocumentStatus
      summary: 原稿ステータス更新
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDocumentStatusDto'
      responses:
        default:
          description: 原稿ステータス更新
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponseDto'
      tags:
        - documents
  /v1/documents/manyUpdateStatus:
    put:
      operationId: DocumentController_manyUpdateDocumentStatus
      summary: 原稿複数id対応ステータス更新
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateManyDocumentStatusDto'
      responses:
        default:
          description: 原稿複数id対応ステータス更新
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentResponseDto'
      tags:
        - documents
  /v1/documents/move-document:
    post:
      operationId: DocumentController_moveDocument
      summary: 原稿を移動する
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveDocumentDto'
      responses:
        default:
          description: 原稿を移動する
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponseDto'
      tags:
        - documents
  /v1/documents/content/{id}:
    get:
      operationId: DocumentController_getDocumentContent
      summary: 原稿内容取得
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        default:
          description: 原稿内容取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponseWithContentDto'
      tags:
        - documents
    put:
      operationId: DocumentController_updateDocumentContent
      summary: 原稿内容更新
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDocumentContentDto'
      responses:
        default:
          description: 原稿内容更新
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponseDto'
      tags:
        - documents
  /v1/documents/contentAndIdml/{id}:
    put:
      operationId: DocumentController_updateDocumentContentAndIDML
      summary: 原稿内容更新
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateDocumentContentAndIdmlDto'
      responses:
        default:
          description: 原稿内容とIDMLファイルの更新
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponseDto'
      tags:
        - documents
  /v1/documents/{id}:
    get:
      operationId: DocumentController_getDocument
      summary: 原稿取得
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: idか原稿情報(数字の連番から)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponseWithProject'
      tags:
        - documents
    put:
      operationId: DocumentController_updateDocument
      summary: 原稿情報更新
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDocumentDto'
      responses:
        default:
          description: 原稿情報更新
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponseDto'
      tags:
        - documents
    delete:
      operationId: DocumentController_deleteDocument
      summary: 原稿削除
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        default:
          description: 原稿削除
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponseDto'
      tags:
        - documents
  /v1/hotel/{hotelCode}:
    get:
      operationId: HotelInfoController_getHotelInfo
      summary: 宿情報取得
      parameters:
        - name: hotelCode
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: 宿情報取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HotelInfoResponse'
      tags:
        - hotel
  /v1/pages/{id}:
    get:
      operationId: PageController_pageWithDocuments
      summary: ページと原稿を取得
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: idより、1ページとその原稿を取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageForBookletDto'
      tags:
        - pages
    delete:
      operationId: PageController_delete
      summary: ページを削除
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
        - name: noUpdateBooklet
          required: true
          in: query
          schema:
            type: boolean
      responses:
        default:
          description: idからページ削除
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponseDto'
      tags:
        - pages
  /v1/pages:
    post:
      operationId: PageController_create
      summary: ページを作成
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePageDto'
      responses:
        default:
          description: ページを作成
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponseDto'
      tags:
        - pages
  /v1/pages/image:
    post:
      operationId: PageController_createImage
      summary: ページを作成(宿原稿以外)
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreatePageImageDto'
      responses:
        default:
          description: ページを作成(宿原稿以外)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponseDto'
      tags:
        - pages
  /v1/pages/page-move:
    post:
      operationId: PageController_pageMove
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovePageRequestDto'
      responses:
        default:
          description: idと移動先のpageNumberを指定してページ移動
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageForBookletDto'
      tags:
        - pages
  /v1/pages/copy-page:
    post:
      operationId: PageController_pageCopy
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyPageDto'
      responses:
        default:
          description: IDとランディング ページ番号を指定してページをコピーします
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageForBookletDto'
      tags:
        - pages
  /v1/pages/valid-page:
    post:
      operationId: PageController_validPage
      parameters:
        - name: bookletId
          required: true
          in: query
          schema:
            type: number
      responses:
        default:
          description: IDとランディング ページ番号を指定してページをコピーします
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageForBookletDto'
      tags:
        - pages
  /v1/settings/pages:
    get:
      operationId: SettingController_pagesSetting
      summary: ページ関連のマスタ情報を取得
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageSettingsDto'
      tags:
        - settings
  /v1/settings/documents:
    get:
      operationId: SettingController_documentSetting
      summary: 原稿関連のマスタ情報を取得
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentSettingsDto'
      tags:
        - settings
  /v1/settings/search-params:
    get:
      operationId: SettingController_searchParams
      summary: 検索関連のマスタ情報を取得
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchParamsDto'
      tags:
        - settings
  /v1/document-templates:
    get:
      operationId: DocumentTemplateController_list
      summary: テンプレート一覧取得
      parameters:
        - name: take
          required: false
          in: query
          example: '10'
          description: 取得件数
          schema:
            type: number
        - name: skip
          required: false
          in: query
          example: '0'
          description: スキップ値
          schema:
            type: number
        - name: name
          required: false
          in: query
          example: テンプレート
          description: テンプレート名
          schema:
            type: string
        - name: documentSizeCode
          required: false
          in: query
          example: ONE_FOUR
          description: 原稿サイズ
          schema:
            enum:
              - ONE_ONE
              - ONE_TWO
              - ONE_FOUR
            type: string
      responses:
        '200':
          description: テンプレート一覧取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTemplateWithCountDto'
      tags:
        - document-templates
  /v1/document-fillers:
    get:
      operationId: DocumentFillerController_list
      summary: 埋草一覧取得
      parameters:
        - name: take
          required: false
          in: query
          example: '10'
          description: 取得件数
          schema:
            type: number
        - name: skip
          required: false
          in: query
          example: '0'
          description: スキップ値
          schema:
            type: number
        - name: name
          required: false
          in: query
          example: 埋草
          description: 検索ワード
          schema:
            type: string
      responses:
        '200':
          description: 埋草一覧取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentFillerWithCountDto'
      tags:
        - document-fillers
    post:
      operationId: DocumentFillerController_create
      summary: 埋め草作成
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateDocumentFillerRequestDto'
      responses:
        default:
          description: 埋め草作成
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentFillerWithSizeMediaType'
      tags:
        - document-fillers
    put:
      operationId: DocumentFillerController_update
      summary: 埋め草更新
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateDocumentFillerRequestDto'
      responses:
        default:
          description: 埋め草更新
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentFillerWithSizeMediaType'
      tags:
        - document-fillers
  /v1/document-fillers/{id}:
    get:
      operationId: DocumentFillerController_detail
      summary: 埋草詳細取得
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: 埋草詳細取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentFillerWithSizeMediaType'
      tags:
        - document-fillers
    delete:
      operationId: DocumentFillerController_delete
      summary: 埋め草削除
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        default:
          description: 埋め草削除
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentFillerWithSizeMediaType'
      tags:
        - document-fillers
  /v1/document-evaluations:
    get:
      operationId: DocumentEvaluationController_list
      summary: 評価パーツ一覧取得
      parameters:
        - name: take
          required: false
          in: query
          example: '10'
          description: 取得件数
          schema:
            type: number
        - name: skip
          required: false
          in: query
          example: '0'
          description: スキップ値
          schema:
            type: number
        - name: name
          required: false
          in: query
          example: 評価1
          description: 評価パーツ名
          schema:
            type: string
        - name: documentSizeCode
          required: false
          in: query
          description: 原稿サイズコード
          schema:
            enum:
              - ONE_ONE
              - ONE_TWO
              - ONE_FOUR
            type: string
      responses:
        '200':
          description: 評価パーツ一覧取得&検索
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentEvaluationWithCountDto'
      tags:
        - document-evaluations
    post:
      operationId: DocumentEvaluationController_createDocumentEvaluation
      summary: 評価パーツ作成
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateDocumentEvaluationDto'
      responses:
        '200':
          description: 評価パーツ作成
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentEvaluationResponseDto'
      tags:
        - document-evaluations
    put:
      operationId: DocumentEvaluationController_updateDocumentEvaluation
      summary: 評価パーツ更新
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateDocumentEvaluationDto'
      responses:
        '200':
          description: 評価パーツ更新
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentEvaluationResponseDto'
      tags:
        - document-evaluations
  /v1/document-evaluations/{id}:
    get:
      operationId: DocumentEvaluationController_getDocumentEvaluation
      summary: 評価詳細
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: idより評価パーツ詳細取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentEvaluationResponseDto'
      tags:
        - document-evaluations
    delete:
      operationId: DocumentEvaluationController_deleteDocumentEvaluation
      summary: 評価パーツ削除
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: idより評価パーツを削除
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentEvaluationResponseDto'
      tags:
        - document-evaluations
  /v1/document-boast-stamps:
    get:
      operationId: DocumentBoastStampController_list
      summary: 自慢スタンプ一覧取得
      parameters:
        - name: take
          required: false
          in: query
          example: '10'
          description: 取得件数
          schema:
            type: number
        - name: skip
          required: false
          in: query
          example: '0'
          description: スキップ値
          schema:
            type: number
        - name: name
          required: false
          in: query
          example: 自慢スタンプ
          description: 自慢スタンプ名
          schema:
            type: string
      responses:
        '200':
          description: 自慢スタンプ一覧取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentBoastStampWithCountDto'
      tags:
        - document-boast-stamps
    post:
      operationId: DocumentBoastStampController_createDocumentBoastStamp
      summary: 自慢スタンプ作成
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateDocumentBoastStampRequestDto'
      responses:
        '200':
          description: 自慢スタンプ作成
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentBoastStampResponseDto'
      tags:
        - document-boast-stamps
    put:
      operationId: DocumentBoastStampController_updateDocumentBoastStamp
      summary: 自慢スタンプ更新
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateDocumentBoastStampDto'
      responses:
        '200':
          description: 自慢スタンプ更新
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentBoastStampResponseDto'
      tags:
        - document-boast-stamps
  /v1/document-boast-stamps/{id}:
    get:
      operationId: DocumentBoastStampController_getDocumentBoastStamp
      summary: 自慢スタンプ詳細取得
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: 自慢スタンプ詳細取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentBoastStampResponseDto'
      tags:
        - document-boast-stamps
    delete:
      operationId: DocumentBoastStampController_deleteDocumentBoastStamp
      summary: 自慢スタンプ削除
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: 自慢スタンプ削除
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentBoastStampResponseDto'
      tags:
        - document-boast-stamps
  /v1/document-head-lines:
    get:
      operationId: DocumentHeadLineController_list
      summary: 見出し一覧
      parameters:
        - name: take
          required: false
          in: query
          example: '10'
          description: 取得件数
          schema:
            type: number
        - name: skip
          required: false
          in: query
          example: '0'
          description: スキップ値
          schema:
            type: number
        - name: name
          required: false
          in: query
          example: 見出し名
          description: 見出し名称
          schema:
            type: string
        - name: editionCodes
          required: false
          in: query
          description: KANTO,TOHOKUなどをarrayで送る
          schema:
            type: array
            items:
              type: string
              enum:
                - HOKKAIDO
                - TOUHOKU
                - JOSHINETSU
                - KITA_KANTO
                - KANTO
                - TOKAI
                - KANSAI
                - HOKURIKU
                - CHUGOKU_SHIKOKU
                - KYUSHU
                - KANSAI_HOKURIKU
                - TOUKAI_HOKURIKU
                - TEST
      responses:
        default:
          description: 見出し一覧
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentHeadLineWithCountDto'
      tags:
        - document-head-lines
    post:
      operationId: DocumentHeadLineController_create
      summary: 見出し作成
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateBeforeDocumentHeadLineDto'
      responses:
        default:
          description: 見出し作成
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentHeadLineResponseDto'
      tags:
        - document-head-lines
    put:
      operationId: DocumentHeadLineController_update
      summary: 見出し更新
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateDocumentHeadLineDto'
      responses:
        default:
          description: 見出し更新
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentHeadLineResponseDto'
      tags:
        - document-head-lines
  /v1/document-head-lines/{id}:
    get:
      operationId: DocumentHeadLineController_getById
      summary: 見出し取得
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        default:
          description: idから見出し取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentHeadLineResponseDto'
      tags:
        - document-head-lines
    delete:
      operationId: DocumentHeadLineController_delete
      summary: 見出し削除
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        default:
          description: idから見出し削除
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentHeadLineResponseDto'
      tags:
        - document-head-lines
  /v1/document-head-lines/image/{id}:
    delete:
      operationId: DocumentHeadLineController_deleteImage
      summary: 見出しイメージ削除
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        default:
          description: idから見出しイメージ削除
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentHeadLineImageResponseDto'
      tags:
        - document-head-lines
  /v1/document-head-lines/edition-code:
    put:
      operationId: DocumentHeadLineController_updateEditionByCode
      summary: 見出しの版&画像登録
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateDocumentHeadLineByCodeDto'
      responses:
        default:
          description: 見出しの版&画像登録
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentHeadLineResponseDto'
      tags:
        - document-head-lines
  /v1/document-head-lines/image:
    put:
      operationId: DocumentHeadLineController_updateImageCode
      summary: 見出し画像コードアップデート
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageCodePublicDto'
      responses:
        default:
          description: 見出し画像コードアップデート
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentHeadLineImageResponseDto'
      tags:
        - document-head-lines
  /v1/margin-bottom:
    get:
      operationId: PageMountController_list
      summary: 欄外下画像リスト
      parameters:
        - name: name
          required: false
          in: query
          example: ''
          description: 欄外下画像名
          schema:
            type: string
        - name: limit
          required: false
          in: query
          example: ''
          description: limit
          schema:
            type: number
        - name: offset
          required: false
          in: query
          example: ''
          description: offset
          schema:
            type: number
        - name: editionCodes
          required: false
          in: query
          description: KANTO,TOHOKUなどをarrayで送る
          schema:
            type: array
            items:
              type: string
              enum:
                - HOKKAIDO
                - TOUHOKU
                - JOSHINETSU
                - KITA_KANTO
                - KANTO
                - TOKAI
                - KANSAI
                - HOKURIKU
                - CHUGOKU_SHIKOKU
                - KYUSHU
                - KANSAI_HOKURIKU
                - TOUKAI_HOKURIKU
                - TEST
      responses:
        default:
          description: 欄外下画像リスト取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageMountWithCountDto'
      tags:
        - margin-bottom
    post:
      operationId: PageMountController_create
      summary: 欄外下画像作成
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateBeforePageMountDto'
      responses:
        default:
          description: 欄外下画像作成
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageMountResponseDto'
      tags:
        - margin-bottom
    put:
      operationId: PageMountController_update
      summary: 欄外下画像更新
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdatePageMountDto'
      responses:
        default:
          description: idから欄外下画像更新
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageMountResponseDto'
      tags:
        - margin-bottom
  /v1/margin-bottom/{id}:
    delete:
      operationId: PageMountController_delete
      summary: 欄外下画像削除
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        default:
          description: idから欄外下画像削除
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageMountResponseDto'
      tags:
        - margin-bottom
    get:
      operationId: PageMountController_getPageMountById
      summary: 欄外下画像詳細
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        default:
          description: idから欄外下画像詳細取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageMountResponseDto'
      tags:
        - margin-bottom
  /v1/margin-bottom/image/{id}:
    delete:
      operationId: PageMountController_deleteImage
      summary: 欄外下画像イメージ削除
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        default:
          description: 欄外下画像イメージidからイメージ削除
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageMountImageResponseDto'
      tags:
        - margin-bottom
  /v1/margin-bottom/edition-code:
    put:
      operationId: PageMountController_updateEditionByCode
      summary: 欄外下画像の版&画像登録
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdatePageMountEditionByCodeDto'
      responses:
        default:
          description: 欄外下画像の版&画像登録
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageMountResponseDto'
      tags:
        - margin-bottom
  /v1/document-my-stocks:
    get:
      operationId: DocumentMyStockController_list
      summary: マイストック検索
      parameters:
        - name: take
          required: false
          in: query
          example: '10'
          description: 取得件数
          schema:
            type: number
        - name: skip
          required: false
          in: query
          example: '0'
          description: スキップ値
          schema:
            type: number
        - name: createPersonCognito
          required: true
          in: query
          example: AAAXXXCCVCC
          schema:
            type: string
      responses:
        default:
          description: マイストックを検索
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentMyStockResponseWithCountDto'
      tags:
        - document-my-stocks
    post:
      operationId: DocumentMyStockController_create
      summary: マイストック作成
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentMyStockDto'
      responses:
        default:
          description: マイストック作成
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentMyStockResponseDto'
      tags:
        - document-my-stocks
    delete:
      operationId: DocumentMyStockController_delete
      summary: マイストック削除
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDocumentMyStockDto'
      responses:
        default:
          description: idを指定してマイストック削除
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentMyStockResponseDto'
      tags:
        - document-my-stocks
  /v1/document-my-stocks/{id}:
    get:
      operationId: DocumentMyStockController_get
      summary: マイストック取得
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        default:
          description: idを指定してマイストック取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentMyStockPublicDto'
      tags:
        - document-my-stocks
  /v1/authorizes/login:
    post:
      operationId: AuthorizeController_login
      summary: ログイン処理
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticateRequestDto'
      responses:
        default:
          description: ログイン処理
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizeResponseDto'
      tags:
        - authorizes
  /v1/authorizes/register:
    post:
      operationId: AuthorizeController_register
      summary: ユーザー登録
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequestDto'
      responses:
        default:
          description: ユーザー登録
          content:
            application/json:
              schema:
                type: string
      tags:
        - authorizes
  /v1/authorizes/verify:
    post:
      operationId: AuthorizeController_verify
      summary: ユーザー確認
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyCodeRequestDto'
      responses:
        default:
          description: ユーザー確認
          content:
            application/json:
              schema:
                type: string
      tags:
        - authorizes
  /v1/authorizes/check-auth:
    get:
      operationId: AuthorizeController_checkForAuthorization
      summary: ユーザー認証
      parameters: []
      responses:
        default:
          description: ユーザー確認
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyResponseDto'
      tags:
        - authorizes
      security:
        - JWT-auth: []
  /v1/authorizes/check-role-ok:
    get:
      operationId: AuthorizeController_checkForLimitedRole
      summary: インクルードロールチェック
      parameters: []
      responses:
        default:
          description: インクルードロールチェック
          content:
            application/json:
              schema:
                type: string
      tags:
        - authorizes
      security:
        - JWT-auth: []
  /v1/authorizes/check-role-ng:
    get:
      operationId: AuthorizeController_checkForAdminRole
      summary: エクスルードロールチェック
      parameters: []
      responses:
        default:
          description: エクスルードロールチェック
          content:
            application/json:
              schema:
                type: string
      tags:
        - authorizes
      security:
        - JWT-auth: []
  /v1/thumb-index:
    get:
      operationId: ThumbIndexController_list
      summary: つめ見出し一覧
      parameters:
        - name: take
          required: false
          in: query
          example: '10'
          description: 取得件数
          schema:
            type: number
        - name: skip
          required: false
          in: query
          example: '0'
          description: スキップ値
          schema:
            type: number
        - name: name
          required: false
          in: query
          example: name
          description: name
          schema:
            type: string
      responses:
        '200':
          description: つめ見出し一覧で取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThumbIndexWithCountResponse'
      tags:
        - thumb-index
    post:
      operationId: ThumbIndexController_create
      summary: つめ見出し作成
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ThumbIndexBeforeCreateDto'
      responses:
        default:
          description: つめ見出し作成
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThumbIndexResponseDto'
      tags:
        - thumb-index
    put:
      operationId: ThumbIndexController_update
      summary: つめ見出し更新
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ThumbIndexUpdateDto'
      responses:
        default:
          description: id指定でつめ見出し更新
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThumbIndexResponseDto'
      tags:
        - thumb-index
  /v1/thumb-index/{id}:
    get:
      operationId: ThumbIndexController_details
      summary: つめ見出し詳細
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: つめ見出し詳細
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThumbIndexResponseDto'
      tags:
        - thumb-index
    delete:
      operationId: ThumbIndexController_delete
      summary: つめ見出し削除
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        default:
          description: id指定でつめ見出し削除
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThumbIndexResponseDto'
      tags:
        - thumb-index
  /v1/thumb-index/image/{id}:
    delete:
      operationId: ThumbIndexController_deleteImage
      summary: つめ見出し画像削除
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        default:
          description: id指定でつめ見出し画像削除
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThumbIndexImageResponseDto'
      tags:
        - thumb-index
  /v1/thumb-index/edition-code:
    put:
      operationId: ThumbIndexController_updateEditionByCode
      summary: つめ見出しの版&画像登録
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateThumbIndexEditionByCodeDto'
      responses:
        default:
          description: つめ見出しの版&画像登録
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThumbIndexResponseDto'
      tags:
        - thumb-index
  /v1/thumb-index/image:
    put:
      operationId: ThumbIndexController_updateImageCode
      summary: つめ見出し画像コードアップデート
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageCodePublicDto'
      responses:
        default:
          description: つめ見出し画像コードアップデート
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThumbIndexImageResponseDto'
      tags:
        - thumb-index
  /v1/converts:
    post:
      operationId: ConvertController_convertEps
      summary: EPS画像変換
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConvertRequestDto'
      responses:
        default:
          description: EPS画像変換
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConvertResponseDto'
      tags:
        - converts
  /v1/document-parts/content:
    post:
      operationId: DocumentPartsController_createDocumentPartsContent
      summary: パーツデータ作成
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDocumentPartsContentDto'
      responses:
        '200':
          description: パーツデータ作成
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentPartsContentResponseDto'
      tags:
        - document-parts
    put:
      operationId: DocumentPartsController_updateDocumentPartsContent
      summary: パーツデータ更新
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDocumentPartsContentDto'
      responses:
        '200':
          description: パーツデータ更新
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentPartsContentResponseDto'
      tags:
        - document-parts
    delete:
      operationId: DocumentPartsController_deleteDocumentPartsContent
      summary: パーツデータ削除
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDocumentPartsContentDto'
      responses:
        '200':
          description: パーツデータ削除
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentPartsContentResponseDto'
      tags:
        - document-parts
  /v1/document-parts:
    get:
      operationId: DocumentPartsController_list
      summary: パーツ一覧取得
      parameters:
        - name: take
          required: false
          in: query
          example: '10'
          description: 取得件数
          schema:
            type: number
        - name: skip
          required: false
          in: query
          example: '0'
          description: スキップ値
          schema:
            type: number
        - name: name
          required: false
          in: query
          example: 評価1
          description: 評価パーツ名
          schema:
            type: string
      responses:
        '200':
          description: パーツ一覧取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentPartsWithCountDto'
      tags:
        - document-parts
    post:
      operationId: DocumentPartsController_createDocumentParts
      summary: パーツ作成
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateDocumentPartsDto'
      responses:
        '200':
          description: パーツ作成
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentPartsResponseDto'
      tags:
        - document-parts
    put:
      operationId: DocumentPartsController_updateDocumentParts
      summary: パーツ更新
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateDocumentPartsDto'
      responses:
        '200':
          description: パーツ更新
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentPartsResponseDto'
      tags:
        - document-parts
  /v1/document-parts/class-category:
    get:
      operationId: DocumentPartsController_getDocumentPartsClassAndCategories
      summary: パーツ種別とカテゴリ取得
      parameters: []
      responses:
        '200':
          description: 版情報
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MasterPartsClassDto'
      tags:
        - document-parts
  /v1/document-parts/content/{id}:
    get:
      operationId: DocumentPartsController_getDocumentPartsContent
      summary: パーツデータ取得
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: idよりパーツデータ取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentPartsContentResponseDto'
      tags:
        - document-parts
  /v1/document-parts/{id}:
    get:
      operationId: DocumentPartsController_getDocumentParts
      summary: パーツ詳細
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: idよりパーツ詳細取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentPartsResponseDto'
      tags:
        - document-parts
    delete:
      operationId: DocumentPartsController_deleteDocumentParts
      summary: パーツ削除
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: idより評価パーツを削除
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentPartsResponseDto'
      tags:
        - document-parts
  /v1/price-table/draft:
    post:
      operationId: PriceTableController_registerDraft
      summary: ''
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterPriceTableDraftDto'
      responses:
        '200':
          description: ''
      tags:
        - price-table
  /v1/price-table/exclusion-date:
    post:
      operationId: PriceTableController_exclusionDate
      summary: ''
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExclusionDateDraftDto'
      responses:
        '200':
          description: ''
      tags:
        - price-table
  /v1/price-table/update:
    post:
      operationId: PriceTableController_updatePriceTable
      summary: ''
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PriceTableUpdateDocument'
      responses:
        '200':
          description: ''
      tags:
        - price-table
  /v1/price-table/feeHeader/register:
    post:
      operationId: PriceTableController_feeHeaderRegister
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainPlanRegister'
      responses:
        '201':
          description: ''
      tags:
        - price-table
  /v1/price-table:
    get:
      operationId: PriceTableController_list
      parameters:
        - name: take
          required: false
          in: query
          example: '10'
          description: 取得件数
          schema:
            type: number
        - name: skip
          required: false
          in: query
          example: '0'
          description: スキップ値
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags:
        - price-table
    delete:
      operationId: PriceTableController_delete
      summary: ''
      parameters:
        - name: ids
          required: true
          in: query
          description: List of delete IDs
          example: []
          schema:
            type: array
            items:
              type: string
        - name: editPath
          required: true
          in: query
          description: ''
          example: ''
          schema:
            type: string
        - name: deleteAll
          required: true
          in: query
          description: ''
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
      tags:
        - price-table
  /v1/price-table/search:
    get:
      operationId: PriceTableController_search
      summary: ''
      parameters:
        - name: hotelCode
          required: false
          in: query
          example: '0001'
          description: hotelCode
          schema:
            type: string
        - name: travelPlanCode
          required: false
          in: query
          example:
            - '0001'
          description: travelPlanCode
          schema:
            type: array
            items:
              type: string
        - name: applicableRoomTypeId
          required: false
          in: query
          example:
            - art1
          description: applicableRoomTypeId
          schema:
            type: array
            items:
              type: string
        - name: numberOfGuestsByRoom
          required: false
          in: query
          example:
            - 1
          description: number_of_guests_by_room
          schema:
            type: array
            items:
              type: number
        - name: fromDate
          required: false
          in: query
          description: from date
          example: 2023-01-01T00:00:00.000Z
          schema:
            format: date-time
            type: string
        - name: toDate
          required: false
          in: query
          description: to date
          example: 2023-03-31T00:00:00.000Z
          schema:
            format: date-time
            type: string
        - name: mediaYearMonth
          required: false
          in: query
          example: '202306'
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - price-table
  /v1/price-table/group-day-of-week:
    get:
      operationId: PriceTableController_groupDayOfWeek
      summary: group day of week in month
      parameters: []
      responses:
        '200':
          description: group day of week in month
      tags:
        - price-table
  /v1/price-table/travel-plans:
    get:
      operationId: PriceTableController_getTravelPlans
      summary: ''
      parameters:
        - name: hotelCode
          required: true
          in: query
          description: hotel code
          example: '0001'
          schema:
            type: string
        - name: mediaYearMonth
          required: true
          in: query
          description: media_yearmonth
          example: '0001'
          schema:
            type: string
        - name: isMain
          required: false
          in: query
          description: get main plan or not
          example: false
          schema:
            type: boolean
        - name: skip
          required: false
          in: query
          schema:
            type: number
        - name: limit
          required: false
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TravelPlanDto'
      tags:
        - price-table
  /v1/price-table/entry-plans:
    get:
      operationId: PriceTableController_getEntryTravels
      summary: ''
      parameters:
        - name: hotelCode
          required: true
          in: query
          description: hotel code
          example: '0001'
          schema:
            type: string
        - name: mediaYearMonth
          required: true
          in: query
          description: media_yearmonth
          example: '0001'
          schema:
            type: string
        - name: isMain
          required: false
          in: query
          description: get main plan or not
          example: false
          schema:
            type: boolean
        - name: skip
          required: false
          in: query
          schema:
            type: number
        - name: limit
          required: false
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntryPlanReponseDto'
      tags:
        - price-table
  /v1/price-table/monthly-number:
    get:
      operationId: PriceTableController_getMonthlyNumber
      summary: ''
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TravelPlanDto'
      tags:
        - price-table
  /v1/price-table/hotel-charge:
    get:
      operationId: PriceTableController_getHotelCharge
      summary: ''
      parameters:
        - name: hotel_code
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - price-table
  /v1/price-table/children-price:
    get:
      operationId: PriceTableController_getChildrenPrice
      summary: ''
      parameters:
        - name: media_yearmonth
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: boolean
      tags:
        - price-table
  /v1/price-table/age-hotel-charge:
    get:
      operationId: PriceTableController_getAgeHotelCharge
      summary: ''
      parameters:
        - name: hotel_code
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HotelAgeChargeDto'
      tags:
        - price-table
  /v1/price-table/age-hotel-charge-2:
    get:
      operationId: PriceTableController_getAgeHotelCharge2
      summary: ''
      parameters:
        - name: hotel_code
          required: true
          in: query
          schema:
            type: string
        - name: start_date
          required: true
          in: query
          schema:
            format: date-time
            type: string
        - name: end_date
          required: true
          in: query
          schema:
            format: date-time
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HotelChargeResponseDto'
      tags:
        - price-table
  /v1/price-table/room-types:
    get:
      operationId: PriceTableController_getRoomTypes
      summary: ''
      parameters:
        - name: hotelCode
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomTypesDto'
      tags:
        - price-table
  /v1/price-table/min-fee:
    get:
      operationId: PriceTableController_getMinFeeMainPlan
      summary: ''
      parameters:
        - name: travelPlanCode
          required: true
          in: query
          schema:
            type: string
        - name: hotel_code
          required: true
          in: query
          schema:
            type: string
        - name: mediaYearMonth
          required: false
          in: query
          example: '202306'
          description: ''
          schema:
            type: string
        - name: fromDate
          required: false
          in: query
          description: from date
          example: 2023-01-01T00:00:00.000Z
          schema:
            format: date-time
            type: string
        - name: toDate
          required: false
          in: query
          description: to date
          example: 2023-03-31T00:00:00.000Z
          schema:
            format: date-time
            type: string
        - name: projectId
          required: true
          in: query
          example: 1
          description: projectID
          schema:
            type: number
      responses:
        '200':
          description: min fee
          content:
            application/json:
              schema:
                type: number
      tags:
        - price-table
  /v1/price-table/{id}:
    get:
      operationId: PriceTableController_getById
      summary: ''
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags:
        - price-table
  /v1/price-table/by-document/{id}:
    get:
      operationId: PriceTableController_getByDocumentId
      summary: ''
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PriceTableResponseDto'
      tags:
        - price-table
  /v1/price-table/all-temp:
    delete:
      operationId: PriceTableController_deleteAllTemp
      summary: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - price-table
  /v1/price-table/save-to-idml:
    post:
      operationId: PriceTableController_saveToIdml
      summary: ''
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveToIdmlDto'
      responses:
        '200':
          description: ''
      tags:
        - price-table
  /v1/review-summary:
    get:
      operationId: ReviewSummaryController_getListReview
      summary: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - review-summary
  /v1/review-summary/{documentId}:
    get:
      operationId: ReviewSummaryController_getReviewByDocument
      summary: ''
      parameters:
        - name: documentId
          required: true
          in: path
          description: ''
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags:
        - review-summary
  /v1/yukodb-test/{path}/{method}:
    post:
      operationId: YukodbTestController_getYukoApi
      summary: ''
      parameters:
        - name: path
          required: true
          in: path
          example: ''
          description: ''
          schema:
            type: string
        - name: method
          required: true
          in: path
          example: ''
          description: ''
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyRequesDto'
      responses:
        '200':
          description: ''
      tags:
        - yukodb-test
  /v1/exports/draft-assistance:
    get:
      operationId: ExportsController_exportDraftAssistance
      summary: 台割り補助エクスポート
      parameters:
        - name: projectId
          required: true
          in: query
          example: 1
          description: projectId
          schema:
            type: number
        - name: editionCode
          required: false
          in: query
          example: HOKKAIDO
          description: 版コード
          schema:
            enum:
              - HOKKAIDO
              - TOUHOKU
              - JOSHINETSU
              - KITA_KANTO
              - KANTO
              - TOKAI
              - KANSAI
              - HOKURIKU
              - CHUGOKU_SHIKOKU
              - KYUSHU
              - KANSAI_HOKURIKU
              - TOUKAI_HOKURIKU
              - TEST
            type: string
        - name: outputFormat
          required: false
          in: query
          example: DAIWARI_HOJO_DATA
          description: 出力データ形式
          schema:
            enum:
              - INDEX_DATA
              - DAIWARI_HOJO_DATA
              - PAGE_KUMIHAN
              - KANMATSU_KEISAIYADO
              - DAIWARI
            type: string
      responses:
        '200':
          description: 台割り補助エクスポート
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportXlsDocumentProgressDto'
      tags:
        - exports
  /v1/exports/draft-pages:
    get:
      operationId: ExportsController_exportDraftPages
      summary: 台割りエクスポート
      parameters:
        - name: projectId
          required: true
          in: query
          example: 1
          description: projectId
          schema:
            type: number
        - name: editionCode
          required: false
          in: query
          example: HOKKAIDO
          description: 版コード
          schema:
            enum:
              - HOKKAIDO
              - TOUHOKU
              - JOSHINETSU
              - KITA_KANTO
              - KANTO
              - TOKAI
              - KANSAI
              - HOKURIKU
              - CHUGOKU_SHIKOKU
              - KYUSHU
              - KANSAI_HOKURIKU
              - TOUKAI_HOKURIKU
              - TEST
            type: string
        - name: outputFormat
          required: false
          in: query
          example: DAIWARI_HOJO_DATA
          description: 出力データ形式
          schema:
            enum:
              - INDEX_DATA
              - DAIWARI_HOJO_DATA
              - PAGE_KUMIHAN
              - KANMATSU_KEISAIYADO
              - DAIWARI
            type: string
      responses:
        '200':
          description: 台割りエクスポート
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportXlsDocumentProgressDto'
      tags:
        - exports
  /v1/exports/document-progress:
    get:
      operationId: ExportsController_exportDocumentProgress
      summary: 原稿進捗状況エクスポート
      parameters:
        - name: projectId
          required: true
          in: query
          example: 1
          description: projectId
          schema:
            type: number
        - name: editionCode
          required: false
          in: query
          example: HOKKAIDO
          description: 版コード
          schema:
            enum:
              - HOKKAIDO
              - TOUHOKU
              - JOSHINETSU
              - KITA_KANTO
              - KANTO
              - TOKAI
              - KANSAI
              - HOKURIKU
              - CHUGOKU_SHIKOKU
              - KYUSHU
              - KANSAI_HOKURIKU
              - TOUKAI_HOKURIKU
              - TEST
            type: string
        - name: outputFormat
          required: false
          in: query
          example: DAIWARI_HOJO_DATA
          description: 出力データ形式
          schema:
            enum:
              - INDEX_DATA
              - DAIWARI_HOJO_DATA
              - PAGE_KUMIHAN
              - KANMATSU_KEISAIYADO
              - DAIWARI
            type: string
      responses:
        '200':
          description: 原稿進捗状況エクスポート
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportXlsDocumentProgressDto'
      tags:
        - exports
  /v1/exports/export-progress/{id}:
    get:
      operationId: ExportsController_getProgress
      summary: idよりエクスポート進捗取得
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        default:
          description: idよりエクスポート進捗取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportXlsDocumentProgressDto'
      tags:
        - exports
  /v1/exports/export-cancel/{id}:
    delete:
      operationId: ExportsController_exportCancel
      summary: idよりエクスポートキャンセル
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        default:
          description: idよりエクスポートキャンセル(実装はダミーで実キャセルはありません。)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportXlsDocumentProgressDto'
      tags:
        - exports
info:
  title: Yukichi
  description: The Yukichi API
  version: '0.1'
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    JWT-auth:
      scheme: bearer
      bearerFormat: JWT
      type: http
      name: JWT
      description: Enter JWT token
      in: header
  schemas:
    MasterEditionCodeDto:
      type: object
      properties:
        code:
          type: string
          enum:
            - HOKKAIDO
            - TOUHOKU
            - JOSHINETSU
            - KITA_KANTO
            - KANTO
            - TOKAI
            - KANSAI
            - HOKURIKU
            - CHUGOKU_SHIKOKU
            - KYUSHU
            - KANSAI_HOKURIKU
            - TOUKAI_HOKURIKU
            - TEST
          example: KANTO
          description: 版コード
        name:
          type: string
          example: 関東
          description: 版コード名
        kana:
          type: string
          example: カントウ
          description: 版コード名
        thumbIndexByEditionCodes:
          type: array
          items:
            $ref: '#/components/schemas/ThumbIndexByEditionCodeDto'
        order:
          type: number
          example: 1
          description: 表示順
      required:
        - code
        - name
        - kana
        - order
    ThumbIndexImageResponseDto:
      type: object
      properties:
        id:
          type: number
          example: '1'
          description: id
        image:
          type: string
          example: /path
          description: 画像パス
        imageConvert:
          type: string
          example: /path
          description: 変換画像パス
        code:
          type: string
          example: '01'
          description: コード
        thumbIndexByEditionId:
          type: number
          example: ''
          description: 版毎のid
        isRight:
          type: boolean
          example: true
          description: 左右フラグ
        groupId:
          type: string
          example: d4d45ed5-51e9-4c83-bb98-3c3e04631aa7
          description: グループID
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
      required:
        - id
        - image
        - imageConvert
        - code
        - thumbIndexByEditionId
        - isRight
        - groupId
        - createdAt
        - modifiedAt
    ThumbIndexByEditionCodeDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: ID
        thumbIndexId:
          type: number
          example: 1
          description: 見出しID
        editionCode:
          type: string
          enum:
            - HOKKAIDO
            - TOUHOKU
            - JOSHINETSU
            - KITA_KANTO
            - KANTO
            - TOKAI
            - KANSAI
            - HOKURIKU
            - CHUGOKU_SHIKOKU
            - KYUSHU
            - KANSAI_HOKURIKU
            - TOUKAI_HOKURIKU
            - TEST
          example: KANTO
          description: 版コード
        masterEditionCode:
          $ref: '#/components/schemas/MasterEditionCodeDto'
        thumbIndexImages:
          type: array
          items:
            $ref: '#/components/schemas/ThumbIndexImageResponseDto'
      required:
        - id
        - thumbIndexId
        - editionCode
    MasterEditionCodePublicDto:
      type: object
      properties:
        code:
          type: string
          enum:
            - HOKKAIDO
            - TOUHOKU
            - JOSHINETSU
            - KITA_KANTO
            - KANTO
            - TOKAI
            - KANSAI
            - HOKURIKU
            - CHUGOKU_SHIKOKU
            - KYUSHU
            - KANSAI_HOKURIKU
            - TOUKAI_HOKURIKU
            - TEST
          example: KANTO
          description: 版コード
        name:
          type: string
          example: 関東
          description: 版コード名
        kana:
          type: string
          example: カントウ
          description: 版コード名
        thumbIndexByEditionCodes:
          type: array
          items:
            $ref: '#/components/schemas/ThumbIndexByEditionCodeDto'
      required:
        - code
        - name
        - kana
    MasterMediaTypePublicDto:
      type: object
      properties:
        code:
          type: string
          enum:
            - MAGAZINE
            - TEST
          example: MAGAZINE
          description: 媒体種別コード
        name:
          type: string
          example: ゆこゆこ本誌
          description: 媒体種別名
        kana:
          type: string
          example: ユコユコホンシ
          description: 媒体種別カナ
        description:
          type: string
          example: ゆこゆこ本誌
          description: 媒体種別説明
      required:
        - code
        - name
        - kana
        - description
    ProjectResponseDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: ID
        mediaTypeCode:
          type: string
          enum:
            - MAGAZINE
            - TEST
          example: MAGAZINE
          description: 媒体種別マスタ
        mediaType:
          $ref: '#/components/schemas/MasterMediaTypePublicDto'
        issueYear:
          type: number
          example: 2022
          description: 月号 年
        issueMonth:
          type: number
          example: 11
          description: 月号 月
        salesStartDate:
          format: date-time
          type: string
          description: 販売開始日
        salesEndDate:
          format: date-time
          type: string
          description: 販売終了日
        reviewRatingStartDate:
          format: date-time
          type: string
          description: 口コミ評価開始日
        reviewRatingEndDate:
          format: date-time
          type: string
          description: 口コミ評価終了日
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
        thumbIndexId:
          type: number
          example: '1'
          description: ツメ見出しid
        headLineId:
          type: number
          example: '1'
          description: 見出しid
        openAirIconOn:
          type: string
          example: /path
          description: 露天アイコンOnパス
        openAirIconOff:
          type: string
          example: /path
          description: 露天アイコンOffパス
        freeFlowingIconOn:
          type: string
          example: /path
          description: かけ流しアイコンOnパス
        freeFlowingIconOff:
          type: string
          example: /path
          description: かけ流しアイコンOffパス
        elevatorIconOn:
          type: string
          example: /path
          description: エレベーターアイコンOn
        elevatorIconOff:
          type: string
          example: /path
          description: エレベーターアイコンOff
        sameDayReservationIconOn:
          type: string
          example: /path
          description: 当日予約アイコンOn
        sameDayReservationIconOff:
          type: string
          example: /path
          description: 当日予約アイコンOff
        pickUpAvailableIconOn:
          type: string
          example: /path
          description: 送迎有アイコンOn
        pickUpAvailableIconOff:
          type: string
          example: /path
          description: 送迎有アイコンOff
        noSmokingIconOn:
          type: string
          example: /path
          description: 禁煙アイコンOn
        noSmokingIconOff:
          type: string
          example: /path
          description: 禁煙アイコンOff
        dinnerVenueMeal:
          type: string
          example: /path
          description: 夕食:会場食
        dinnerPrivateRoomDining:
          type: string
          example: /path
          description: 夕食:個室会場食
        dinnerRoomMeal:
          type: string
          example: /path
          description: 夕食:部屋食
        dinnerVenueMealOorPrivateDiningRoom:
          type: string
          example: /path
          description: 夕食:会場食または個室会場食
        dinnerVenueMealOrRoomService:
          type: string
          example: /path
          description: 夕食:会場食または部屋食
        dinnerRoomOrPrivateDiningRoom:
          type: string
          example: /path
          description: 夕食:部屋食または個室会場食
        dinnerNone:
          type: string
          example: /path
          description: 夕食:なし
        breakfastVenueMeal:
          type: string
          example: /path
          description: 朝食:会場食
        breakfastPrivateRoomDining:
          type: string
          example: /path
          description: 朝食:個室会場食
        breakfastRoomMeal:
          type: string
          example: /path
          description: 朝食:部屋食
        breakfastVenueMealOorPrivateDiningRoom:
          type: string
          example: /path
          description: 朝食:会場食または個室会場食
        breakfastVenueMealOrRoomService:
          type: string
          example: /path
          description: 朝食:会場食または部屋食
        breakfastRoomOrPrivateDiningRoom:
          type: string
          example: /path
          description: 朝食:部屋食または個室会場食
        breakfastNone:
          type: string
          example: /path
          description: 朝食:なし
        issueDataImage:
          type: string
          example: /path
          description: 月号データ
        consumptionTax:
          type: string
          enum:
            - TAX_EXCLUDED
            - TAX_INCLUDED
          example: TAX_INCLUDED
          description: consumption tax
        tax:
          type: number
          example: 1.1
          description: 税率
      required:
        - id
        - mediaTypeCode
        - mediaType
        - issueYear
        - issueMonth
        - salesStartDate
        - salesEndDate
        - reviewRatingStartDate
        - reviewRatingEndDate
        - createdAt
        - modifiedAt
        - deletedAt
        - thumbIndexId
        - headLineId
        - openAirIconOn
        - openAirIconOff
        - freeFlowingIconOn
        - freeFlowingIconOff
        - elevatorIconOn
        - elevatorIconOff
        - sameDayReservationIconOn
        - sameDayReservationIconOff
        - pickUpAvailableIconOn
        - pickUpAvailableIconOff
        - noSmokingIconOn
        - noSmokingIconOff
        - dinnerVenueMeal
        - dinnerPrivateRoomDining
        - dinnerRoomMeal
        - dinnerVenueMealOorPrivateDiningRoom
        - dinnerVenueMealOrRoomService
        - dinnerRoomOrPrivateDiningRoom
        - dinnerNone
        - breakfastVenueMeal
        - breakfastPrivateRoomDining
        - breakfastRoomMeal
        - breakfastVenueMealOorPrivateDiningRoom
        - breakfastVenueMealOrRoomService
        - breakfastRoomOrPrivateDiningRoom
        - breakfastNone
        - issueDataImage
        - consumptionTax
        - tax
    BookletResponseDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: ID
        masterEditionCode:
          $ref: '#/components/schemas/MasterEditionCodePublicDto'
        projectId:
          type: number
          example: 1
          description: ProjectID
        numberOfPages:
          type: number
          example: 20
          description: ページ番号
        documentSerialNumber:
          type: number
          example: 1
          description: 原稿連番
        documents:
          example: []
          type: array
          items:
            $ref: '#/components/schemas/DocumentResponseDto'
        editionCode:
          type: string
          enum:
            - HOKKAIDO
            - TOUHOKU
            - JOSHINETSU
            - KITA_KANTO
            - KANTO
            - TOKAI
            - KANSAI
            - HOKURIKU
            - CHUGOKU_SHIKOKU
            - KYUSHU
            - KANSAI_HOKURIKU
            - TOUKAI_HOKURIKU
            - TEST
          example: KANTO
          description: 版コード
        locked:
          type: boolean
          example: false
          description: 入稿ロック
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
      required:
        - id
        - projectId
        - numberOfPages
        - documentSerialNumber
        - documents
        - editionCode
        - locked
        - createdAt
        - modifiedAt
    MasterPageLayoutDto:
      type: object
      properties:
        alphabet:
          type: string
          example: A
          description: アルファベット
        name:
          type: string
          example: |-
            原稿 1/2×1
            原稿 1/4×2
          description: レイアウト名
        image:
          type: string
          example: /path
          description: 画像パス
        layout:
          type: string
          example: 1/4*2,1/2*1
          description: レイアウトの構成
        order:
          type: number
          example: 1
          description: 表示順
      required:
        - alphabet
        - name
        - image
        - layout
        - order
    MasterPageTypeDto:
      type: object
      properties:
        code:
          type: string
          enum:
            - HOTEL_MANUSCRIPT
            - CHAPTER_TITLE_PAGE
            - ADVERTISEMENT
            - INFORMATION
          example: ADVERTISEMENT
          description: ページ種別
        name:
          type: string
          example: 宿原稿
          description: ページ種別名
        kana:
          type: string
          example: ヤドゲンコウ
          description: ページ種別名カナ
        order:
          type: number
          example: 1
          description: 表示順
      required:
        - code
        - name
        - kana
        - order
    PageMountDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: 欄外下画像ID
        name:
          type: string
          example: A01_R
          description: 欄外下画像名
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日(表示されない)
      required:
        - id
        - name
        - createdAt
        - modifiedAt
    PageResponseDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: id
        projectId:
          type: number
          example: 1
          description: プロジェクトID
        bookletId:
          type: number
          example: 1
          description: 冊子ID
        layoutAlphabet:
          type: string
          example: A
          description: レイアウトのアルファベット
        layout:
          $ref: '#/components/schemas/MasterPageLayoutDto'
        pageNumber:
          type: number
          example: 1
          description: ページ番号
        pageTypeCode:
          type: string
          enum:
            - HOTEL_MANUSCRIPT
            - CHAPTER_TITLE_PAGE
            - ADVERTISEMENT
            - INFORMATION
          example: ADVERTISEMENT
          description: 広告
        pageType:
          $ref: '#/components/schemas/MasterPageTypeDto'
        mountId:
          type: number
          example: 1
          description: 欄外下画像ID
        mount:
          $ref: '#/components/schemas/PageMountDto'
        thumbIndexImageGroupId:
          type: string
          example: 1d23df1b-3db6-4908-86a0-489c006c67f4
          description: つめ見出しグループID
        image:
          type: string
          example: ./path
          description: イメージパス
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
      required:
        - id
        - projectId
        - bookletId
        - layoutAlphabet
        - pageNumber
        - pageTypeCode
        - mountId
        - thumbIndexImageGroupId
        - createdAt
        - modifiedAt
        - deletedAt
    MasterDocumentTypeDto:
      type: object
      properties:
        code:
          type: string
          enum:
            - HOTEL_MANUSCRIPT
            - HEAD_LINE
            - FILLER
          example: HEAD_LINE
          description: 原稿タイプ
        name:
          type: string
          example: 見出し
          description: 原稿タイプ名
        kana:
          type: string
          example: ミダシ
          description: 原稿タイプカナ
        order:
          type: number
          example: 1
          description: 原稿タイプ表示順
      required:
        - code
        - name
        - kana
        - order
    MasterDocumentSizeDto:
      type: object
      properties:
        code:
          type: string
          enum:
            - ONE_ONE
            - ONE_TWO
            - ONE_FOUR
          example: ONE_FOUR
          description: 原稿サイズコード
        name:
          type: string
          example: 1/1
          description: 原稿サイズ名
        kana:
          type: string
          example: イチイチ
          description: 原稿サイズカナ
        order:
          type: number
          example: 1
          description: 原稿サイズ表示順
      required:
        - code
        - name
        - kana
        - order
    DocumentTemplateDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: id
        name:
          type: string
          example: A001
          description: テンプレート名
        inDesignVersion:
          type: string
          example: バージョン
          description: バージョン
        pcType:
          type: string
          example: PC
          description: PC
          enum:
            - WIN
            - MAC
        comment:
          type: string
          example: テンプレートのコメント
          description: テンプレートのコメント(自由入力以外に)
        history:
          type: string
          example: テンプレートの変更履歴
          description: テンプレートの変更履歴
        documentSizeCode:
          type: string
          enum:
            - ONE_ONE
            - ONE_TWO
            - ONE_FOUR
          example: ONE_FOUR
          description: 原稿サイズ
        inDesignFile:
          type: string
          example: /path
          description: 画像パス
        imageXml:
          type: string
          example: /path
          description: 画像パス
        imageThumbnail:
          type: string
          example: /path
          description: 画像パス
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日(表示されない)
        documentEvaluationId:
          type: number
          example: 1
          description: Document Evaluation Id
      required:
        - id
        - name
        - inDesignVersion
        - pcType
        - comment
        - history
        - documentSizeCode
        - inDesignFile
        - imageXml
        - imageThumbnail
        - createdAt
        - modifiedAt
    DocumentFillerDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: id
        code:
          type: string
          example: AABBDD
          description: congnitoId
        name:
          type: string
          example: 埋め草1
          description: 埋め草名称
        image:
          type: string
          example: /path
          description: イメージパス
        imageConvert:
          type: string
          example: /path
          description: 変換済みイメージパス
        freeWord:
          type: string
          example: 内容欄
          description: 内容欄
        comment:
          type: string
          example: 備考欄
          description: 備考欄
        documentSizeCode:
          type: string
          enum:
            - ONE_ONE
            - ONE_TWO
            - ONE_FOUR
          example: ONE_ONE
          description: 原稿サイズ
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
      required:
        - id
        - code
        - name
        - image
        - imageConvert
        - freeWord
        - documentSizeCode
        - createdAt
        - modifiedAt
    DocumentHeadLineDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: ID
        name:
          type: string
          example: 見出し1
          description: 見出し名
        code:
          type: number
          example: 1
          description: 見出しコード
        freeWord:
          type: string
          example: free word
          description: 見出し自由入力
        documentSizeCode:
          type: string
          enum:
            - ONE_ONE
            - ONE_TWO
            - ONE_FOUR
          example: ONE_FOUR
          description: 原稿サイズ
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          description: 削除日(表示されない)
      required:
        - id
        - name
        - code
        - freeWord
        - documentSizeCode
        - createdAt
        - modifiedAt
    PersonDto:
      type: object
      properties:
        personCognito:
          type: string
          example: AAAXXXCCVCC
          description: cognito一意のID
        personName:
          type: string
          example: 山田太郎
          description: 担当者名
        isSales:
          type: boolean
          example: false
          description: 営業担当か？
        isManuscript:
          type: boolean
          example: true
          description: 編集担当か？
        authorityLevel:
          type: number
          example: 1
          description: 権限レベル
        isFired:
          type: boolean
          example: false
          description: 退職済みか？
      required:
        - personCognito
        - personName
        - isSales
        - isManuscript
        - authorityLevel
        - isFired
    MasterDocumentStatusDto:
      type: object
      properties:
        code:
          type: string
          enum:
            - MAKING
            - NOT_START
            - CHECKING
            - SEND_BACK
            - PROOFREADING
          example: CHECKING
          description: 原稿ステータスコード
        name:
          type: string
          example: 制作中
          description: 原稿ステータス名
        kana:
          type: string
          example: サクセイチュウ
          description: 原稿ステータスカナ
        order:
          type: number
          example: 1
          description: 表示順
      required:
        - code
        - name
        - kana
        - order
    PriceTableResponseDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: id
        documentId:
          type: number
          example: 1
          description: id
        docId:
          type: number
        htmlMerge:
          type: string
        html:
          type: string
          example: 1
          description: html
        exclusion:
          type: boolean
          example: false
          description: hotelCode
        exclusionString:
          type: string
          example: false
          description: hotelCode
        settings:
          type: string
          example: 1
          description: html
        json:
          type: string
          example: 1
          description: html
        jsonMerged:
          type: string
        query:
          type: string
          example: 1
          description: html
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
      required:
        - id
        - docId
        - html
        - exclusion
        - exclusionString
        - settings
        - json
        - query
        - createdAt
        - modifiedAt
        - deletedAt
    DocumentContentResponseDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: document content id
        documentId:
          type: number
          example: 1
          description: document id
        row1Pattern:
          type: string
          enum:
            - COLUMN_A
            - COLUMN_B
            - COLUMN_C
            - COLUMN_D
            - COLUMN_E
            - COLUMN_F
            - COLUMN_G
            - COLUMN_H
            - COLUMN_I
            - COLUMN_HALF_A
            - COLUMN_HALF_B
            - SQUARE_A
            - SQUARE_B
          example: COLUMN_A
          description: パターン1段目
        row2Pattern:
          type: string
          enum:
            - COLUMN_A
            - COLUMN_B
            - COLUMN_C
            - COLUMN_D
            - COLUMN_E
            - COLUMN_F
            - COLUMN_G
            - COLUMN_H
            - COLUMN_I
            - COLUMN_HALF_A
            - COLUMN_HALF_B
            - SQUARE_A
            - SQUARE_B
          example: COLUMN_A
          description: パターン2段目
        row3Pattern:
          type: string
          enum:
            - COLUMN_A
            - COLUMN_B
            - COLUMN_C
            - COLUMN_D
            - COLUMN_E
            - COLUMN_F
            - COLUMN_G
            - COLUMN_H
            - COLUMN_I
            - COLUMN_HALF_A
            - COLUMN_HALF_B
            - SQUARE_A
            - SQUARE_B
          example: COLUMN_A
          description: パターン3段目
        row4Pattern:
          type: string
          enum:
            - COLUMN_A
            - COLUMN_B
            - COLUMN_C
            - COLUMN_D
            - COLUMN_E
            - COLUMN_F
            - COLUMN_G
            - COLUMN_H
            - COLUMN_I
            - COLUMN_HALF_A
            - COLUMN_HALF_B
            - SQUARE_A
            - SQUARE_B
          example: COLUMN_A
          description: パターン4段目
        priceTableTopPattern:
          type: string
          enum:
            - TABLE_A
            - TABLE_B
            - TABLE_C
          example: TABLE_A
          description: パターン料金表上
        bathExclusiveFlag:
          type: boolean
          example: false
          description: 風呂評価対象外
        furiganaSmall:
          type: string
          example: ことひらおんせん
          description: ふりがな小
        furiganaLarge:
          type: string
          example: おんやど しきしまかん
          description: ふりがな大
        hotelNameSmall:
          type: string
          example: ことひら温泉
          description: 宿名小
        hotelNameLarge:
          type: string
          example: 御宿 敷島館
          description: 宿名大
        prefectureName:
          type: string
          example: 香川県
          description: 都道府県
        spaName:
          type: string
          example: こんぽら温泉郷
          description: 温泉地名
        hotelCatchCopy:
          type: string
          example: ゆこホテル
          description: 宿のキャッチテキスト
        exteriorPhoto:
          type: string
          example: /exteriorPhoto.jpg
          description: 宿外観写真
        accessInfoText:
          type: string
          example: ''
          description: アクセス情報テキスト
        numberOfGuestRooms:
          type: number
          example: '100'
          description: 客室数
        breakfastPlace:
          type: string
          enum:
            - NONE
            - RESTAURANT
            - PRIVATE_RESTAURANT
            - GUESTROOM
            - RESTAURANT_AND_PRIVATE_RESTAURANT
            - RESTAURANT_AND_GUESTROOM
            - GUESTROOM_AND_PRIVATE_RESTAURANT
          example: GUESTROOM
          description: 朝食場所
        dinnerPlace:
          type: string
          enum:
            - NONE
            - RESTAURANT
            - PRIVATE_RESTAURANT
            - GUESTROOM
            - RESTAURANT_AND_PRIVATE_RESTAURANT
            - RESTAURANT_AND_GUESTROOM
            - GUESTROOM_AND_PRIVATE_RESTAURANT
          example: GUESTROOM
          description: 夕食場所
        salesStartDate:
          format: date-time
          type: string
          example: 2022/01/01
          description: 販売開始日
        salesEndDate:
          format: date-time
          type: string
          example: 2022/01/01
          description: 販売終了日
        mainPlanCode:
          type: string
          example: ''
          description: メインプランコード
        travelPlanCode:
          description: 旅行プランコード
          type: array
          items:
            type: string
        priceTableId:
          type: number
          example: 1
          description: 料金表ID
        travelPlanNameOverwriteText:
          type: string
          example: ''
          description: 旅行プラン名上書きテキスト
        travelPlanNameOverwriteVisibility:
          type: boolean
          example: false
          description: 旅行プラン名を上書きするか？
        bathTaxChildren:
          type: number
          example: 0
          description: 入湯税・子供
        bathTaxToddler:
          type: number
          example: 0
          description: 入湯税・幼児
        bathTax:
          type: number
          example: 0
          description: 入湯税・大人
        bathTaxVisibility:
          type: boolean
          example: false
          description: 入湯税を表示？
        bathTaxBreakLine:
          type: boolean
          example: false
          description: 入湯税を改行？
        childrenFareVisibility:
          type: boolean
          example: false
          description: 子供料金を表示？
        childrenFareBreakLine:
          type: boolean
          example: false
          description: 子供料金を改行？
        isPayCredit:
          type: boolean
          example: false
          description: クレジット支払可能フラグ
        payMethodVisibility:
          type: boolean
          example: false
          description: 支払方法を表示？
        payMethodBreakLine:
          type: boolean
          example: false
          description: 支払方法を改行？
        sameDayReservationText:
          type: string
          example: ''
          description: 当日予約上書きテキスト
        sameDayReservationVisibility:
          type: boolean
          example: false
          description: 当日予約を表示？
        sameDayReservationBreakLine:
          type: boolean
          example: false
          description: 当日予約を改行？
        checkInStartTime:
          type: string
          example: '1500'
          description: チェックイン時間
        checkoutTime:
          type: string
          example: '1500'
          description: チェックアウト時間
        checkInOutVisibility:
          type: boolean
          example: false
          description: チェックイン・アウトを表示？
        checkInOutBreakLine:
          type: boolean
          example: false
          description: チェックイン・アウトを改行？
        planRoomText:
          type: string
          example: ''
          description: メインプラン部屋テキスト
        planRoomVisibility:
          type: boolean
          example: false
          description: メインプラン部屋を表示？
        planRoomBreakLine:
          type: boolean
          example: false
          description: メインプラン部屋を改行？
        bathText:
          type: string
          example: ''
          description: 風呂テキスト
        bathVisibility:
          type: boolean
          example: false
          description: お風呂を表示？
        bathBreakLine:
          type: boolean
          example: false
          description: 風呂を改行？
        hotSpringQualityText:
          type: string
          example: ''
          description: 泉質テキスト
        hotSpringQualityVisibility:
          type: boolean
          example: false
          description: 泉質を表示？
        bikingDinnerStatus:
          type: string
          enum:
            - NONE
            - PARTIAL
            - FULL
          example: FULL
          description: バイキング？
        petAllowedStatus:
          type: string
          enum:
            - NONE
            - PARTIAL
            - FULL
          example: FULL
          description: ペット可？
        bedStatus:
          type: string
          enum:
            - NONE
            - PARTIAL
            - FULL
          example: FULL
          description: ベッド？
        roomDinnerStatus:
          type: string
          enum:
            - NONE
            - PARTIAL
            - FULL
          example: FULL
          description: 部屋食？
        washletStatus:
          type: string
          enum:
            - NONE
            - PARTIAL
            - FULL
          example: FULL
          description: ウォシュレット？
        smokingStatus:
          type: string
          enum:
            - NONE
            - PARTIAL
            - FULL
          example: FULL
          description: 禁煙？
        hasOpenAirBath:
          type: boolean
          example: false
          description: 露天風呂？
        hasKakenagashi:
          type: boolean
          example: false
          description: かけ流し？
        hasElevator:
          type: boolean
          example: false
          description: エレベーター？
        hasSameDayReservation:
          type: boolean
          example: false
          description: 当日予約可？
        hasDropOffService:
          type: boolean
          example: false
          description: 送迎あり？
        hasReservedBath:
          type: boolean
          example: false
          description: 貸切風呂？
        hasSingleGuest:
          type: boolean
          example: false
          description: 一人泊？
        priceTables:
          example: []
          description: feeTable
          type: array
          items:
            $ref: '#/components/schemas/PriceTableResponseDto'
      required:
        - id
        - documentId
        - salesStartDate
        - salesEndDate
    DocumentResponseDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: ''
        documentCode:
          type: string
          example: Y202210WB10100
          description: 原稿ID
        project:
          $ref: '#/components/schemas/ProjectResponseDto'
        booklet:
          $ref: '#/components/schemas/BookletResponseDto'
        page:
          $ref: '#/components/schemas/PageResponseDto'
        projectId:
          type: number
          example: 1
          description: プロジェクトID
        bookletId:
          type: number
          example: 1
          description: 冊子ID
        pageId:
          type: number
          example: 1
          description: ページID
        documentTypeCode:
          type: string
          enum:
            - HOTEL_MANUSCRIPT
            - HEAD_LINE
            - FILLER
          example: FILLER
          description: 原稿種別
        documentType:
          $ref: '#/components/schemas/MasterDocumentTypeDto'
        documentSizeCode:
          type: string
          enum:
            - ONE_ONE
            - ONE_TWO
            - ONE_FOUR
          example: ONE_ONE
          description: 原稿サイズコード
        documentSize:
          $ref: '#/components/schemas/MasterDocumentSizeDto'
        sharingAliasTo:
          type: array
          items:
            $ref: '#/components/schemas/DocumentResponseDto'
        aliasId:
          type: number
          example: 1
          description: 相乗り先原稿ID
        alias:
          $ref: '#/components/schemas/DocumentResponseDto'
        pageNumber:
          type: number
          example: 1
          description: ページ番号
        templateId:
          type: number
          example: 1
          description: テンプレートID
        template:
          $ref: '#/components/schemas/DocumentTemplateDto'
        fillerId:
          type: number
          example: 1
          description: 埋め草ID
        filler:
          $ref: '#/components/schemas/DocumentFillerDto'
        headLineId:
          type: number
          example: 1
          description: ヘッドラインID
        headLine:
          $ref: '#/components/schemas/DocumentHeadLineDto'
        hotelCode:
          type: string
          example: '2986'
          description: ホテルコード
        jalanCode:
          type: string
          example: 00XX111100
          description: じゃらんコード
        manuscriptPersonCognito:
          type: string
          example: AAAXXXCCVCC
          description: 原稿担当者コード
        manuscriptPerson:
          $ref: '#/components/schemas/PersonDto'
        modifierPersonCognito:
          type: string
          example: AAAXXXCCVCC
          description: 原稿編集者コード
        modifierPerson:
          $ref: '#/components/schemas/PersonDto'
        salesPersonCognito:
          type: string
          example: AAAXXXCCVCC
          description: 営業担当コード
        salesPerson:
          $ref: '#/components/schemas/PersonDto'
        statusCode:
          type: string
          enum:
            - MAKING
            - NOT_START
            - CHECKING
            - SEND_BACK
            - PROOFREADING
          example: CHECKING
          description: 原稿ステータスコード
        status:
          $ref: '#/components/schemas/MasterDocumentStatusDto'
        fromEntry:
          type: boolean
          example: false
          description: エントリーからか
        order:
          type: number
          example: 1
          description: 表示順
        createdAt:
          format: date-time
          type: string
          description: 作成日
        documentContent:
          description: 原稿コンテンツ
          allOf:
            - $ref: '#/components/schemas/DocumentContentResponseDto'
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
      required:
        - id
        - documentCode
        - projectId
        - bookletId
        - pageId
        - documentTypeCode
        - documentSizeCode
        - pageNumber
        - hotelCode
        - jalanCode
        - manuscriptPersonCognito
        - manuscriptPerson
        - modifierPersonCognito
        - statusCode
        - order
        - createdAt
        - documentContent
        - modifiedAt
    ProjectListInBookletInProjectDto:
      type: object
      properties:
        mediaType:
          $ref: '#/components/schemas/MasterMediaTypePublicDto'
        issueYear:
          type: number
          example: 2022
          description: 月号 年
        issueMonth:
          type: number
          example: 11
          description: 月号 月
      required:
        - mediaType
        - issueYear
        - issueMonth
    BookletSearchResponseDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: ID
        masterEditionCode:
          $ref: '#/components/schemas/MasterEditionCodePublicDto'
        projectId:
          type: number
          example: 1
          description: ProjectID
        numberOfPages:
          type: number
          example: 20
          description: ページ番号
        documentSerialNumber:
          type: number
          example: 1
          description: 原稿連番
        documents:
          example: []
          type: array
          items:
            $ref: '#/components/schemas/DocumentResponseDto'
        editionCode:
          type: string
          enum:
            - HOKKAIDO
            - TOUHOKU
            - JOSHINETSU
            - KITA_KANTO
            - KANTO
            - TOKAI
            - KANSAI
            - HOKURIKU
            - CHUGOKU_SHIKOKU
            - KYUSHU
            - KANSAI_HOKURIKU
            - TOUKAI_HOKURIKU
            - TEST
          example: KANTO
          description: 版コード
        locked:
          type: boolean
          example: false
          description: 入稿ロック
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
        project:
          $ref: '#/components/schemas/ProjectListInBookletInProjectDto'
      required:
        - id
        - projectId
        - numberOfPages
        - documentSerialNumber
        - documents
        - editionCode
        - locked
        - createdAt
        - modifiedAt
        - project
    BookletSearchWithCountDto:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BookletSearchResponseDto'
        count:
          type: number
          example: '1'
          description: ''
      required:
        - data
        - count
    PageForBookletDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: id
        projectId:
          type: number
          example: 1
          description: プロジェクトID
        bookletId:
          type: number
          example: 1
          description: 冊子ID
        layoutAlphabet:
          type: string
          example: A
          description: レイアウトのアルファベット
        layout:
          $ref: '#/components/schemas/MasterPageLayoutDto'
        pageNumber:
          type: number
          example: 1
          description: ページ番号
        pageTypeCode:
          type: string
          enum:
            - HOTEL_MANUSCRIPT
            - CHAPTER_TITLE_PAGE
            - ADVERTISEMENT
            - INFORMATION
          example: ADVERTISEMENT
          description: 広告
        pageType:
          $ref: '#/components/schemas/MasterPageTypeDto'
        mountId:
          type: number
          example: 1
          description: 欄外下画像ID
        mount:
          $ref: '#/components/schemas/PageMountDto'
        thumbIndexImageGroupId:
          type: string
          example: 1d23df1b-3db6-4908-86a0-489c006c67f4
          description: つめ見出しグループID
        image:
          type: string
          example: ./path
          description: イメージパス
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
        documents:
          type: array
          items:
            $ref: '#/components/schemas/DocumentResponseDto'
      required:
        - id
        - projectId
        - bookletId
        - layoutAlphabet
        - pageNumber
        - pageTypeCode
        - mountId
        - thumbIndexImageGroupId
        - createdAt
        - modifiedAt
        - deletedAt
        - documents
    BookletDetailResponseDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: ID
        masterEditionCode:
          $ref: '#/components/schemas/MasterEditionCodePublicDto'
        projectId:
          type: number
          example: 1
          description: ProjectID
        numberOfPages:
          type: number
          example: 20
          description: ページ番号
        documentSerialNumber:
          type: number
          example: 1
          description: 原稿連番
        documents:
          example: []
          type: array
          items:
            $ref: '#/components/schemas/DocumentResponseDto'
        editionCode:
          type: string
          enum:
            - HOKKAIDO
            - TOUHOKU
            - JOSHINETSU
            - KITA_KANTO
            - KANTO
            - TOKAI
            - KANSAI
            - HOKURIKU
            - CHUGOKU_SHIKOKU
            - KYUSHU
            - KANSAI_HOKURIKU
            - TOUKAI_HOKURIKU
            - TEST
          example: KANTO
          description: 版コード
        locked:
          type: boolean
          example: false
          description: 入稿ロック
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
        pages:
          type: array
          items:
            $ref: '#/components/schemas/PageForBookletDto'
        project:
          $ref: '#/components/schemas/ProjectResponseDto'
      required:
        - id
        - projectId
        - numberOfPages
        - documentSerialNumber
        - documents
        - editionCode
        - locked
        - createdAt
        - modifiedAt
        - pages
        - project
    CreateBookletDto:
      type: object
      properties:
        editionCode:
          type: string
          enum:
            - HOKKAIDO
            - TOUHOKU
            - JOSHINETSU
            - KITA_KANTO
            - KANTO
            - TOKAI
            - KANSAI
            - HOKURIKU
            - CHUGOKU_SHIKOKU
            - KYUSHU
            - KANSAI_HOKURIKU
            - TOUKAI_HOKURIKU
            - TEST
          example: KANTO
          description: 版コード
        projectId:
          type: number
          example: 1
          description: ProjectID
        numberOfPages:
          type: number
          example: 20
          description: ページ数
      required:
        - editionCode
        - projectId
        - numberOfPages
    UpdateBookletDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: id
        numberOfPages:
          type: number
          example: 20
          description: ページ数
      required:
        - id
    UpdateLockDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: id
        locked:
          type: boolean
          example: true
          description: 版ロック
      required:
        - id
        - locked
    CopyBookletDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: id
        projectId:
          type: number
          example: 1
          description: ProjectID
      required:
        - id
        - projectId
    DocumentSearchDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: ''
        hotelCode:
          type: string
          example: '234'
          description: 宿コード
        project:
          $ref: '#/components/schemas/ProjectResponseDto'
        booklet:
          $ref: '#/components/schemas/BookletResponseDto'
        page:
          $ref: '#/components/schemas/PageResponseDto'
        documentSize:
          $ref: '#/components/schemas/MasterDocumentSizeDto'
        status:
          $ref: '#/components/schemas/MasterDocumentStatusDto'
        manuscriptPerson:
          $ref: '#/components/schemas/PersonDto'
        salesPerson:
          $ref: '#/components/schemas/PersonDto'
        documentContent:
          $ref: '#/components/schemas/DocumentContentResponseDto'
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        documentCode:
          type: string
          example: ''
          description: ''
      required:
        - id
        - hotelCode
        - project
        - booklet
        - page
        - documentSize
        - status
        - manuscriptPerson
        - salesPerson
        - documentContent
        - modifiedAt
        - documentCode
    BookletProgressAggregationDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: ID
        masterEditionCode:
          $ref: '#/components/schemas/MasterEditionCodePublicDto'
        projectId:
          type: number
          example: 1
          description: ProjectID
        numberOfPages:
          type: number
          example: 20
          description: ページ番号
        documentSerialNumber:
          type: number
          example: 1
          description: 原稿連番
        documents:
          example: []
          type: array
          items:
            $ref: '#/components/schemas/DocumentResponseDto'
        notStart:
          type: number
          example: 1
          description: 未着手ステータスカウント
        makingCount:
          type: number
          example: 1
          description: 作成中ステータスカウント
        checkingCount:
          type: number
          example: 1
          description: チェックステータスカウント
        sendBackCount:
          type: number
          example: 1
          description: 差し戻しステータスカウント
        proofreadingCount:
          type: number
          example: 1
          description: 校了ステータスカウント
        myStockCount:
          type: number
          example: 1
          description: 下書き原稿カウント
        matchedCount:
          type: number
          example: 1
          description: マッチングOKカウント
        unusedCount:
          type: number
          example: 1
          description: 不要原稿カウント
        entryCount:
          type: number
          example: 1
          description: エントリ数カウント
        isEndProofreading:
          type: boolean
          example: false
          description: 校了完了未校了フラグ false=未校了 true=ボタンをそれぞれ表示(入稿ロックボタンなど)
        locked:
          type: boolean
          example: false
          description: 入稿ロックフラグ
        lockedCount:
          type: number
          example: 1
          description: ロックドキュメント数 カウント
        matchedDocuments:
          type: array
          items:
            $ref: '#/components/schemas/DocumentSearchDto'
        unusedDocuments:
          type: array
          items:
            $ref: '#/components/schemas/DocumentSearchDto'
        myStockDocuments:
          type: array
          items:
            $ref: '#/components/schemas/DocumentSearchDto'
      required:
        - id
        - projectId
        - numberOfPages
        - documentSerialNumber
        - documents
        - notStart
        - makingCount
        - checkingCount
        - sendBackCount
        - proofreadingCount
        - myStockCount
        - matchedCount
        - unusedCount
        - entryCount
        - isEndProofreading
        - locked
        - lockedCount
        - matchedDocuments
        - unusedDocuments
        - myStockDocuments
    EntryFileRequestDto:
      type: object
      properties:
        projectId:
          type: number
          example: 1
          description: projectId
        entryFile:
          type: string
          description: エントリーxls
          format: binary
      required:
        - projectId
        - entryFile
    ImportXlsDocumentProgressDto:
      type: object
      properties:
        image:
          type: string
          example: /path
          description: イメージパス
        importType:
          type: string
          enum:
            - DRAFT_PAGE
            - ENTRY
            - DOWNLOAD_DRAFT_PAGE
            - DOWNLOAD_DRAFT_ASSIST
            - DOWNLOAD_DOC_PROGRESS
          example: DRAFT_PAGE
          description: インポート種別
        id:
          type: number
          example: 1
          description: id
        projectId:
          type: number
          example: 1
          description: projectId
        progress:
          type: number
          example: 1
          description: 進捗
        status:
          type: string
          enum:
            - PROGRESS
            - COMPLETE
            - ERROR
            - CANCEL
          example: PROGRESS
          description: 進捗
        message:
          type: string
          example: メッセージ
          description: メッセージ
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
      required:
        - image
        - importType
        - id
        - projectId
        - progress
        - status
        - message
        - createdAt
        - modifiedAt
    DraftPagesFileRequestDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: projectId
        draftPagesFile:
          type: string
          description: 台割りxls
          format: binary
      required:
        - id
        - draftPagesFile
    ImportXlsDocumentProgressSSMDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: messageId(キャッシュ対策用)
        data:
          $ref: '#/components/schemas/ImportXlsDocumentProgressDto'
      required:
        - id
        - data
    ImportXlsDocumentProgressDtoWithCountDto:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ImportXlsDocumentProgressDto'
        count:
          type: number
          example: '1'
          description: ''
      required:
        - data
        - count
    BookletForProjectListDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: ID
        masterEditionCode:
          $ref: '#/components/schemas/MasterEditionCodePublicDto'
        projectId:
          type: number
          example: 1
          description: ProjectID
        numberOfPages:
          type: number
          example: 20
          description: ページ番号
        documentSerialNumber:
          type: number
          example: 1
          description: 原稿連番
        documents:
          example: []
          type: array
          items:
            $ref: '#/components/schemas/DocumentResponseDto'
        project:
          $ref: '#/components/schemas/ProjectListInBookletInProjectDto'
      required:
        - id
        - projectId
        - numberOfPages
        - documentSerialNumber
        - documents
    ProjectListResponseDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: ID
        mediaTypeCode:
          type: string
          enum:
            - MAGAZINE
            - TEST
          example: MAGAZINE
          description: 媒体種別マスタ
        mediaType:
          $ref: '#/components/schemas/MasterMediaTypePublicDto'
        issueYear:
          type: number
          example: 2022
          description: 月号 年
        issueMonth:
          type: number
          example: 11
          description: 月号 月
        salesStartDate:
          format: date-time
          type: string
          description: 販売開始日
        salesEndDate:
          format: date-time
          type: string
          description: 販売終了日
        reviewRatingStartDate:
          format: date-time
          type: string
          description: 口コミ評価開始日
        reviewRatingEndDate:
          format: date-time
          type: string
          description: 口コミ評価終了日
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
        booklets:
          type: array
          items:
            $ref: '#/components/schemas/BookletForProjectListDto'
      required:
        - id
        - mediaTypeCode
        - mediaType
        - issueYear
        - issueMonth
        - salesStartDate
        - salesEndDate
        - reviewRatingStartDate
        - reviewRatingEndDate
        - createdAt
        - modifiedAt
        - deletedAt
        - booklets
    ProjectWithCountResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProjectListResponseDto'
        count:
          type: number
      required:
        - data
        - count
    ProjectIssueYearMonth:
      type: object
      properties:
        issueMonth:
          type: number
        issueYear:
          type: number
        id:
          type: number
      required:
        - issueMonth
        - issueYear
        - id
    UpdateProjectSettingDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: プロジェクトid
        salesStartDate:
          format: date-time
          type: string
          example: 2022/01/01
          description: 販売開始日
        salesEndDate:
          format: date-time
          type: string
          example: 2022/12/31
          description: 販売終了日
        reviewRatingStartDate:
          format: date-time
          type: string
          example: 2022/01/01
          description: 口コミ評価開始日
        reviewRatingEndDate:
          format: date-time
          type: string
          example: 2022/12/31
          description: 口コミ評価終了日
        thumbIndexId:
          type: number
          example: '1'
          description: ツメ見出しid
        headLineId:
          type: number
          example: '1'
          description: 見出しid
        openAirIconOn:
          type: string
          description: 露天アイコンOn
          format: binary
        openAirIconOff:
          type: string
          description: 露天アイコンOff
          format: binary
        freeFlowingIconOn:
          type: string
          description: かけ流しアイコンOn
          format: binary
        freeFlowingIconOff:
          type: string
          description: かけ流しアイコンOff
          format: binary
        elevatorIconOn:
          type: string
          description: エレベーターアイコンOn
          format: binary
        elevatorIconOff:
          type: string
          description: エレベーターアイコンOff
          format: binary
        sameDayReservationIconOn:
          type: string
          description: 当日予約アイコンOn
          format: binary
        sameDayReservationIconOff:
          type: string
          description: 当日予約アイコンOff
          format: binary
        pickUpAvailableIconOn:
          type: string
          description: 送迎有アイコンOn
          format: binary
        pickUpAvailableIconOff:
          type: string
          description: 送迎有アイコンOff
          format: binary
        noSmokingIconOn:
          type: string
          description: 禁煙アイコンOn
          format: binary
        noSmokingIconOff:
          type: string
          description: 禁煙アイコンOff
          format: binary
        dinnerVenueMeal:
          type: string
          description: 夕食:会場食
          format: binary
        dinnerPrivateRoomDining:
          type: string
          description: 夕食:個室会場食
          format: binary
        dinnerRoomMeal:
          type: string
          description: 夕食:部屋食
          format: binary
        dinnerVenueMealOorPrivateDiningRoom:
          type: string
          description: 夕食:会場食または個室会場食
          format: binary
        dinnerVenueMealOrRoomService:
          type: string
          description: 夕食:会場食または部屋食
          format: binary
        dinnerRoomOrPrivateDiningRoom:
          type: string
          description: 夕食:部屋食または個室会場食
          format: binary
        dinnerNone:
          type: string
          description: 夕食:なし
          format: binary
        breakfastVenueMeal:
          type: string
          description: 朝食:会場食
          format: binary
        breakfastPrivateRoomDining:
          type: string
          description: 朝食:個室会場食
          format: binary
        breakfastRoomMeal:
          type: string
          description: 朝食:部屋食
          format: binary
        breakfastVenueMealOorPrivateDiningRoom:
          type: string
          description: 朝食:会場食または個室会場食
          format: binary
        breakfastVenueMealOrRoomService:
          type: string
          description: 朝食:会場食または部屋食
          format: binary
        breakfastRoomOrPrivateDiningRoom:
          type: string
          description: 朝食:部屋食または個室会場食
          format: binary
        breakfastNone:
          type: string
          description: 朝食:なし
          format: binary
        issueDataImage:
          type: string
          description: 月号データ
          format: binary
        bookletEnables:
          type: array
          description: 有効にする版コードを配列で登録するKANTO,TOHOKUなどをカンマ区切りで送る
          items:
            type: string
            enum:
              - HOKKAIDO
              - TOUHOKU
              - JOSHINETSU
              - KITA_KANTO
              - KANTO
              - TOKAI
              - KANSAI
              - HOKURIKU
              - CHUGOKU_SHIKOKU
              - KYUSHU
              - KANSAI_HOKURIKU
              - TOUKAI_HOKURIKU
              - TEST
        consumptionTax:
          type: string
          enum:
            - TAX_EXCLUDED
            - TAX_INCLUDED
          example: TAX_INCLUDED
          description: consumption tax
        tax:
          type: number
          example: 1.1
          description: 税率
        pageMountId:
          type: number
          example: 1
          description: 欄外下画像id
      required:
        - id
        - salesStartDate
        - salesEndDate
        - reviewRatingStartDate
        - reviewRatingEndDate
        - bookletEnables
    BookletForProjectResponseDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: ID
        masterEditionCode:
          $ref: '#/components/schemas/MasterEditionCodePublicDto'
        projectId:
          type: number
          example: 1
          description: ProjectID
        numberOfPages:
          type: number
          example: 20
          description: ページ番号
        documentSerialNumber:
          type: number
          example: 1
          description: 原稿連番
        documents:
          example: []
          type: array
          items:
            $ref: '#/components/schemas/DocumentResponseDto'
        editionCode:
          type: string
          enum:
            - HOKKAIDO
            - TOUHOKU
            - JOSHINETSU
            - KITA_KANTO
            - KANTO
            - TOKAI
            - KANSAI
            - HOKURIKU
            - CHUGOKU_SHIKOKU
            - KYUSHU
            - KANSAI_HOKURIKU
            - TOUKAI_HOKURIKU
            - TEST
          example: KANTO
          description: 版コード
        locked:
          type: boolean
          example: false
          description: 入稿ロック
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
        pages:
          type: array
          items:
            $ref: '#/components/schemas/PageResponseDto'
      required:
        - id
        - projectId
        - numberOfPages
        - documentSerialNumber
        - documents
        - editionCode
        - locked
        - createdAt
        - modifiedAt
        - pages
    ImportXlsDocumentDto:
      type: object
      properties:
        image:
          type: string
          example: /path
          description: イメージパス
        importType:
          type: string
          enum:
            - DRAFT_PAGE
            - ENTRY
            - DOWNLOAD_DRAFT_PAGE
            - DOWNLOAD_DRAFT_ASSIST
            - DOWNLOAD_DOC_PROGRESS
          example: DRAFT_PAGE
          description: インポート種別
      required:
        - image
        - importType
    ImportXlsDocumentGroupDto:
      type: object
      properties:
        entry:
          $ref: '#/components/schemas/ImportXlsDocumentDto'
        draft:
          $ref: '#/components/schemas/ImportXlsDocumentDto'
        download_draft_page:
          $ref: '#/components/schemas/ImportXlsDocumentDto'
        download_draft_assist:
          $ref: '#/components/schemas/ImportXlsDocumentDto'
        download_doc_progress:
          $ref: '#/components/schemas/ImportXlsDocumentDto'
      required:
        - entry
        - draft
        - download_draft_page
        - download_draft_assist
        - download_doc_progress
    ProjectWithXlsFilesResponseDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: ID
        mediaTypeCode:
          type: string
          enum:
            - MAGAZINE
            - TEST
          example: MAGAZINE
          description: 媒体種別マスタ
        mediaType:
          $ref: '#/components/schemas/MasterMediaTypePublicDto'
        issueYear:
          type: number
          example: 2022
          description: 月号 年
        issueMonth:
          type: number
          example: 11
          description: 月号 月
        salesStartDate:
          format: date-time
          type: string
          description: 販売開始日
        salesEndDate:
          format: date-time
          type: string
          description: 販売終了日
        reviewRatingStartDate:
          format: date-time
          type: string
          description: 口コミ評価開始日
        reviewRatingEndDate:
          format: date-time
          type: string
          description: 口コミ評価終了日
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
        thumbIndexId:
          type: number
          example: '1'
          description: ツメ見出しid
        headLineId:
          type: number
          example: '1'
          description: 見出しid
        openAirIconOn:
          type: string
          example: /path
          description: 露天アイコンOnパス
        openAirIconOff:
          type: string
          example: /path
          description: 露天アイコンOffパス
        freeFlowingIconOn:
          type: string
          example: /path
          description: かけ流しアイコンOnパス
        freeFlowingIconOff:
          type: string
          example: /path
          description: かけ流しアイコンOffパス
        elevatorIconOn:
          type: string
          example: /path
          description: エレベーターアイコンOn
        elevatorIconOff:
          type: string
          example: /path
          description: エレベーターアイコンOff
        sameDayReservationIconOn:
          type: string
          example: /path
          description: 当日予約アイコンOn
        sameDayReservationIconOff:
          type: string
          example: /path
          description: 当日予約アイコンOff
        pickUpAvailableIconOn:
          type: string
          example: /path
          description: 送迎有アイコンOn
        pickUpAvailableIconOff:
          type: string
          example: /path
          description: 送迎有アイコンOff
        noSmokingIconOn:
          type: string
          example: /path
          description: 禁煙アイコンOn
        noSmokingIconOff:
          type: string
          example: /path
          description: 禁煙アイコンOff
        dinnerVenueMeal:
          type: string
          example: /path
          description: 夕食:会場食
        dinnerPrivateRoomDining:
          type: string
          example: /path
          description: 夕食:個室会場食
        dinnerRoomMeal:
          type: string
          example: /path
          description: 夕食:部屋食
        dinnerVenueMealOorPrivateDiningRoom:
          type: string
          example: /path
          description: 夕食:会場食または個室会場食
        dinnerVenueMealOrRoomService:
          type: string
          example: /path
          description: 夕食:会場食または部屋食
        dinnerRoomOrPrivateDiningRoom:
          type: string
          example: /path
          description: 夕食:部屋食または個室会場食
        dinnerNone:
          type: string
          example: /path
          description: 夕食:なし
        breakfastVenueMeal:
          type: string
          example: /path
          description: 朝食:会場食
        breakfastPrivateRoomDining:
          type: string
          example: /path
          description: 朝食:個室会場食
        breakfastRoomMeal:
          type: string
          example: /path
          description: 朝食:部屋食
        breakfastVenueMealOorPrivateDiningRoom:
          type: string
          example: /path
          description: 朝食:会場食または個室会場食
        breakfastVenueMealOrRoomService:
          type: string
          example: /path
          description: 朝食:会場食または部屋食
        breakfastRoomOrPrivateDiningRoom:
          type: string
          example: /path
          description: 朝食:部屋食または個室会場食
        breakfastNone:
          type: string
          example: /path
          description: 朝食:なし
        issueDataImage:
          type: string
          example: /path
          description: 月号データ
        consumptionTax:
          type: string
          enum:
            - TAX_EXCLUDED
            - TAX_INCLUDED
          example: TAX_INCLUDED
          description: consumption tax
        tax:
          type: number
          example: 1.1
          description: 税率
        booklets:
          type: array
          items:
            $ref: '#/components/schemas/BookletForProjectResponseDto'
        xlsDocuments:
          $ref: '#/components/schemas/ImportXlsDocumentGroupDto'
        pageMount:
          $ref: '#/components/schemas/PageMountDto'
      required:
        - id
        - mediaTypeCode
        - mediaType
        - issueYear
        - issueMonth
        - salesStartDate
        - salesEndDate
        - reviewRatingStartDate
        - reviewRatingEndDate
        - createdAt
        - modifiedAt
        - deletedAt
        - thumbIndexId
        - headLineId
        - openAirIconOn
        - openAirIconOff
        - freeFlowingIconOn
        - freeFlowingIconOff
        - elevatorIconOn
        - elevatorIconOff
        - sameDayReservationIconOn
        - sameDayReservationIconOff
        - pickUpAvailableIconOn
        - pickUpAvailableIconOff
        - noSmokingIconOn
        - noSmokingIconOff
        - dinnerVenueMeal
        - dinnerPrivateRoomDining
        - dinnerRoomMeal
        - dinnerVenueMealOorPrivateDiningRoom
        - dinnerVenueMealOrRoomService
        - dinnerRoomOrPrivateDiningRoom
        - dinnerNone
        - breakfastVenueMeal
        - breakfastPrivateRoomDining
        - breakfastRoomMeal
        - breakfastVenueMealOorPrivateDiningRoom
        - breakfastVenueMealOrRoomService
        - breakfastRoomOrPrivateDiningRoom
        - breakfastNone
        - issueDataImage
        - consumptionTax
        - tax
        - booklets
        - xlsDocuments
        - pageMount
    MasterBoastStampAttributeResponseDto:
      type: object
      properties:
        code:
          type: string
          enum:
            - PRIDE
            - SCORES
          example: PRIDE
          description: 自慢スタンプコード
        name:
          type: string
          example: ''
          description: 自慢スタンプ名称
        kana:
          type: string
          example: ''
          description: 自慢スタンプ名称
        order:
          type: number
          example: ''
          description: 自慢スタンプ表示順
      required:
        - code
        - name
        - kana
        - order
    MasterMediaTypeDto:
      type: object
      properties:
        code:
          type: string
          enum:
            - MAGAZINE
            - TEST
          example: MAGAZINE
          description: 媒体種別コード
        name:
          type: string
          example: ゆこゆこ本誌
          description: 媒体種別名
        kana:
          type: string
          example: ユコユコホンシ
          description: 媒体種別カナ
        description:
          type: string
          example: ゆこゆこ本誌
          description: 媒体種別説明
        order:
          type: number
          example: 1
          description: 表示順
      required:
        - code
        - name
        - kana
        - description
        - order
    DocumentBoastStampMediaTypeDto:
      type: object
      properties:
        mediaTypeCode:
          type: string
          enum:
            - MAGAZINE
            - TEST
          example: MAGAZINE
          description: 媒体種別コード
        masterMediaType:
          type: array
          items:
            $ref: '#/components/schemas/MasterMediaTypeDto'
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
        documentBoastStampId:
          type: number
          example: 1
          description: 自慢スタンプid
      required:
        - mediaTypeCode
        - masterMediaType
        - createdAt
        - modifiedAt
        - documentBoastStampId
    DocumentBoastStampResponseDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: ID
        code:
          type: number
          example: ''
          description: 自慢スタンプコード
        attributeCode:
          type: string
          example: PRIDE
          description: 自慢スタンプ属性
        attribute:
          $ref: '#/components/schemas/MasterBoastStampAttributeResponseDto'
        name:
          type: string
          example: ''
          description: 自慢スタンプ名称
        comment:
          type: string
          example: ''
          description: 自慢スタンプ備考
        image:
          type: string
          example: /path
          description: 自慢スタンプ画像
        imageConvert:
          type: string
          example: /path
          description: 自慢スタンプ変換画像
        mediaTypes:
          description: 媒体タイプの配列
          type: array
          items:
            $ref: '#/components/schemas/DocumentBoastStampMediaTypeDto'
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
      required:
        - id
        - code
        - attributeCode
        - attribute
        - name
        - createdAt
        - modifiedAt
    ThumbIndexDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: ID
        name:
          type: string
          example: 見出し1
          description: 見出し名
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          description: 削除日(表示されない)
      required:
        - id
        - name
        - createdAt
        - modifiedAt
    ProjectsWithImagesResponseDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: ID
        mediaTypeCode:
          type: string
          enum:
            - MAGAZINE
            - TEST
          example: MAGAZINE
          description: 媒体種別マスタ
        mediaType:
          $ref: '#/components/schemas/MasterMediaTypePublicDto'
        issueYear:
          type: number
          example: 2022
          description: 月号 年
        issueMonth:
          type: number
          example: 11
          description: 月号 月
        salesStartDate:
          format: date-time
          type: string
          description: 販売開始日
        salesEndDate:
          format: date-time
          type: string
          description: 販売終了日
        reviewRatingStartDate:
          format: date-time
          type: string
          description: 口コミ評価開始日
        reviewRatingEndDate:
          format: date-time
          type: string
          description: 口コミ評価終了日
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
        thumbIndexId:
          type: number
          example: '1'
          description: ツメ見出しid
        headLineId:
          type: number
          example: '1'
          description: 見出しid
        openAirIconOn:
          type: string
          example: /path
          description: 露天アイコンOnパス
        openAirIconOff:
          type: string
          example: /path
          description: 露天アイコンOffパス
        freeFlowingIconOn:
          type: string
          example: /path
          description: かけ流しアイコンOnパス
        freeFlowingIconOff:
          type: string
          example: /path
          description: かけ流しアイコンOffパス
        elevatorIconOn:
          type: string
          example: /path
          description: エレベーターアイコンOn
        elevatorIconOff:
          type: string
          example: /path
          description: エレベーターアイコンOff
        sameDayReservationIconOn:
          type: string
          example: /path
          description: 当日予約アイコンOn
        sameDayReservationIconOff:
          type: string
          example: /path
          description: 当日予約アイコンOff
        pickUpAvailableIconOn:
          type: string
          example: /path
          description: 送迎有アイコンOn
        pickUpAvailableIconOff:
          type: string
          example: /path
          description: 送迎有アイコンOff
        noSmokingIconOn:
          type: string
          example: /path
          description: 禁煙アイコンOn
        noSmokingIconOff:
          type: string
          example: /path
          description: 禁煙アイコンOff
        dinnerVenueMeal:
          type: string
          example: /path
          description: 夕食:会場食
        dinnerPrivateRoomDining:
          type: string
          example: /path
          description: 夕食:個室会場食
        dinnerRoomMeal:
          type: string
          example: /path
          description: 夕食:部屋食
        dinnerVenueMealOorPrivateDiningRoom:
          type: string
          example: /path
          description: 夕食:会場食または個室会場食
        dinnerVenueMealOrRoomService:
          type: string
          example: /path
          description: 夕食:会場食または部屋食
        dinnerRoomOrPrivateDiningRoom:
          type: string
          example: /path
          description: 夕食:部屋食または個室会場食
        dinnerNone:
          type: string
          example: /path
          description: 夕食:なし
        breakfastVenueMeal:
          type: string
          example: /path
          description: 朝食:会場食
        breakfastPrivateRoomDining:
          type: string
          example: /path
          description: 朝食:個室会場食
        breakfastRoomMeal:
          type: string
          example: /path
          description: 朝食:部屋食
        breakfastVenueMealOorPrivateDiningRoom:
          type: string
          example: /path
          description: 朝食:会場食または個室会場食
        breakfastVenueMealOrRoomService:
          type: string
          example: /path
          description: 朝食:会場食または部屋食
        breakfastRoomOrPrivateDiningRoom:
          type: string
          example: /path
          description: 朝食:部屋食または個室会場食
        breakfastNone:
          type: string
          example: /path
          description: 朝食:なし
        issueDataImage:
          type: string
          example: /path
          description: 月号データ
        consumptionTax:
          type: string
          enum:
            - TAX_EXCLUDED
            - TAX_INCLUDED
          example: TAX_INCLUDED
          description: consumption tax
        tax:
          type: number
          example: 1.1
          description: 税率
        booklets:
          type: array
          items:
            $ref: '#/components/schemas/BookletForProjectResponseDto'
        xlsDocuments:
          $ref: '#/components/schemas/ImportXlsDocumentGroupDto'
        pageMount:
          $ref: '#/components/schemas/PageMountDto'
        headLines:
          description: 見出し一覧
          type: array
          items:
            $ref: '#/components/schemas/DocumentHeadLineDto'
        documentBoastStamps:
          description: 自慢スタンプ一覧
          type: array
          items:
            $ref: '#/components/schemas/DocumentBoastStampResponseDto'
        thumbIndexes:
          description: 爪見出し一覧
          type: array
          items:
            $ref: '#/components/schemas/ThumbIndexDto'
        marginBottoms:
          description: 欄外下画像一覧
          type: array
          items:
            $ref: '#/components/schemas/PageMountDto'
        allDocumentProofreading:
          type: boolean
      required:
        - id
        - mediaTypeCode
        - mediaType
        - issueYear
        - issueMonth
        - salesStartDate
        - salesEndDate
        - reviewRatingStartDate
        - reviewRatingEndDate
        - createdAt
        - modifiedAt
        - deletedAt
        - thumbIndexId
        - headLineId
        - openAirIconOn
        - openAirIconOff
        - freeFlowingIconOn
        - freeFlowingIconOff
        - elevatorIconOn
        - elevatorIconOff
        - sameDayReservationIconOn
        - sameDayReservationIconOff
        - pickUpAvailableIconOn
        - pickUpAvailableIconOff
        - noSmokingIconOn
        - noSmokingIconOff
        - dinnerVenueMeal
        - dinnerPrivateRoomDining
        - dinnerRoomMeal
        - dinnerVenueMealOorPrivateDiningRoom
        - dinnerVenueMealOrRoomService
        - dinnerRoomOrPrivateDiningRoom
        - dinnerNone
        - breakfastVenueMeal
        - breakfastPrivateRoomDining
        - breakfastRoomMeal
        - breakfastVenueMealOorPrivateDiningRoom
        - breakfastVenueMealOrRoomService
        - breakfastRoomOrPrivateDiningRoom
        - breakfastNone
        - issueDataImage
        - consumptionTax
        - tax
        - booklets
        - xlsDocuments
        - pageMount
        - headLines
        - documentBoastStamps
        - thumbIndexes
        - marginBottoms
    DuplicateProjectDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: id
        destinationId:
          type: number
          example: 1
          description: project id
      required:
        - id
        - destinationId
    CreateProjectWithEditionCodeDto:
      type: object
      properties:
        mediaTypeCode:
          type: string
          enum:
            - MAGAZINE
            - TEST
          example: MAGAZINE
        issueYear:
          type: number
          example: 2022
          description: 月号-年
        issueMonth:
          type: number
          example: 10
          description: 月号-月
        salesStartDate:
          format: date-time
          type: string
          example: 2022/01/01
          description: 販売開始日
        salesEndDate:
          format: date-time
          type: string
          example: 2022/12/31
          description: 販売終了日
        reviewRatingStartDate:
          format: date-time
          type: string
          example: 2022/01/01
          description: 口コミ評価開始日
        reviewRatingEndDate:
          format: date-time
          type: string
          example: 2022/12/31
          description: 口コミ評価終了日
        consumptionTax:
          type: string
          enum:
            - TAX_EXCLUDED
            - TAX_INCLUDED
          example: TAX_INCLUDED
        tax:
          type: number
          example: 1.1
          description: ''
        editionCodes:
          type: array
          example:
            - KANTO
          description: editionCodeの配列
          items:
            type: string
            enum:
              - HOKKAIDO
              - TOUHOKU
              - JOSHINETSU
              - KITA_KANTO
              - KANTO
              - TOKAI
              - KANSAI
              - HOKURIKU
              - CHUGOKU_SHIKOKU
              - KYUSHU
              - KANSAI_HOKURIKU
              - TOUKAI_HOKURIKU
              - TEST
      required:
        - mediaTypeCode
        - issueYear
        - issueMonth
        - salesStartDate
        - salesEndDate
        - reviewRatingStartDate
        - reviewRatingEndDate
    ProjectCreatedResponseDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: ID
        mediaTypeCode:
          type: string
          enum:
            - MAGAZINE
            - TEST
          example: MAGAZINE
          description: 媒体種別マスタ
        mediaType:
          $ref: '#/components/schemas/MasterMediaTypePublicDto'
        issueYear:
          type: number
          example: 2022
          description: 月号 年
        issueMonth:
          type: number
          example: 11
          description: 月号 月
        salesStartDate:
          format: date-time
          type: string
          description: 販売開始日
        salesEndDate:
          format: date-time
          type: string
          description: 販売終了日
        reviewRatingStartDate:
          format: date-time
          type: string
          description: 口コミ評価開始日
        reviewRatingEndDate:
          format: date-time
          type: string
          description: 口コミ評価終了日
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
        thumbIndexId:
          type: number
          example: '1'
          description: ツメ見出しid
        headLineId:
          type: number
          example: '1'
          description: 見出しid
        openAirIconOn:
          type: string
          example: /path
          description: 露天アイコンOnパス
        openAirIconOff:
          type: string
          example: /path
          description: 露天アイコンOffパス
        freeFlowingIconOn:
          type: string
          example: /path
          description: かけ流しアイコンOnパス
        freeFlowingIconOff:
          type: string
          example: /path
          description: かけ流しアイコンOffパス
        elevatorIconOn:
          type: string
          example: /path
          description: エレベーターアイコンOn
        elevatorIconOff:
          type: string
          example: /path
          description: エレベーターアイコンOff
        sameDayReservationIconOn:
          type: string
          example: /path
          description: 当日予約アイコンOn
        sameDayReservationIconOff:
          type: string
          example: /path
          description: 当日予約アイコンOff
        pickUpAvailableIconOn:
          type: string
          example: /path
          description: 送迎有アイコンOn
        pickUpAvailableIconOff:
          type: string
          example: /path
          description: 送迎有アイコンOff
        noSmokingIconOn:
          type: string
          example: /path
          description: 禁煙アイコンOn
        noSmokingIconOff:
          type: string
          example: /path
          description: 禁煙アイコンOff
        dinnerVenueMeal:
          type: string
          example: /path
          description: 夕食:会場食
        dinnerPrivateRoomDining:
          type: string
          example: /path
          description: 夕食:個室会場食
        dinnerRoomMeal:
          type: string
          example: /path
          description: 夕食:部屋食
        dinnerVenueMealOorPrivateDiningRoom:
          type: string
          example: /path
          description: 夕食:会場食または個室会場食
        dinnerVenueMealOrRoomService:
          type: string
          example: /path
          description: 夕食:会場食または部屋食
        dinnerRoomOrPrivateDiningRoom:
          type: string
          example: /path
          description: 夕食:部屋食または個室会場食
        dinnerNone:
          type: string
          example: /path
          description: 夕食:なし
        breakfastVenueMeal:
          type: string
          example: /path
          description: 朝食:会場食
        breakfastPrivateRoomDining:
          type: string
          example: /path
          description: 朝食:個室会場食
        breakfastRoomMeal:
          type: string
          example: /path
          description: 朝食:部屋食
        breakfastVenueMealOorPrivateDiningRoom:
          type: string
          example: /path
          description: 朝食:会場食または個室会場食
        breakfastVenueMealOrRoomService:
          type: string
          example: /path
          description: 朝食:会場食または部屋食
        breakfastRoomOrPrivateDiningRoom:
          type: string
          example: /path
          description: 朝食:部屋食または個室会場食
        breakfastNone:
          type: string
          example: /path
          description: 朝食:なし
        issueDataImage:
          type: string
          example: /path
          description: 月号データ
        consumptionTax:
          type: string
          enum:
            - TAX_EXCLUDED
            - TAX_INCLUDED
          example: TAX_INCLUDED
          description: consumption tax
        tax:
          type: number
          example: 1.1
          description: 税率
        booklets:
          type: array
          items:
            $ref: '#/components/schemas/BookletResponseDto'
        error:
          type: string
          example: ''
          description: ''
      required:
        - id
        - mediaTypeCode
        - mediaType
        - issueYear
        - issueMonth
        - salesStartDate
        - salesEndDate
        - reviewRatingStartDate
        - reviewRatingEndDate
        - createdAt
        - modifiedAt
        - deletedAt
        - thumbIndexId
        - headLineId
        - openAirIconOn
        - openAirIconOff
        - freeFlowingIconOn
        - freeFlowingIconOff
        - elevatorIconOn
        - elevatorIconOff
        - sameDayReservationIconOn
        - sameDayReservationIconOff
        - pickUpAvailableIconOn
        - pickUpAvailableIconOff
        - noSmokingIconOn
        - noSmokingIconOff
        - dinnerVenueMeal
        - dinnerPrivateRoomDining
        - dinnerRoomMeal
        - dinnerVenueMealOorPrivateDiningRoom
        - dinnerVenueMealOrRoomService
        - dinnerRoomOrPrivateDiningRoom
        - dinnerNone
        - breakfastVenueMeal
        - breakfastPrivateRoomDining
        - breakfastRoomMeal
        - breakfastVenueMealOorPrivateDiningRoom
        - breakfastVenueMealOrRoomService
        - breakfastRoomOrPrivateDiningRoom
        - breakfastNone
        - issueDataImage
        - consumptionTax
        - tax
        - booklets
        - error
    ProjectIssueDto:
      type: object
      properties:
        issueYear:
          type: number
          example: 2022
          description: 月号-年
        issueMonth:
          type: number
          example: 10
          description: 月号-月
        consumptionTax:
          type: string
          enum:
            - TAX_EXCLUDED
            - TAX_INCLUDED
          example: TAX_INCLUDED
        tax:
          type: number
          example: 1.1
          description: ''
        id:
          type: number
          example: 1
          description: id
      required:
        - issueYear
        - issueMonth
        - id
    IdmlPageSizeINfoDto:
      type: object
      properties:
        width:
          type: number
          description: 原稿長さ
        height:
          type: number
          description: 原稿高さ
      required:
        - width
        - height
    IdmlPageSizeDto:
      type: object
      properties:
        size:
          description: 原稿サイズ
          allOf:
            - $ref: '#/components/schemas/IdmlPageSizeINfoDto'
      required:
        - size
    IdmlItemsResponseDto:
      type: object
      properties:
        items:
          type: array
          description: 項目一覧
          items:
            oneOf:
              - $ref: '#/components/schemas/IdmlTextFramePageItemDto'
              - $ref: '#/components/schemas/IdmlRectanglePageItemDto'
              - $ref: '#/components/schemas/IdmlImagePageItemDto'
              - $ref: '#/components/schemas/IdmlHtmlTestItemDto'
        page:
          description: ページ情報
          allOf:
            - $ref: '#/components/schemas/IdmlPageSizeDto'
        packages:
          description: パッケージID情報
          type: array
          items:
            type: string
        error:
          type: string
          description: Error Message
      required:
        - items
    TagInfoResponseDto:
      type: object
      properties: {}
    IdmlUpdateContentDetailDto:
      type: object
      properties:
        content:
          type: string
          example: ''
          description: コンテンツ内容
        color:
          type: string
          example: Color/Black
          description: コンテンツ色
        breakLine:
          type: boolean
          example: false
          description: ''
      required:
        - content
        - color
    IdmlUpdateContentItemDto:
      type: object
      properties:
        tagId:
          type: string
          example: u1b811
          description: タグID
        contents:
          example: ''
          description: 編集後のテキスト詳細情報
          type: array
          items:
            $ref: '#/components/schemas/IdmlUpdateContentDetailDto'
      required:
        - tagId
        - contents
    UpdateWorkspaceContentRequestDto:
      type: object
      properties:
        editId:
          type: string
          example: '1_1_1_1'
          description: 編集ID
        packageId:
          type: string
          example: template
          description: パッケージID
        items:
          example: ''
          description: 編集後のテキスト情報
          type: array
          items:
            $ref: '#/components/schemas/IdmlUpdateContentItemDto'
      required:
        - editId
        - packageId
        - items
    WorkspaceCommonResponse:
      type: object
      properties:
        status:
          type: number
          example: '200'
          description: ステータス
        message:
          type: string
          example: success
          description: 応答メッセージ
      required:
        - status
        - message
    UpdateIconItemDto:
      type: object
      properties:
        tagId:
          type: string
          example: u1b811
          description: タグID
        icon:
          type: string
          example: 当日予約アイコンON
          description: アイコン名称
      required:
        - tagId
        - icon
    UpdateWorkspaceIconsRequestDto:
      type: object
      properties:
        editId:
          type: string
          example: '1_1_1_1'
          description: 編集ID
        packageId:
          type: string
          example: template
          description: パッケージID
        icons:
          example: ''
          description: 編集後のテキスト
          type: array
          items:
            $ref: '#/components/schemas/UpdateIconItemDto'
      required:
        - editId
        - packageId
        - icons
    UploadWorkspaceImageRequestDto:
      type: object
      properties:
        editId:
          type: string
          example: '1_1_1_1'
          description: 編集ID
        packageId:
          type: string
          example: template
          description: パッケージID
        tagId:
          type: string
          example: u1b811
          description: タグID
        file:
          type: string
          description: 画像ファイル
          format: binary
      required:
        - editId
        - packageId
        - tagId
        - file
    CreateWorkspaceAppealLayoutRequestDto:
      type: object
      properties:
        editId:
          type: string
          example: '1_1_1_1'
          description: 編集ID
        appealType:
          type: string
          example: '01'
          description: 訴求エリアレイアウト種別
      required:
        - editId
        - appealType
    CreateWorkspaceFeetableHeaderRequestDto:
      type: object
      properties:
        editId:
          type: string
          example: '1_1_1_1'
          description: 編集ID
        upsert:
          type: boolean
          example: false
          description: upsert
      required:
        - editId
    CreateWorkspacePartsLayoutRequestDto:
      type: object
      properties:
        editId:
          type: string
          example: '1_1_1_1'
          description: 編集ID
        packageId:
          type: string
          example: template
          description: パッケージID
        tagId:
          type: string
          example: u1b811
          description: タグID
        patternType:
          type: string
          example: '01'
          description: パーツ表示レイアウトパターン種別
      required:
        - editId
        - packageId
        - tagId
        - patternType
    CreateWorkspacePartsRequestDto:
      type: object
      properties:
        editId:
          type: string
          example: '1_1_1_1'
          description: 編集ID
        packageId:
          type: string
          example: template
          description: パッケージID
        tagId:
          type: string
          example: u1b811
          description: タグID
        partsId:
          type: number
          example: '1'
          description: パーツID
      required:
        - editId
        - packageId
        - tagId
        - partsId
    UploadIdmlFileRequestDto:
      type: object
      properties:
        file:
          type: string
          description: IDMLファイル (データ)
          format: binary
        fileName:
          type: string
          example: サンプル.idml
          description: IDMLファイル (*.idml)
      required:
        - file
        - fileName
    UpdateTemplateSettingRequestDto:
      type: object
      properties: {}
    UploadBackgroundImageFileRequestDto:
      type: object
      properties:
        file:
          type: string
          description: 画像ファイル
          format: binary
      required:
        - file
    CreateIdmlDocumentShare:
      type: object
      properties:
        filebase64:
          type: string
          example: ''
          description: File Base
        filepath:
          type: string
          example: ''
          description: filepath
      required:
        - filebase64
        - filepath
    ImageCroppingRequestDto:
      type: object
      properties:
        width:
          type: number
          example: '100'
          description: 切り取り画像幅
        height:
          type: number
          example: '100'
          description: 切り取り画像高さ
        x:
          type: number
          example: '0'
          description: 切り取り場所座標x
        'y':
          type: number
          example: '0'
          description: 切り取り場所座標y
        file:
          type: string
          description: 処理対象画像ファイル
          format: binary
      required:
        - width
        - height
        - x
        - 'y'
        - file
    CreateDocumentDto:
      type: object
      properties:
        documentCode:
          type: string
          example: Y202210WB10100
          description: documentCode
        projectId:
          type: number
          example: 1
          description: projectId
        bookletId:
          type: number
          example: 1
          description: bookletId
        pageId:
          type: number
          example: 1
          description: pageId
        documentTypeCode:
          type: string
          enum:
            - HOTEL_MANUSCRIPT
            - HEAD_LINE
            - FILLER
          example: HOTEL_MANUSCRIPT
          description: 原稿種別コード
        documentSizeCode:
          type: string
          enum:
            - ONE_ONE
            - ONE_TWO
            - ONE_FOUR
          example: ONE_ONE
          description: 原稿サイズコード
        pageNumber:
          type: number
          example: 1
          description: ページ番号
        templateId:
          type: number
          example: 1
          description: 使用テンプレートid
        fillerId:
          type: number
          example: 1
          description: 埋草id
        headLineId:
          type: number
          example: 1
          description: 見出しid
        salesPersonCognito:
          type: string
          example: AAAXXXCCVCC
          description: 営業担当者コード
        fromEntry:
          type: boolean
          example: false
          description: エントリーから登録
        statusCode:
          type: string
          enum:
            - MAKING
            - NOT_START
            - CHECKING
            - SEND_BACK
            - PROOFREADING
          example: NOT_START
          description: ステータスコード
        order:
          type: number
          example: 1
          description: 表示順
        hotelCode:
          type: string
          example: '2986'
          description: 宿泊コード
        manuscriptPersonCognito:
          type: string
          example: AAAXXXCCVCC
          description: 原稿担当者コード
      required:
        - projectId
        - bookletId
        - documentTypeCode
        - documentSizeCode
        - salesPersonCognito
        - manuscriptPersonCognito
    DocumentResponseWithProject:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: ''
        documentCode:
          type: string
          example: Y202210WB10100
          description: 原稿ID
        project:
          $ref: '#/components/schemas/ProjectResponseDto'
        booklet:
          $ref: '#/components/schemas/BookletResponseDto'
        page:
          $ref: '#/components/schemas/PageResponseDto'
        projectId:
          type: number
          example: 1
          description: プロジェクトID
        bookletId:
          type: number
          example: 1
          description: 冊子ID
        pageId:
          type: number
          example: 1
          description: ページID
        documentTypeCode:
          type: string
          enum:
            - HOTEL_MANUSCRIPT
            - HEAD_LINE
            - FILLER
          example: FILLER
          description: 原稿種別
        documentType:
          $ref: '#/components/schemas/MasterDocumentTypeDto'
        documentSizeCode:
          type: string
          enum:
            - ONE_ONE
            - ONE_TWO
            - ONE_FOUR
          example: ONE_ONE
          description: 原稿サイズコード
        documentSize:
          $ref: '#/components/schemas/MasterDocumentSizeDto'
        sharingAliasTo:
          type: array
          items:
            $ref: '#/components/schemas/DocumentResponseDto'
        aliasId:
          type: number
          example: 1
          description: 相乗り先原稿ID
        alias:
          $ref: '#/components/schemas/DocumentResponseDto'
        pageNumber:
          type: number
          example: 1
          description: ページ番号
        templateId:
          type: number
          example: 1
          description: テンプレートID
        template:
          $ref: '#/components/schemas/DocumentTemplateDto'
        fillerId:
          type: number
          example: 1
          description: 埋め草ID
        filler:
          $ref: '#/components/schemas/DocumentFillerDto'
        headLineId:
          type: number
          example: 1
          description: ヘッドラインID
        headLine:
          $ref: '#/components/schemas/DocumentHeadLineDto'
        hotelCode:
          type: string
          example: '2986'
          description: ホテルコード
        jalanCode:
          type: string
          example: 00XX111100
          description: じゃらんコード
        manuscriptPersonCognito:
          type: string
          example: AAAXXXCCVCC
          description: 原稿担当者コード
        manuscriptPerson:
          $ref: '#/components/schemas/PersonDto'
        modifierPersonCognito:
          type: string
          example: AAAXXXCCVCC
          description: 原稿編集者コード
        modifierPerson:
          $ref: '#/components/schemas/PersonDto'
        salesPersonCognito:
          type: string
          example: AAAXXXCCVCC
          description: 営業担当コード
        salesPerson:
          $ref: '#/components/schemas/PersonDto'
        statusCode:
          type: string
          enum:
            - MAKING
            - NOT_START
            - CHECKING
            - SEND_BACK
            - PROOFREADING
          example: CHECKING
          description: 原稿ステータスコード
        status:
          $ref: '#/components/schemas/MasterDocumentStatusDto'
        fromEntry:
          type: boolean
          example: false
          description: エントリーからか
        order:
          type: number
          example: 1
          description: 表示順
        createdAt:
          format: date-time
          type: string
          description: 作成日
        documentContent:
          description: 原稿コンテンツ
          allOf:
            - $ref: '#/components/schemas/DocumentContentResponseDto'
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
      required:
        - id
        - documentCode
        - projectId
        - bookletId
        - pageId
        - documentTypeCode
        - documentSizeCode
        - pageNumber
        - hotelCode
        - jalanCode
        - manuscriptPersonCognito
        - manuscriptPerson
        - modifierPersonCognito
        - statusCode
        - order
        - createdAt
        - documentContent
        - modifiedAt
    DocumentSearchWithCountDto:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DocumentSearchDto'
        count:
          type: number
          example: '1'
          description: 総count
      required:
        - data
        - count
    BookletPublicDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: ID
        masterEditionCode:
          $ref: '#/components/schemas/MasterEditionCodePublicDto'
        projectId:
          type: number
          example: 1
          description: ProjectID
        numberOfPages:
          type: number
          example: 20
          description: ページ番号
        documentSerialNumber:
          type: number
          example: 1
          description: 原稿連番
        documents:
          example: []
          type: array
          items:
            $ref: '#/components/schemas/DocumentResponseDto'
      required:
        - id
        - projectId
        - numberOfPages
        - documentSerialNumber
        - documents
    DocumentMyStockResponseDto:
      type: object
      properties:
        id:
          type: number
          example: 1
        projectId:
          type: number
          example: 1
        project:
          $ref: '#/components/schemas/ProjectResponseDto'
        bookletId:
          type: number
          example: 1
        booklet:
          $ref: '#/components/schemas/BookletResponseDto'
        pageId:
          type: number
          example: 1
        page:
          $ref: '#/components/schemas/PageResponseDto'
        documentId:
          type: number
          example: 1
        document:
          $ref: '#/components/schemas/DocumentResponseDto'
        createPersonCognito:
          type: string
          example: createPersonCognito
        createPerson:
          $ref: '#/components/schemas/PersonDto'
      required:
        - id
        - projectId
        - bookletId
        - pageId
        - documentId
        - createPersonCognito
        - createPerson
    DocumentDiversionSearchDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: ''
        hotelCode:
          type: string
          example: '234'
          description: ''
        project:
          $ref: '#/components/schemas/ProjectListInBookletInProjectDto'
        booklet:
          $ref: '#/components/schemas/BookletPublicDto'
        documentCode:
          type: string
          example: Y202210WB10100
          description: ''
        documentMyStocks:
          type: array
          items:
            $ref: '#/components/schemas/DocumentMyStockResponseDto'
        status:
          $ref: '#/components/schemas/MasterDocumentStatusDto'
        manuscriptPerson:
          $ref: '#/components/schemas/PersonDto'
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
      required:
        - id
        - hotelCode
        - project
        - booklet
        - documentCode
        - documentMyStocks
        - status
        - manuscriptPerson
        - modifiedAt
    DocumentAliasSearchDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: ''
        documentId:
          type: number
          example: 1
          description: ''
        document:
          $ref: '#/components/schemas/DocumentResponseDto'
        booklet:
          $ref: '#/components/schemas/BookletPublicDto'
      required:
        - id
        - documentId
        - document
        - booklet
    DocumentResponseWithContentDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: ''
        documentCode:
          type: string
          example: Y202210WB10100
          description: 原稿ID
        project:
          $ref: '#/components/schemas/ProjectResponseDto'
        booklet:
          $ref: '#/components/schemas/BookletResponseDto'
        page:
          $ref: '#/components/schemas/PageResponseDto'
        projectId:
          type: number
          example: 1
          description: プロジェクトID
        bookletId:
          type: number
          example: 1
          description: 冊子ID
        pageId:
          type: number
          example: 1
          description: ページID
        documentTypeCode:
          type: string
          enum:
            - HOTEL_MANUSCRIPT
            - HEAD_LINE
            - FILLER
          example: FILLER
          description: 原稿種別
        documentType:
          $ref: '#/components/schemas/MasterDocumentTypeDto'
        documentSizeCode:
          type: string
          enum:
            - ONE_ONE
            - ONE_TWO
            - ONE_FOUR
          example: ONE_ONE
          description: 原稿サイズコード
        documentSize:
          $ref: '#/components/schemas/MasterDocumentSizeDto'
        sharingAliasTo:
          type: array
          items:
            $ref: '#/components/schemas/DocumentResponseDto'
        aliasId:
          type: number
          example: 1
          description: 相乗り先原稿ID
        alias:
          $ref: '#/components/schemas/DocumentResponseDto'
        pageNumber:
          type: number
          example: 1
          description: ページ番号
        templateId:
          type: number
          example: 1
          description: テンプレートID
        template:
          $ref: '#/components/schemas/DocumentTemplateDto'
        fillerId:
          type: number
          example: 1
          description: 埋め草ID
        filler:
          $ref: '#/components/schemas/DocumentFillerDto'
        headLineId:
          type: number
          example: 1
          description: ヘッドラインID
        headLine:
          $ref: '#/components/schemas/DocumentHeadLineDto'
        hotelCode:
          type: string
          example: '2986'
          description: ホテルコード
        jalanCode:
          type: string
          example: 00XX111100
          description: じゃらんコード
        manuscriptPersonCognito:
          type: string
          example: AAAXXXCCVCC
          description: 原稿担当者コード
        manuscriptPerson:
          $ref: '#/components/schemas/PersonDto'
        modifierPersonCognito:
          type: string
          example: AAAXXXCCVCC
          description: 原稿編集者コード
        modifierPerson:
          $ref: '#/components/schemas/PersonDto'
        salesPersonCognito:
          type: string
          example: AAAXXXCCVCC
          description: 営業担当コード
        salesPerson:
          $ref: '#/components/schemas/PersonDto'
        statusCode:
          type: string
          enum:
            - MAKING
            - NOT_START
            - CHECKING
            - SEND_BACK
            - PROOFREADING
          example: CHECKING
          description: 原稿ステータスコード
        status:
          $ref: '#/components/schemas/MasterDocumentStatusDto'
        fromEntry:
          type: boolean
          example: false
          description: エントリーからか
        order:
          type: number
          example: 1
          description: 表示順
        createdAt:
          format: date-time
          type: string
          description: 作成日
        documentContent:
          description: 原稿コンテンツ
          allOf:
            - $ref: '#/components/schemas/DocumentContentResponseDto'
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
        documentMyStocks:
          type: array
          items:
            $ref: '#/components/schemas/DocumentMyStockResponseDto'
      required:
        - id
        - documentCode
        - projectId
        - bookletId
        - pageId
        - documentTypeCode
        - documentSizeCode
        - pageNumber
        - hotelCode
        - jalanCode
        - manuscriptPersonCognito
        - manuscriptPerson
        - modifierPersonCognito
        - statusCode
        - order
        - createdAt
        - documentContent
        - modifiedAt
    UpdateDocumentStatusDto:
      type: object
      properties:
        statusCode:
          type: string
          enum:
            - MAKING
            - NOT_START
            - CHECKING
            - SEND_BACK
            - PROOFREADING
          example: CHECKING
          description: ステータスコード
        id:
          type: number
          example: 1
          description: document id
      required:
        - statusCode
        - id
    UpdateManyDocumentStatusDto:
      type: object
      properties:
        statusCode:
          type: string
          enum:
            - MAKING
            - NOT_START
            - CHECKING
            - SEND_BACK
            - PROOFREADING
          example: CHECKING
          description: ステータスコード
        ids:
          example:
            - 1
          description: document id
          type: array
          items:
            type: number
      required:
        - statusCode
        - ids
    MoveDocumentDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: document id
        order:
          type: number
          example: 1
          description: 'new order of document '
        pageId:
          type: number
          example: 1
          description: page id
      required:
        - id
        - order
        - pageId
    UpdateDocumentContentDto:
      type: object
      properties:
        mainPlanCode:
          type: string
          example: '0111'
          description: Main Hotel Code
        row1Pattern:
          type: string
          enum:
            - COLUMN_A
            - COLUMN_B
            - COLUMN_C
            - COLUMN_D
            - COLUMN_E
            - COLUMN_F
            - COLUMN_G
            - COLUMN_H
            - COLUMN_I
            - COLUMN_HALF_A
            - COLUMN_HALF_B
            - SQUARE_A
            - SQUARE_B
          example: COLUMN_A
          description: パターン1段目
        row2Pattern:
          type: string
          enum:
            - COLUMN_A
            - COLUMN_B
            - COLUMN_C
            - COLUMN_D
            - COLUMN_E
            - COLUMN_F
            - COLUMN_G
            - COLUMN_H
            - COLUMN_I
            - COLUMN_HALF_A
            - COLUMN_HALF_B
            - SQUARE_A
            - SQUARE_B
          example: COLUMN_A
          description: パターン2段目
        row3Pattern:
          type: string
          enum:
            - COLUMN_A
            - COLUMN_B
            - COLUMN_C
            - COLUMN_D
            - COLUMN_E
            - COLUMN_F
            - COLUMN_G
            - COLUMN_H
            - COLUMN_I
            - COLUMN_HALF_A
            - COLUMN_HALF_B
            - SQUARE_A
            - SQUARE_B
          example: COLUMN_A
          description: パターン3段目
        row4Pattern:
          type: string
          enum:
            - COLUMN_A
            - COLUMN_B
            - COLUMN_C
            - COLUMN_D
            - COLUMN_E
            - COLUMN_F
            - COLUMN_G
            - COLUMN_H
            - COLUMN_I
            - COLUMN_HALF_A
            - COLUMN_HALF_B
            - SQUARE_A
            - SQUARE_B
          example: COLUMN_A
          description: パターン4段目
        priceTableTopPattern:
          type: string
          enum:
            - TABLE_A
            - TABLE_B
            - TABLE_C
          example: TABLE_A
          description: パターン料金表上
        salesStartDate:
          format: date-time
          type: string
          example: 2022/01/01
          description: 販売開始日
        salesEndDate:
          format: date-time
          type: string
          example: 2022/01/01
          description: 販売終了日
        travelPlanCode:
          description: 旅行プランコード
          type: array
          items:
            type: string
        travelPlanNameOverwriteText:
          type: string
          example: ''
          description: 旅行プラン名上書きテキスト
        travelPlanNameOverwriteVisibility:
          type: boolean
          example: false
          description: 旅行プラン名を上書きするか？
        bathTaxElementary:
          type: number
          example: 0
          description: 入湯税・子供
        bathTaxInfant:
          type: number
          example: 0
          description: 入湯税・幼児
        bathTaxAdult:
          type: number
          example: 0
          description: 入湯税・大人
        bathTaxVisibility:
          type: boolean
          example: false
          description: 入湯税を表示？
        bathTaxBreakLine:
          type: boolean
          example: false
          description: 入湯税を改行？
        childrenFareVisibility:
          type: boolean
          example: false
          description: 子供料金を表示？
        childrenFareBreakLine:
          type: boolean
          example: false
          description: 子供料金を改行？
        sameDayReservationText:
          type: string
          example: ''
          description: 当日予約上書きテキスト
        sameDayReservationVisibility:
          type: boolean
          example: false
          description: 当日予約を表示？
        sameDayReservationBreakLine:
          type: boolean
          example: false
          description: 当日予約を改行？
        checkInOutVisibility:
          type: boolean
          example: false
          description: チェックイン・アウトを表示？
        checkInOutBreakLine:
          type: boolean
          example: false
          description: チェックイン・アウトを改行？
        planRoomText:
          type: string
          example: ''
          description: メインプラン部屋テキスト
        planRoomVisibility:
          type: boolean
          example: false
          description: メインプラン部屋を表示？
        planRoomBreakLine:
          type: boolean
          example: false
          description: メインプラン部屋を改行？
        bathText:
          type: string
          example: ''
          description: 風呂テキスト
        bathVisibility:
          type: boolean
          example: false
          description: お風呂を表示？
        bathBreakLine:
          type: boolean
          example: false
          description: 風呂を改行？
        hotSpringQualityText:
          type: string
          example: ''
          description: 泉質テキスト
        hotSpringQualityVisibility:
          type: boolean
          example: false
          description: 泉質を表示？
        excludeHotSpringEvaluation:
          type: boolean
          example: false
          description: 評価対象外？
        hasBikingDinner:
          type: boolean
          example: false
          description: バイキング？
        petAllowed:
          type: boolean
          example: false
          description: ペット可？
        hasElevator:
          type: boolean
          example: false
          description: エレベータ？
        hasBed:
          type: boolean
          example: false
          description: ベッド？
        singleGuestAllowed:
          type: boolean
          example: false
          description: 一人予約？
        hasRoomDinner:
          type: boolean
          example: false
          description: 部屋食？
        hasWashlet:
          type: boolean
          example: false
          description: ウォシュレット？
        noSmoking:
          type: boolean
          example: false
          description: 禁煙？
        bikingDinnerStatus:
          type: string
          example: NONE
          enum:
            - NONE
            - PARTIAL
            - FULL
        petAllowedStatus:
          type: string
          example: NONE
          enum:
            - NONE
            - PARTIAL
            - FULL
        bedStatus:
          type: string
          example: NONE
          enum:
            - NONE
            - PARTIAL
            - FULL
        roomDinnerStatus:
          type: string
          example: NONE
          enum:
            - NONE
            - PARTIAL
            - FULL
        washletStatus:
          type: string
          example: NONE
          enum:
            - NONE
            - PARTIAL
            - FULL
        smokingStatus:
          type: string
          example: NONE
          enum:
            - NONE
            - PARTIAL
            - FULL
    UpdateDocumentContentAndIdmlDto:
      type: object
      properties:
        bathExclusiveFlag:
          type: boolean
          example: true
          description: 風呂評価対象外
        furiganaSmall:
          type: string
          example: ことひらおんせん
          description: ふりがな小
        hotelNameSmall:
          type: string
          example: ことひら温泉
          description: 宿名小
        spaName:
          type: string
          example: こんぽら温泉郷
          description: 温泉地名
        hotelCatchCopy:
          type: string
          example: ゆこホテル
          description: 宿のキャッチテキスト
        exteriorPhotoFile:
          type: string
          description: 宿外観写真ファイル
          format: binary
        accessInfoText:
          type: string
          example: ''
          description: アクセス情報テキスト
        breakfastPlace:
          type: string
          enum:
            - NONE
            - RESTAURANT
            - PRIVATE_RESTAURANT
            - GUESTROOM
            - RESTAURANT_AND_PRIVATE_RESTAURANT
            - RESTAURANT_AND_GUESTROOM
            - GUESTROOM_AND_PRIVATE_RESTAURANT
          example: GUESTROOM
          description: 朝食場所
        dinnerPlace:
          type: string
          enum:
            - NONE
            - RESTAURANT
            - PRIVATE_RESTAURANT
            - GUESTROOM
            - RESTAURANT_AND_PRIVATE_RESTAURANT
            - RESTAURANT_AND_GUESTROOM
            - GUESTROOM_AND_PRIVATE_RESTAURANT
          example: GUESTROOM
          description: 夕食場所
        hasElevator:
          type: boolean
          example: false
          description: エレベーター？
    UpdateDocumentDto:
      type: object
      properties:
        hotelCode:
          type: string
          example: '2986'
          description: 宿泊コード
        templateId:
          type: number
          example: 1
          description: 使用テンプレートid
        salesPersonCognito:
          type: string
          example: AAAXXXCCVCC
          description: 営業担当者コード
        manuscriptPersonCognito:
          type: string
          example: AAAXXXCCVCC
          description: 原稿担当者コード
      required:
        - salesPersonCognito
        - manuscriptPersonCognito
    HotelInfoResponse:
      type: object
      properties:
        result:
          type: boolean
          example: 'true'
          description: 処理結果
        hotelId:
          type: string
          example: 0016F0000200nXAQAY
          description: 宿ID
        hotelCode:
          type: string
          example: '1001'
          description: 宿コード
        hotelName:
          type: string
          example: 草津ナウリゾートホテル
          description: 宿名称
        hotelKanaName:
          type: string
          example: クサツナウリゾートホテル
          description: 宿かな名称
        prefectures:
          type: string
          example: 群馬県
          description: 都道府県
        spaName:
          type: string
          example: 群馬温泉
          description: 温泉地名称
        jaran_code:
          type: string
      required:
        - result
        - hotelId
        - hotelCode
        - hotelName
        - hotelKanaName
        - prefectures
        - spaName
        - jaran_code
    CreatePageDto:
      type: object
      properties:
        pageId:
          type: number
          example: 1
          description: pageId to edit
        projectId:
          type: number
          example: 1
          description: projectID
        bookletId:
          type: number
          example: 1
          description: BookletID
        layoutAlphabet:
          type: string
          example: A
          description: ページレイアウトのアルファベット
        pageNumber:
          type: number
          example: 1
          description: ページ番号
        mountId:
          type: number
          example: 1
          description: 欄外下画像ID
        thumbIndexImageGroupId:
          type: string
          example: 7126a1dd-da6b-4e99-9bba-5a1bbc5cdcb0
          description: つめ見出し画像id
        pageTypeCode:
          type: string
          enum:
            - HOTEL_MANUSCRIPT
            - CHAPTER_TITLE_PAGE
            - ADVERTISEMENT
            - INFORMATION
          example: ADVERTISEMENT
          description: ページ種別
      required:
        - projectId
        - bookletId
        - layoutAlphabet
        - pageNumber
        - mountId
        - pageTypeCode
    CreatePageImageDto:
      type: object
      properties:
        pageId:
          type: number
          example: 1
          description: pageId to edit
        projectId:
          type: number
          example: 1
          description: projectID
        bookletId:
          type: number
          example: 1
          description: BookletID
        pageNumber:
          type: number
          example: 1
          description: ページ番号
        pageTypeCode:
          type: string
          enum:
            - HOTEL_MANUSCRIPT
            - CHAPTER_TITLE_PAGE
            - ADVERTISEMENT
            - INFORMATION
          example: ADVERTISEMENT
          description: ページ種別
        image:
          type: string
          description: 画像パス
          format: binary
      required:
        - projectId
        - bookletId
        - pageNumber
        - pageTypeCode
        - image
    MovePageRequestDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: PageId
        moveToPageNumber:
          type: number
          example: 1
          description: moveToPageNumber
      required:
        - id
        - moveToPageNumber
    CopyPageDto:
      type: object
      properties:
        pageId:
          type: number
          example: 1
          description: pageId to edit
        projectId:
          type: number
          example: 1
          description: projectID
        bookletId:
          type: number
          example: 1
          description: BookletID
        pageNumber:
          type: number
          example: 1
          description: ページ番号
        pageTypeCode:
          type: string
          enum:
            - HOTEL_MANUSCRIPT
            - CHAPTER_TITLE_PAGE
            - ADVERTISEMENT
            - INFORMATION
          example: ADVERTISEMENT
          description: ページ種別
        id:
          type: number
          example: 1
          description: PageId
      required:
        - projectId
        - bookletId
        - pageNumber
        - pageTypeCode
        - id
    PageSettingsDto:
      type: object
      properties:
        layouts:
          type: array
          items:
            $ref: '#/components/schemas/MasterPageLayoutDto'
        mounts:
          type: array
          items:
            $ref: '#/components/schemas/PageMountDto'
        pageTypes:
          type: array
          items:
            $ref: '#/components/schemas/MasterPageTypeDto'
      required:
        - layouts
        - mounts
        - pageTypes
    DocumentSettingsDto:
      type: object
      properties:
        masterDocumentStatuses:
          type: array
          items:
            $ref: '#/components/schemas/MasterDocumentStatusDto'
        masterMediaTypes:
          type: array
          items:
            $ref: '#/components/schemas/MasterMediaTypeDto'
        documentTemplates:
          type: array
          items:
            $ref: '#/components/schemas/DocumentTemplateDto'
        documentHeadLines:
          type: array
          items:
            $ref: '#/components/schemas/DocumentHeadLineDto'
        documentFillers:
          type: array
          items:
            $ref: '#/components/schemas/DocumentFillerDto'
        salesPersons:
          type: array
          items:
            $ref: '#/components/schemas/PersonDto'
        manuscriptPersons:
          type: array
          items:
            $ref: '#/components/schemas/PersonDto'
      required:
        - masterDocumentStatuses
        - masterMediaTypes
        - documentTemplates
        - documentHeadLines
        - documentFillers
        - salesPersons
        - manuscriptPersons
    SearchParamsDto:
      type: object
      properties:
        masterDocumentStatuses:
          type: array
          items:
            $ref: '#/components/schemas/MasterDocumentStatusDto'
        masterMediaTypes:
          type: array
          items:
            $ref: '#/components/schemas/MasterMediaTypeDto'
        masterEditionCodes:
          type: array
          items:
            $ref: '#/components/schemas/MasterEditionCodeDto'
        issues:
          type: array
          items:
            $ref: '#/components/schemas/ProjectIssueDto'
        masterDocumentSizes:
          type: array
          items:
            $ref: '#/components/schemas/MasterDocumentSizeDto'
        salesPersons:
          type: array
          items:
            $ref: '#/components/schemas/PersonDto'
        manuscriptPersons:
          type: array
          items:
            $ref: '#/components/schemas/PersonDto'
      required:
        - masterDocumentStatuses
        - masterMediaTypes
        - masterEditionCodes
        - issues
        - masterDocumentSizes
        - salesPersons
        - manuscriptPersons
    DocumentTemplateWithDocumentSizeDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: id
        name:
          type: string
          example: A001
          description: テンプレート名
        inDesignVersion:
          type: string
          example: バージョン
          description: バージョン
        pcType:
          type: string
          example: PC
          description: PC
          enum:
            - WIN
            - MAC
        comment:
          type: string
          example: テンプレートのコメント
          description: テンプレートのコメント(自由入力以外に)
        history:
          type: string
          example: テンプレートの変更履歴
          description: テンプレートの変更履歴
        documentSizeCode:
          type: string
          enum:
            - ONE_ONE
            - ONE_TWO
            - ONE_FOUR
          example: ONE_FOUR
          description: 原稿サイズ
        inDesignFile:
          type: string
          example: /path
          description: 画像パス
        imageXml:
          type: string
          example: /path
          description: 画像パス
        imageThumbnail:
          type: string
          example: /path
          description: 画像パス
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日(表示されない)
        documentEvaluationId:
          type: number
          example: 1
          description: Document Evaluation Id
        documentSize:
          $ref: '#/components/schemas/MasterDocumentSizeDto'
      required:
        - id
        - name
        - inDesignVersion
        - pcType
        - comment
        - history
        - documentSizeCode
        - inDesignFile
        - imageXml
        - imageThumbnail
        - createdAt
        - modifiedAt
        - documentSize
    DocumentTemplateWithCountDto:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DocumentTemplateWithDocumentSizeDto'
        count:
          type: number
          example: '1'
          description: そうドキュメント数
      required:
        - data
        - count
    DocumentFillerMediaTypeDto:
      type: object
      properties:
        mediaTypeCode:
          type: string
          enum:
            - MAGAZINE
            - TEST
          example: MAGAZINE
          description: 媒体種別コード
        masterMediaType:
          type: array
          items:
            $ref: '#/components/schemas/MasterMediaTypeDto'
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
        documentFillerId:
          type: number
          example: 1
          description: 埋め草id
      required:
        - mediaTypeCode
        - masterMediaType
        - createdAt
        - modifiedAt
        - documentFillerId
    DocumentFillerWithSizeMediaType:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: id
        code:
          type: string
          example: AABBDD
          description: congnitoId
        name:
          type: string
          example: 埋め草1
          description: 埋め草名称
        image:
          type: string
          example: /path
          description: イメージパス
        imageConvert:
          type: string
          example: /path
          description: 変換済みイメージパス
        freeWord:
          type: string
          example: 内容欄
          description: 内容欄
        comment:
          type: string
          example: 備考欄
          description: 備考欄
        documentSizeCode:
          type: string
          enum:
            - ONE_ONE
            - ONE_TWO
            - ONE_FOUR
          example: ONE_ONE
          description: 原稿サイズ
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
        documentSize:
          $ref: '#/components/schemas/MasterDocumentSizeDto'
        mediaTypes:
          description: 媒体タイプの配列
          type: array
          items:
            $ref: '#/components/schemas/DocumentFillerMediaTypeDto'
      required:
        - id
        - code
        - name
        - image
        - imageConvert
        - freeWord
        - documentSizeCode
        - createdAt
        - modifiedAt
        - documentSize
        - mediaTypes
    DocumentFillerWithCountDto:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DocumentFillerWithSizeMediaType'
        count:
          type: number
          example: '1'
          description: そうドキュメント数
      required:
        - data
        - count
    CreateDocumentFillerRequestDto:
      type: object
      properties:
        code:
          type: string
          example: '123'
          description: コード
        name:
          type: string
          example: 名称
          description: 名称
        image:
          type: string
          description: 画像パス
          format: binary
        imageConvert:
          type: string
          description: 変換済み画像パス
          format: binary
        freeWord:
          type: string
          example: 自由入力
          description: 自由入力欄
        comment:
          type: string
          example: 備考
          description: 備考欄
        mediaTypes:
          type: array
          description: 媒体種別
          items:
            type: string
            enum:
              - MAGAZINE
              - TEST
        documentSizeCode:
          type: string
          enum:
            - ONE_ONE
            - ONE_TWO
            - ONE_FOUR
          example: ONE_ONE
          description: 原稿サイズ
      required:
        - code
        - name
        - documentSizeCode
    UpdateDocumentFillerRequestDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: id
        code:
          type: string
          example: '123'
          description: 埋草コード
        name:
          type: string
          example: name
          description: 埋め草名称
        image:
          type: string
          description: 画像パス
          format: binary
        imageConvert:
          type: string
          description: 変換済み画像パス
          format: binary
        freeWord:
          type: string
          example: 自由入力欄
          description: 自由入力欄
        comment:
          type: string
          example: 備考欄
          description: 備考欄
        mediaTypes:
          type: array
          description: 媒体種別
          items:
            type: string
            enum:
              - MAGAZINE
              - TEST
        documentSizeCode:
          type: string
          enum:
            - ONE_ONE
            - ONE_TWO
            - ONE_FOUR
          example: ONE_ONE
          description: 原稿サイズ
      required:
        - id
    DocumentEvaluationMediaTypeDto:
      type: object
      properties:
        mediaTypeCode:
          type: string
          enum:
            - MAGAZINE
            - TEST
          example: MAGAZINE
          description: 媒体種別コード
        masterMediaType:
          type: array
          items:
            $ref: '#/components/schemas/MasterMediaTypeDto'
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
        documentEvaluationId:
          type: number
          example: 1
          description: 評価パーツID
      required:
        - mediaTypeCode
        - masterMediaType
        - createdAt
        - modifiedAt
        - documentEvaluationId
    DocumentEvaluationResponseDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: ID
        code:
          type: number
          example: 1
          description: '評価パーツコード(必須) '
        name:
          type: string
          example: ''
          description: 評価パーツ名称(必須)
        comment:
          type: string
          example: ''
          description: 評価パーツ備考
        imageFirst:
          type: string
          example: /path
          description: 評価パーツ今月初登場
        imagePrevious:
          type: string
          example: /path
          description: 評価パーツ前号初登場
        imagePreviousTwo:
          type: string
          example: /path
          description: 評価パーツ前々号初登場
        imageWanted:
          type: string
          example: /path
          description: 評価パーツ募集中
        imageStarFillAll:
          type: string
          example: /path
          description: 星画像（全）
        imageStarFillHalf:
          type: string
          example: /path
          description: 星画像（半）
        imageStarFillNone:
          type: string
          example: /path
          description: 星画像（無）
        inDesign:
          type: string
          example: /path
          description: 口コミ台紙 INDD
        documentSizeCode:
          type: string
          enum:
            - ONE_ONE
            - ONE_TWO
            - ONE_FOUR
          description: 原稿サイズコード
        documentSize:
          $ref: '#/components/schemas/MasterDocumentSizeDto'
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
        mediaTypes:
          description: 媒体情報の配列
          type: array
          items:
            $ref: '#/components/schemas/DocumentEvaluationMediaTypeDto'
      required:
        - id
        - code
        - name
        - imagePrevious
        - imagePreviousTwo
        - imageWanted
        - imageStarFillAll
        - imageStarFillHalf
        - imageStarFillNone
        - inDesign
        - documentSizeCode
        - documentSize
        - createdAt
        - modifiedAt
    DocumentEvaluationWithCountDto:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DocumentEvaluationResponseDto'
        count:
          type: number
          example: '1'
          description: そうドキュメント数
      required:
        - data
        - count
    CreateDocumentEvaluationDto:
      type: object
      properties:
        imageFirst:
          type: string
          description: 評価パーツ今月初登場
          format: binary
        imagePrevious:
          type: string
          description: 評価パーツ前号初登場
          format: binary
        imagePreviousTwo:
          type: string
          description: 評価パーツ前々号初登場
          format: binary
        imageWanted:
          type: string
          description: 評価パーツ募集中
          format: binary
        imageStarFillAll:
          type: string
          description: 星画像（全）
          format: binary
        imageStarFillHalf:
          type: string
          description: 星画像（半）
          format: binary
        imageStarFillNone:
          type: string
          description: 星画像（無）
          format: binary
        name:
          type: string
          example: ''
          description: 評価パーツ名称(必須)
        inDesign:
          type: string
          description: ' 口コミ台紙 INDD'
          format: binary
        comment:
          type: string
          example: ''
          description: 評価パーツ備考
        mediaTypes:
          type: array
          description: 媒体
          items:
            type: string
            enum:
              - MAGAZINE
              - TEST
        documentSizeCode:
          type: string
          enum:
            - ONE_ONE
            - ONE_TWO
            - ONE_FOUR
          description: 原稿サイズコード
      required:
        - name
        - documentSizeCode
    UpdateDocumentEvaluationDto:
      type: object
      properties:
        imageFirst:
          type: string
          description: 評価パーツ今月初登場
          format: binary
        imagePrevious:
          type: string
          description: 評価パーツ前号初登場
          format: binary
        imagePreviousTwo:
          type: string
          description: 評価パーツ前々号初登場
          format: binary
        imageWanted:
          type: string
          description: 評価パーツ募集中
          format: binary
        imageStarFillAll:
          type: string
          description: 星画像（全）
          format: binary
        imageStarFillHalf:
          type: string
          description: 星画像（半）
          format: binary
        imageStarFillNone:
          type: string
          description: 星画像（無）
          format: binary
        id:
          type: number
          example: ''
          description: ''
        name:
          type: string
          example: ''
          description: 評価パーツ名称
        inDesign:
          type: string
          description: ' 口コミ台紙 INDD'
          format: binary
        comment:
          type: string
          example: ''
          description: 評価パーツ備考
        mediaTypes:
          type: array
          description: 媒体
          items:
            type: string
            enum:
              - MAGAZINE
              - TEST
        documentSizeCode:
          type: string
          enum:
            - ONE_ONE
            - ONE_TWO
            - ONE_FOUR
          description: 原稿サイズ
      required:
        - id
        - documentSizeCode
    DocumentBoastStampWithCountDto:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DocumentBoastStampResponseDto'
        count:
          type: number
          example: '1'
          description: そうドキュメント数
      required:
        - data
        - count
    CreateDocumentBoastStampRequestDto:
      type: object
      properties:
        image:
          type: string
          description: 自慢スタンプ画像
          format: binary
        imageConvert:
          type: string
          description: 自慢スタンプEPS画像
          format: binary
        name:
          type: string
          example: 自慢スタンプ１
          description: 自慢スタンプ名称
        comment:
          type: string
          example: 自慢スタンプ備考欄
          description: 自慢スタンプ備考欄
        attributeCode:
          type: string
          enum:
            - PRIDE
            - SCORES
          example: 自慢スタンプ属性
          description: 自慢スタンプ属性
        mediaTypes:
          type: array
          description: 媒体
          items:
            type: string
            enum:
              - MAGAZINE
              - TEST
      required:
        - name
    UpdateDocumentBoastStampDto:
      type: object
      properties:
        image:
          type: string
          description: 自慢スタンプ画像
          format: binary
        imageConvert:
          type: string
          description: 自慢スタンプEPS画像
          format: binary
        id:
          type: number
          example: '1'
          description: 自慢スタンプid
        name:
          type: string
          example: ''
          description: 自慢スタンプ名称(必須)
        comment:
          type: string
          example: ''
          description: 自慢スタンプ備考
        attributeCode:
          type: string
          enum:
            - PRIDE
            - SCORES
          example: 自慢スタンプ属性
          description: 自慢スタンプ属性
        mediaTypes:
          type: array
          description: 媒体コード
          items:
            type: string
            enum:
              - MAGAZINE
              - TEST
      required:
        - id
    DocumentHeadLineImageResponseDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: id
        image:
          type: string
          example: /path
          description: 画像パス
        imageConvert:
          type: string
          example: /path
          description: 変換画像パス
        code:
          type: string
          example: '01'
          description: 画像コード
        headLineByEditionId:
          type: number
          example: 1
          description: 版毎のid
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
      required:
        - id
        - image
        - imageConvert
        - code
        - headLineByEditionId
        - createdAt
        - modifiedAt
    DocumentHeadLineByEditionCodeDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: ID
        documentHeadLineId:
          type: number
          example: 1
          description: 見出しID
        editionCode:
          type: string
          enum:
            - HOKKAIDO
            - TOUHOKU
            - JOSHINETSU
            - KITA_KANTO
            - KANTO
            - TOKAI
            - KANSAI
            - HOKURIKU
            - CHUGOKU_SHIKOKU
            - KYUSHU
            - KANSAI_HOKURIKU
            - TOUKAI_HOKURIKU
            - TEST
          example: KANTO
          description: 版コード
        documentHeadLineImages:
          description: 版毎のイメージ
          type: array
          items:
            $ref: '#/components/schemas/DocumentHeadLineImageResponseDto'
      required:
        - id
        - documentHeadLineId
        - editionCode
    DocumentHeadLineMediaTypeDto:
      type: object
      properties:
        mediaTypeCode:
          type: string
          enum:
            - MAGAZINE
            - TEST
          example: MAGAZINE
          description: 媒体種別コード
        masterMediaType:
          type: array
          items:
            $ref: '#/components/schemas/MasterMediaTypeDto'
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
        documentHeadLineId:
          type: number
          example: 1
          description: 見出しID
      required:
        - mediaTypeCode
        - masterMediaType
        - createdAt
        - modifiedAt
        - documentHeadLineId
    DocumentHeadLineResponseDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: ID
        code:
          type: number
          example: 1
          description: 見出しコード
        name:
          type: string
          example: name
          description: 見出し名称
        headLineByEditionCodes:
          description: 版の配列
          type: array
          items:
            $ref: '#/components/schemas/DocumentHeadLineByEditionCodeDto'
        documentHeadLineMediaTypes:
          description: 媒体情報の配列
          type: array
          items:
            $ref: '#/components/schemas/DocumentHeadLineMediaTypeDto'
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
      required:
        - id
        - code
        - name
        - createdAt
        - modifiedAt
    DocumentHeadLineWithCountDto:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DocumentHeadLineResponseDto'
        count:
          type: number
          example: '1'
          description: そうドキュメント数
      required:
        - data
        - count
    CreateBeforeDocumentHeadLineDto:
      type: object
      properties:
        name:
          type: string
          example: 見出し1
          description: 見出し名
        mediaTypes:
          type: array
          description: 登録する媒体コードをMAGAZINE,PREMIUMなどをカンマ区切りで送る。
          items:
            type: string
            enum:
              - MAGAZINE
              - TEST
        editionCodes:
          type: array
          description: 画像ファイルを登録する版コードをKANTO,TOHOKUなどをカンマ区切りで送る。
          items:
            type: string
            enum:
              - HOKKAIDO
              - TOUHOKU
              - JOSHINETSU
              - KITA_KANTO
              - KANTO
              - TOKAI
              - KANSAI
              - HOKURIKU
              - CHUGOKU_SHIKOKU
              - KYUSHU
              - KANSAI_HOKURIKU
              - TOUKAI_HOKURIKU
              - TEST
        images:
          type: array
          items:
            type: string
            format: binary
          description: 上記で指定した順番にファイルを追加する<br/>HOKKAIDO,KANTOならば[北海道のファイル,関東のファイル]といった具合
        imageConverts:
          type: array
          items:
            type: string
            format: binary
          description: 上記で指定した順番にファイルを追加する<br/>HOKKAIDO,KANTOならば[北海道のファイル,関東のファイル] といった具合
        codes:
          description: code1,code2 in the above order
          type: array
          items:
            type: string
      required:
        - name
    UpdateDocumentHeadLineDto:
      type: object
      properties:
        id:
          type: number
          example: ''
          description: ''
        name:
          type: string
          example: 見出し1
          description: 見出し名
        mediaTypes:
          type: array
          description: 登録する媒体コードをMAGAZINE,PREMIUMなどをカンマ区切りで送る。
          items:
            type: string
            enum:
              - MAGAZINE
              - TEST
        imageIds:
          description: 画像id配列(変更の場合は数字を入力、新規登録の場合はnullを登録)
          type: array
          items:
            type: number
        editionCodes:
          type: array
          description: 画像ファイルを登録する版コードをKANTO,TOHOKUなどをカンマ区切りで送る。
          items:
            type: string
            enum:
              - HOKKAIDO
              - TOUHOKU
              - JOSHINETSU
              - KITA_KANTO
              - KANTO
              - TOKAI
              - KANSAI
              - HOKURIKU
              - CHUGOKU_SHIKOKU
              - KYUSHU
              - KANSAI_HOKURIKU
              - TOUKAI_HOKURIKU
              - TEST
        deleteEditionCodes:
          type: array
          description: 削除する版コードをKANTO,TOHOKUなどをarrayで送る<br />更新時に作成の方に入っていた場合は無視される
          items:
            type: string
            enum:
              - HOKKAIDO
              - TOUHOKU
              - JOSHINETSU
              - KITA_KANTO
              - KANTO
              - TOKAI
              - KANSAI
              - HOKURIKU
              - CHUGOKU_SHIKOKU
              - KYUSHU
              - KANSAI_HOKURIKU
              - TOUKAI_HOKURIKU
              - TEST
        images:
          type: array
          items:
            type: string
            format: binary
          description: |-
            上記で指定した順番にファイルを追加する<br/>
                  HOKKAIDO,KANTOならば[北海道のファイル,関東のファイル]といった具合<br/>
                  ファイルを更新しない場合は"empty"というファイル名を作成して登録
        imageConverts:
          type: array
          items:
            type: string
            format: binary
          description: |-
            上記で指定した順番にファイルを追加する<br/>
                HOKKAIDO,KANTOならば[北海道のファイル,関東のファイル]といった具合<br/>
                ファイルを更新しない場合は"empty"というファイル名を作成して登録
        codes:
          description: 登録順にcodeを追加する更新しない場合はnull
          type: array
          items:
            type: string
      required:
        - id
    UpdateDocumentHeadLineByCodeDto:
      type: object
      properties:
        editionCode:
          type: string
          enum:
            - HOKKAIDO
            - TOUHOKU
            - JOSHINETSU
            - KITA_KANTO
            - KANTO
            - TOKAI
            - KANSAI
            - HOKURIKU
            - CHUGOKU_SHIKOKU
            - KYUSHU
            - KANSAI_HOKURIKU
            - TOUKAI_HOKURIKU
            - TEST
          description: 画像ファイルを登録する版コードを指定する
        imageIds:
          description: 画像id配列(変更の場合は数字を入力、新規登録の場合はnullを登録)
          type: array
          items:
            type: number
        images:
          type: array
          items:
            type: string
            format: binary
          description: |-
            上記で指定した順番にファイルを追加する<br/>
                  ファイルを更新しない場合は"empty"というファイル名を作成して登録
        imageConverts:
          type: array
          items:
            type: string
            format: binary
          description: |-
            上記で指定した順番にファイルを追加する<br/>
                  ファイルを更新しない場合は"empty"というファイル名を作成して登録
        codes:
          description: 上記で指定した順番にコードを追加する
          type: array
          items:
            type: string
        documentHeadLineId:
          type: number
          example: ''
          description: documentHeadLineId
      required:
        - editionCode
        - documentHeadLineId
    ImageCodePublicDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: アップデートする画像id
        code:
          type: string
          example: code
          description: アップデートする画像のcode
      required:
        - id
        - code
    PageMountImageResponseDto:
      type: object
      properties:
        id:
          type: number
          example: ''
          description: id
        image:
          type: string
          example: /path
          description: 画像パス
        imageConvert:
          type: string
          example: aaaa
          description: 変換画像パス
        code:
          type: number
          example: aaaa
          description: 画像コード
        pageMountByEditionId:
          type: number
          example: ''
          description: pageMountByEditionId
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
      required:
        - id
        - image
        - imageConvert
        - code
        - pageMountByEditionId
        - createdAt
        - modifiedAt
    PageMountByEditionCodeDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: ID
        pageMountId:
          type: number
          example: 1
          description: 欄外下画像ID
        editionCode:
          type: string
          enum:
            - HOKKAIDO
            - TOUHOKU
            - JOSHINETSU
            - KITA_KANTO
            - KANTO
            - TOKAI
            - KANSAI
            - HOKURIKU
            - CHUGOKU_SHIKOKU
            - KYUSHU
            - KANSAI_HOKURIKU
            - TOUKAI_HOKURIKU
            - TEST
          example: KANTO
          description: 版コード
        pageMountImages:
          description: 版毎のイメージ
          type: array
          items:
            $ref: '#/components/schemas/PageMountImageResponseDto'
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
      required:
        - id
        - pageMountId
        - editionCode
        - createdAt
        - modifiedAt
    PageMountMediaTypeDto:
      type: object
      properties:
        mediaTypeCode:
          type: string
          enum:
            - MAGAZINE
            - TEST
          example: MAGAZINE
          description: 媒体種別コード
        masterMediaType:
          type: array
          items:
            $ref: '#/components/schemas/MasterMediaTypeDto'
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
        pageMountId:
          type: number
          example: 1
          description: 欄外下画像ID
      required:
        - mediaTypeCode
        - masterMediaType
        - createdAt
        - modifiedAt
        - pageMountId
    PageMountResponseDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: ID
        name:
          type: string
          example: name
          description: 欄外下画像名称
        pageMountByEditionCodes:
          description: 版の配列
          type: array
          items:
            $ref: '#/components/schemas/PageMountByEditionCodeDto'
        pageMountMediaTypes:
          description: 欄外下画像媒体タイプの配列
          type: array
          items:
            $ref: '#/components/schemas/PageMountMediaTypeDto'
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
      required:
        - id
        - name
        - createdAt
        - modifiedAt
    PageMountWithCountDto:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PageMountResponseDto'
        count:
          type: number
          example: '1'
          description: そうドキュメント数
      required:
        - data
        - count
    CreateBeforePageMountDto:
      type: object
      properties:
        name:
          type: string
          example: 欄外下画像1
          description: 欄外下画像名
        pageMountMediaTypes:
          type: array
          description: 登録する媒体コードをMAGAZINE,PREMIUMなどをカンマ区切りで送る。
          items:
            type: string
            enum:
              - MAGAZINE
              - TEST
        pageMountByEditionCodes:
          type: array
          description: 画像ファイルを登録する版コードをKANTO,TOHOKUなどをカンマ区切りで送る。
          items:
            type: string
            enum:
              - HOKKAIDO
              - TOUHOKU
              - JOSHINETSU
              - KITA_KANTO
              - KANTO
              - TOKAI
              - KANSAI
              - HOKURIKU
              - CHUGOKU_SHIKOKU
              - KYUSHU
              - KANSAI_HOKURIKU
              - TOUKAI_HOKURIKU
              - TEST
        images:
          type: array
          items:
            type: string
            format: binary
          description: 上記で指定した順番にファイルを追加する<br/>HOKKAIDO,KANTOならば[北海道のファイル,関東のファイル] といった具合
        imageConverts:
          type: array
          items:
            type: string
            format: binary
          description: 上記で指定した順番にファイルを追加する<br/>HOKKAIDO,KANTOならば[北海道のファイル,関東のファイル] といった具合
      required:
        - name
    UpdatePageMountDto:
      type: object
      properties:
        id:
          type: number
          example: ''
          description: ''
        name:
          type: string
          example: 欄外下画像1
          description: 欄外下画像名
        mediaTypes:
          type: array
          description: 登録する媒体コードをMAGAZINE,PREMIUMなどをカンマ区切りで送る。
          items:
            type: string
            enum:
              - MAGAZINE
              - TEST
        imageIds:
          description: 画像id配列(変更の場合は数字を入力、新規登録の場合はnullを登録)
          type: array
          items:
            type: number
        editionCodes:
          type: array
          description: KANTO,TOHOKUなどをarrayで送る
          items:
            type: string
            enum:
              - HOKKAIDO
              - TOUHOKU
              - JOSHINETSU
              - KITA_KANTO
              - KANTO
              - TOKAI
              - KANSAI
              - HOKURIKU
              - CHUGOKU_SHIKOKU
              - KYUSHU
              - KANSAI_HOKURIKU
              - TOUKAI_HOKURIKU
              - TEST
        deleteEditionCodes:
          type: array
          description: 削除する版コードをKANTO,TOHOKUなどをarrayで送る<br />更新時に作成の方に入っていた場合は無視される
          items:
            type: string
            enum:
              - HOKKAIDO
              - TOUHOKU
              - JOSHINETSU
              - KITA_KANTO
              - KANTO
              - TOKAI
              - KANSAI
              - HOKURIKU
              - CHUGOKU_SHIKOKU
              - KYUSHU
              - KANSAI_HOKURIKU
              - TOUKAI_HOKURIKU
              - TEST
        images:
          type: array
          items:
            type: string
            format: binary
          description: |-
            上記で指定した順番にファイルを追加する<br/>
                HOKKAIDO,KANTOならば[北海道のファイル,関東のファイル]といった具合<br/>
                ファイルを更新しない場合は"empty"というファイル名を作成して登録
        imageConverts:
          type: array
          items:
            type: string
            format: binary
          description: |-
            上記で指定した順番にファイルを追加する<br/>
                HOKKAIDO,KANTOならば[北海道のファイル,関東のファイル]といった具合<br/>
                ファイルを更新しない場合は"empty"というファイル名を作成して登録
      required:
        - id
    UpdatePageMountEditionByCodeDto:
      type: object
      properties:
        editionCode:
          type: string
          enum:
            - HOKKAIDO
            - TOUHOKU
            - JOSHINETSU
            - KITA_KANTO
            - KANTO
            - TOKAI
            - KANSAI
            - HOKURIKU
            - CHUGOKU_SHIKOKU
            - KYUSHU
            - KANSAI_HOKURIKU
            - TOUKAI_HOKURIKU
            - TEST
          description: 画像ファイルを登録する版コードを指定する
        imageIds:
          description: 画像id配列(変更の場合は数字を入力、新規登録の場合はnullを登録)
          type: array
          items:
            type: number
        images:
          type: array
          items:
            type: string
            format: binary
          description: |-
            上記で指定した順番にファイルを追加する<br/>
                  ファイルを更新しない場合は"empty"というファイル名を作成して登録
        imageConverts:
          type: array
          items:
            type: string
            format: binary
          description: |-
            上記で指定した順番にファイルを追加する<br/>
                  ファイルを更新しない場合は"empty"というファイル名を作成して登録
        codes:
          description: 上記で指定した順番にコードを追加する
          type: array
          items:
            type: string
        pageMountId:
          type: number
          example: 1
          description: pageMountId
      required:
        - editionCode
        - pageMountId
    DocumentInMyStockWithAliasDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: id
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        hotelCode:
          type: string
          example: '234'
          description: ''
        documentCode:
          type: string
          example: Y202210WB10100
          description: ''
        status:
          $ref: '#/components/schemas/MasterDocumentStatusDto'
        documentSize:
          $ref: '#/components/schemas/MasterDocumentSizeDto'
        documentContent:
          $ref: '#/components/schemas/DocumentContentResponseDto'
        pageId:
          type: number
          example: 1
          description: id
        alias:
          $ref: '#/components/schemas/DocumentResponseDto'
        sharingAliasTo:
          type: array
          items:
            $ref: '#/components/schemas/DocumentResponseDto'
      required:
        - id
        - modifiedAt
        - hotelCode
        - documentCode
        - status
        - documentSize
        - documentContent
        - pageId
        - alias
        - sharingAliasTo
    BookletInMyStockDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: id
        masterEditionCode:
          $ref: '#/components/schemas/MasterEditionCodeDto'
      required:
        - id
        - masterEditionCode
    PageInMyStockDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: id
        image:
          type: string
          example: createPersonCognito
      required:
        - id
        - image
    DocumentMyStockPublicDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: id
        document:
          $ref: '#/components/schemas/DocumentInMyStockWithAliasDto'
        booklet:
          $ref: '#/components/schemas/BookletInMyStockDto'
        page:
          $ref: '#/components/schemas/PageInMyStockDto'
        createPersonCognito:
          type: string
          example: createPersonCognito
      required:
        - id
        - createPersonCognito
    SearchDocumentMyStockDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: id
        issueYear:
          type: number
          example: ''
          description: 発行年
        issueMonth:
          type: number
          example: ''
          description: 発行月
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        createdAt:
          format: date-time
          type: string
          description: 作成日
        mediaType:
          type: string
          enum:
            - MAGAZINE
            - TEST
          description: 登録する媒体コードをMAGAZINE,PREMIUMなどをカンマ区切りで送る。
        documentMyStocks:
          type: array
          items:
            $ref: '#/components/schemas/DocumentMyStockPublicDto'
      required:
        - id
        - issueYear
        - issueMonth
        - modifiedAt
        - createdAt
    DocumentMyStockResponseWithCountDto:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SearchDocumentMyStockDto'
        count:
          type: number
          example: '1'
          description: そうドキュメント数
      required:
        - data
        - count
    DocumentMyStockDto:
      type: object
      properties:
        documentId:
          type: number
          example: 1
          description: documentId
        createPersonCognito:
          type: string
          example: AAAXXXCCVCC
      required:
        - documentId
        - createPersonCognito
    DeleteDocumentMyStockDto:
      type: object
      properties:
        documentId:
          type: number
          example: 1
          description: documentId
        createPersonCognito:
          type: string
          example: AAAXXXCCVCC
      required:
        - documentId
        - createPersonCognito
    AuthenticateRequestDto:
      type: object
      properties:
        name:
          type: string
          example: user
          description: ユーザー名
        password:
          type: string
          example: password
          description: パスワード
      required:
        - name
        - password
    Payload:
      type: object
      properties:
        sub:
          type: string
          example: aa-bb-dd
          description: sub
        email_verified:
          type: boolean
          example: true
          description: email_verified
        iss:
          type: string
          example: https://cog
          description: iss
        origin_jti:
          type: string
          example: 3c3f9-3c3f93c3f9-
          description: origin_jti
        aud:
          type: string
          example: 6319f0e0-6319f0e0
          description: aud
        event_id:
          type: string
          example: ..0ntt6ct..
          description: event_id
        token_use:
          type: string
          example: id
          description: token_use
        auth_time:
          type: number
          example: 1675728806
          description: auth_time
        name:
          type: string
          example: name
          description: name
        exp:
          type: number
          example: 1675728806
          description: exp
        iat:
          type: number
          example: 1675728806
          description: iat
        jti:
          type: string
          example: aa
          description: jti
        email:
          type: string
          example: aa@aa
          description: email
      required:
        - sub
        - email_verified
        - iss
        - origin_jti
        - aud
        - event_id
        - token_use
        - auth_time
        - name
        - exp
        - iat
        - jti
        - email
    IdTokenDto:
      type: object
      properties:
        jwtToken:
          type: string
          example: aa...
          description: token
        payload:
          description: Payload
          allOf:
            - $ref: '#/components/schemas/Payload'
      required:
        - jwtToken
        - payload
    RefreshToken:
      type: object
      properties:
        token:
          type: string
          example: aa...
          description: token
      required:
        - token
    AuthorizeResponseDto:
      type: object
      properties:
        idToken:
          description: idToken
          allOf:
            - $ref: '#/components/schemas/IdTokenDto'
        accessToken:
          description: AccessToken
          allOf:
            - $ref: '#/components/schemas/IdTokenDto'
        refreshToken:
          description: RefreshToken
          allOf:
            - $ref: '#/components/schemas/RefreshToken'
        clockDrift:
          type: number
          example: 0
          description: clockDrift
      required:
        - idToken
        - accessToken
        - refreshToken
        - clockDrift
    RegisterRequestDto:
      type: object
      properties:
        name:
          type: string
          example: user
          description: ユーザー名
        password:
          type: string
          example: password
          description: パスワード
        email:
          type: string
          example: email
          description: メールアドレス
      required:
        - name
        - password
        - email
    VerifyCodeRequestDto:
      type: object
      properties:
        name:
          type: string
          example: user
          description: ユーザー名
        code:
          type: string
          example: code
          description: 確認コード
      required:
        - name
        - code
    VerifyResponseDto:
      type: object
      properties:
        ok:
          type: string
          description: message
        email:
          type: string
          description: email
        cognito:groups:
          description: cognito:groups
          type: array
          items:
            type: string
      required:
        - ok
        - email
        - cognito:groups
    ThumbIndexMediaTypeDto:
      type: object
      properties:
        mediaTypeCode:
          type: string
          enum:
            - MAGAZINE
            - TEST
          example: MAGAZINE
          description: 媒体種別コード
        masterMediaType:
          type: array
          items:
            $ref: '#/components/schemas/MasterMediaTypeDto'
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
        thumbIndexId:
          type: number
          example: 1
          description: ID
      required:
        - mediaTypeCode
        - masterMediaType
        - createdAt
        - modifiedAt
        - thumbIndexId
    ThumbIndexResponseDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: ID
        name:
          type: string
          example: name
          description: name
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
        thumbIndexByEditionCodes:
          type: array
          items:
            $ref: '#/components/schemas/ThumbIndexByEditionCodeDto'
        thumbIndexMediaTypes:
          type: array
          items:
            $ref: '#/components/schemas/ThumbIndexMediaTypeDto'
      required:
        - id
        - name
        - createdAt
        - modifiedAt
        - deletedAt
    ThumbIndexWithCountResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ThumbIndexResponseDto'
        count:
          type: number
      required:
        - data
        - count
    ThumbIndexBeforeCreateDto:
      type: object
      properties:
        name:
          type: string
          example: name
          description: name
        thumbIndexMediaTypes:
          type: array
          description: 登録する媒体コードをMAGAZINE,PREMIUMなどをカンマ区切りで送る。
          items:
            type: string
            enum:
              - MAGAZINE
              - TEST
        thumbIndexByEditionCodes:
          type: array
          description: 画像ファイルを登録する版コードをKANTO,TOHOKUなどをカンマ区切りで送る。
          items:
            type: string
            enum:
              - HOKKAIDO
              - TOUHOKU
              - JOSHINETSU
              - KITA_KANTO
              - KANTO
              - TOKAI
              - KANSAI
              - HOKURIKU
              - CHUGOKU_SHIKOKU
              - KYUSHU
              - KANSAI_HOKURIKU
              - TOUKAI_HOKURIKU
              - TEST
        images:
          type: array
          items:
            type: string
            format: binary
          description: 上記で指定した順番にファイルを追加する<br/>HOKKAIDO,KANTOならば[北海道のファイル,関東のファイル] といった具合
        imageConverts:
          type: array
          items:
            type: string
            format: binary
          description: 上記で指定した順番に変換ファイルを追加する<br/>HOKKAIDO,KANTOならば[北海道のファイル,関東のファイル] といった具合
        codes:
          description: 上記で指定した順番にコードを追加する<br/>HOKKAIDO,KANTOならば[北海道のコード,関東のコード] といった具合
          type: array
          items:
            type: string
      required:
        - name
    ThumbIndexUpdateDto:
      type: object
      properties:
        id:
          type: number
          example: ''
          description: id
        name:
          type: string
          example: name
          description: name
        thumbIndexMediaTypes:
          type: array
          description: 登録する媒体コードをMAGAZINE,PREMIUMなどをカンマ区切りで送る。
          items:
            type: string
            enum:
              - MAGAZINE
              - TEST
        imageIds:
          description: 画像id配列(変更の場合は数字を入力、新規登録の場合はnullを登録)
          type: array
          items:
            type: number
        thumbIndexByEditionCodes:
          type: array
          description: 画像ファイルを登録する版コードをKANTO,TOHOKUなどをカンマ区切りで送る。
          items:
            type: string
            enum:
              - HOKKAIDO
              - TOUHOKU
              - JOSHINETSU
              - KITA_KANTO
              - KANTO
              - TOKAI
              - KANSAI
              - HOKURIKU
              - CHUGOKU_SHIKOKU
              - KYUSHU
              - KANSAI_HOKURIKU
              - TOUKAI_HOKURIKU
              - TEST
        deleteEditionCodes:
          type: array
          description: 削除する版コードをKANTO,TOHOKUなどをarrayで送る<br />更新時に作成の方に入っていた場合は無視される
          items:
            type: string
            enum:
              - HOKKAIDO
              - TOUHOKU
              - JOSHINETSU
              - KITA_KANTO
              - KANTO
              - TOKAI
              - KANSAI
              - HOKURIKU
              - CHUGOKU_SHIKOKU
              - KYUSHU
              - KANSAI_HOKURIKU
              - TOUKAI_HOKURIKU
              - TEST
        images:
          type: array
          items:
            type: string
            format: binary
          description: |-
            上記で指定した順番にファイルを追加する<br/>
                HOKKAIDO,KANTOならば[北海道のファイル,関東のファイル]といった具合<br/>
                ファイルを更新しない場合は"empty"というファイル名を作成して登録
        imageConverts:
          type: array
          items:
            type: string
            format: binary
          description: |-
            上記で指定した順番にファイルを追加する<br/>
                HOKKAIDO,KANTOならば[北海道のファイル,関東のファイル]といった具合<br/>
                ファイルを更新しない場合は"empty"というファイル名を作成して登録
        codes:
          description: 上記で指定した順番にコードを追加する<br/>HOKKAIDO,KANTOならば[北海道のコード,関東のコード] といった具合
          type: array
          items:
            type: string
      required:
        - id
    UpdateThumbIndexEditionByCodeDto:
      type: object
      properties:
        editionCode:
          type: string
          enum:
            - HOKKAIDO
            - TOUHOKU
            - JOSHINETSU
            - KITA_KANTO
            - KANTO
            - TOKAI
            - KANSAI
            - HOKURIKU
            - CHUGOKU_SHIKOKU
            - KYUSHU
            - KANSAI_HOKURIKU
            - TOUKAI_HOKURIKU
            - TEST
          description: 画像ファイルを登録する版コードを指定する
        imageIds:
          description: 画像id配列(変更の場合は数字を入力、新規登録の場合はnullを登録)
          type: array
          items:
            type: number
        images:
          type: array
          items:
            type: string
            format: binary
          description: |-
            上記で指定した順番にファイルを追加する<br/>
                  ファイルを更新しない場合は"empty"というファイル名を作成して登録
        imageConverts:
          type: array
          items:
            type: string
            format: binary
          description: |-
            上記で指定した順番にファイルを追加する<br/>
                  ファイルを更新しない場合は"empty"というファイル名を作成して登録
        codes:
          description: 上記で指定した順番にコードを追加する
          type: array
          items:
            type: string
        thumbIndexId:
          type: number
          example: 1
          description: thumbIndexId
      required:
        - editionCode
        - thumbIndexId
    ConvertRequestDto:
      type: object
      properties:
        image:
          type: string
          description: EPS画像
          format: binary
      required:
        - image
    ConvertResponseDto:
      type: object
      properties:
        image:
          type: string
          example: aaa//aaeet
          description: EPS画像(base64)
      required:
        - image
    CreateDocumentPartsContentDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: Document id
        documentPartsId:
          type: number
          example: 1
          description: Document Parts id
        templateIndex:
          type: number
          example: 1
          description: テンプレートによって分けられた区画の何番目かを表すインデックス
        patternIndex:
          type: number
          example: 1
          description: パターンによって分けられた区画の何番目かを表すインデックス
      required:
        - id
        - documentPartsId
        - templateIndex
        - patternIndex
    DocumentPartsMediaTypeDto:
      type: object
      properties:
        mediaTypeCode:
          type: string
          enum:
            - MAGAZINE
            - TEST
          example: MAGAZINE
          description: 媒体種別コード
        masterMediaType:
          type: array
          items:
            $ref: '#/components/schemas/MasterMediaTypeDto'
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
        documentPartsId:
          type: number
          example: 1
          description: 評価パーツID
      required:
        - mediaTypeCode
        - masterMediaType
        - createdAt
        - modifiedAt
        - documentPartsId
    DocumentPartsCategoryDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: id
        documentPartsClass:
          type: string
          enum:
            - NORMAL
            - COMMON
            - SELECTION
            - PHOTO
          example: NORMAL
          description: カテゴリのコード
        name:
          type: string
          example: 共通
          description: 名前
        order:
          type: number
          example: 1
          description: 表示順
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
      required:
        - id
        - documentPartsClass
        - name
        - order
        - createdAt
        - modifiedAt
    DocumentPartsResponseDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: id
        name:
          type: string
          example: partsName
          description: パーツ名
        imageThumbnail:
          type: string
          example: /path
          description: サムネイルパス
        inDesignFile:
          type: string
          example: /path
          description: インデザイン画像パス
        comment:
          type: string
          example: 内容
          description: パーツの内容
        freeWord:
          type: string
          example: 備考
          description: パーツの備考欄
        mediaTypes:
          description: パーツの備考欄
          type: array
          items:
            $ref: '#/components/schemas/DocumentPartsMediaTypeDto'
        documentPartsClass:
          type: string
          enum:
            - NORMAL
            - COMMON
            - SELECTION
            - PHOTO
          description: パーツカテゴリ
        documentPartsCategoryId:
          type: number
          example: 1
          description: パーツカテゴリID
        documentPartsCategory:
          $ref: '#/components/schemas/DocumentPartsCategoryDto'
        documentSizeCode:
          type: string
          enum:
            - ONE_ONE
            - ONE_TWO
            - ONE_FOUR
          description: 原稿サイズコード
        documentSize:
          $ref: '#/components/schemas/MasterDocumentSizeDto'
        canUse:
          type: boolean
          example: false
          description: 使用可否 false => 不可
        createdAt:
          format: date-time
          type: string
          description: 作成日
        modifiedAt:
          format: date-time
          type: string
          description: 修正日
        deletedAt:
          format: date-time
          type: string
          example: null
          description: 削除日
      required:
        - id
        - name
        - imageThumbnail
        - inDesignFile
        - comment
        - freeWord
        - mediaTypes
        - documentPartsClass
        - documentPartsCategoryId
        - documentPartsCategory
        - documentSizeCode
        - documentSize
        - canUse
        - createdAt
        - modifiedAt
    DocumentPartsContentResponseDto:
      type: object
      properties:
        documentPartsId:
          type: number
          example: 1
          description: パーツid
        documentId:
          type: number
          example: 1
          description: 原稿id
        templateIndex:
          type: number
          example: 1
          description: テンプレートによって分けられた区画の何番目かを表すインデックス
        patternIndex:
          type: number
          example: 1
          description: パターンによって分けられた区画の何番目かを表すインデックス
        planCode:
          type: string
          example: パーツプランコード
          description: パーツプランコード
        text:
          type: string
          example: テキスト
          description: 文章
        caption:
          type: string
          example: テキスト
          description: 脚注
        imagePath:
          type: string
          example: ''
          description: 画像パス
        boastStampId:
          type: number
          example: 1
          description: 自慢スタンプ
        documentParts:
          $ref: '#/components/schemas/DocumentPartsResponseDto'
      required:
        - documentPartsId
        - documentId
        - templateIndex
        - patternIndex
        - boastStampId
        - documentParts
    UpdateDocumentPartsContentDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: Parts Content id
        documentPartsId:
          type: number
          example: 1
          description: Document Parts id
        templateIndex:
          type: number
          example: 1
          description: テンプレートによって分けられた区画の何番目かを表すインデックス
        patternIndex:
          type: number
          example: 1
          description: パターンによって分けられた区画の何番目かを表すインデックス
        text:
          type: string
          example: パーツ文章
          description: 文章
        caption:
          type: string
          example: 脚注テキストのテストです
          description: 脚注
        imagePath:
          type: string
          example: /image.jpg
          description: 画像パス
        boastStampId:
          type: number
          example: 1
          description: 自慢スタンプ
        planCode:
          type: string
          example: AAAA
          description: パーツプランコード
      required:
        - id
        - documentPartsId
        - templateIndex
        - patternIndex
        - boastStampId
    DeleteDocumentPartsContentDto:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: Parts Content id
      required:
        - id
    DocumentPartsWithCountDto:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DocumentPartsResponseDto'
        count:
          type: number
          example: 1
          description: そうドキュメント数
      required:
        - data
        - count
    MasterPartsClassDto:
      type: object
      properties:
        code:
          type: string
          enum:
            - NORMAL
            - COMMON
            - SELECTION
            - PHOTO
          example: COMMON
          description: カテゴリのコード
        name:
          type: string
          example: 共通
          description: 名前
        kana:
          type: string
          example: キョウツウ
          description: カナ
        order:
          type: number
          example: 1
          description: 表示順
        documentPartsCategories:
          description: 表示順
          type: array
          items:
            $ref: '#/components/schemas/DocumentPartsCategoryDto'
      required:
        - code
        - name
        - kana
        - order
        - documentPartsCategories
    CreateDocumentPartsDto:
      type: object
      properties:
        imageThumbnail:
          type: string
          description: サムネイル
          format: binary
        inDesignFile:
          type: string
          description: インデザインファイル
          format: binary
        comment:
          type: string
          example: ''
          description: パーツ内容
        freeWord:
          type: string
          example: ''
          description: パーツ備考
        canUse:
          type: boolean
          example: false
          description: 不可=false
        mediaTypes:
          type: array
          description: 媒体
          items:
            type: string
            enum:
              - MAGAZINE
              - TEST
        documentPartsClass:
          type: string
          enum:
            - NORMAL
            - COMMON
            - SELECTION
            - PHOTO
          description: 種別
        documentPartsCategoryId:
          type: number
          example: 1
          description: カテゴリid
        documentSizeCode:
          type: string
          enum:
            - ONE_ONE
            - ONE_TWO
            - ONE_FOUR
          example: ONE_ONE
          description: 原稿サイズ
        name:
          type: string
          example: ''
          description: パーツ名称
      required:
        - documentPartsClass
        - documentPartsCategoryId
        - documentSizeCode
        - name
    UpdateDocumentPartsDto:
      type: object
      properties:
        imageThumbnail:
          type: string
          description: サムネイル
          format: binary
        inDesignFile:
          type: string
          description: インデザインファイル
          format: binary
        comment:
          type: string
          example: ''
          description: パーツ内容
        freeWord:
          type: string
          example: ''
          description: パーツ備考
        canUse:
          type: boolean
          example: false
          description: 不可=false
        mediaTypes:
          type: array
          description: 媒体
          items:
            type: string
            enum:
              - MAGAZINE
              - TEST
        documentPartsClass:
          type: string
          enum:
            - NORMAL
            - COMMON
            - SELECTION
            - PHOTO
          description: 種別
        documentPartsCategoryId:
          type: number
          example: 1
          description: カテゴリid
        documentSizeCode:
          type: string
          enum:
            - ONE_ONE
            - ONE_TWO
            - ONE_FOUR
          example: ONE_ONE
          description: 原稿サイズ
        id:
          type: number
          example: 1
          description: id
        name:
          type: string
          example: パーツ名
          description: パーツ名称
      required:
        - documentPartsClass
        - documentPartsCategoryId
        - documentSizeCode
        - id
    MultiSessionTimeDto:
      type: object
      properties: {}
    RegisterPriceTableDraftDto:
      type: object
      properties:
        pattern:
          type: string
          example: A
          description: Pattern
        needEdit:
          type: number
        entry_plan_ids:
          example:
            - a1C6F00000hqyWLUAY
          description: entry_plan_ids
          type: array
          items:
            type: string
        mainEntryPlanId:
          type: string
          example: ''
          description: MAIN entry_plan_id
        mainEntryPlanName:
          type: string
          example: ''
          description: 'MAIN plan_name (with room name) '
        travelPlanName:
          example:
            - 三日月膳(★おまかせ客室)
          description: プラン名
          type: array
          items:
            type: string
        numberOfGuestsByRoom:
          example:
            - 2
          description: number_of_guests_by_room
          type: array
          items:
            type: number
        customNames:
          type: array
          items:
            type: string
        fromDate:
          format: date-time
          type: string
          description: from date
          example: 2023-06-01T00:00:00.000Z
        toDate:
          format: date-time
          type: string
          description: to date
          example: 2023-07-31T00:00:00.000Z
        sessions:
          description: set period time, null or undefined if not set
          example:
            - ranges:
                - startDate: 2023/06/01
                  endDate: 2023/06/15
            - ranges:
                - startDate: 2023/06/30
                  endDate: 2023/07/31
          type: array
          items:
            $ref: '#/components/schemas/MultiSessionTimeDto'
        exclusionDate:
          type: boolean
          description: ''
          example: false
        isMain:
          type: boolean
          description: ''
          example: false
        idEdit:
          type: string
          description: ''
          example: '1_1_1'
        elementaryPrice:
          type: number
          description: ''
        infantPrice:
          type: number
          description: ''
        mediaYearMonth:
          type: string
          example: '202306'
          description: ''
      required:
        - pattern
        - entry_plan_ids
        - numberOfGuestsByRoom
        - idEdit
    ExclusionDateDraftDto:
      type: object
      properties:
        saleStartDate:
          format: date-time
          type: string
          description: ''
          example: ''
        saleEndDate:
          format: date-time
          type: string
          description: ''
          example: ''
        entryPlanIds:
          description: ''
          example: []
          type: array
          items:
            type: string
        numberOfGuest:
          description: ''
          example: []
          type: array
          items:
            type: string
      required:
        - entryPlanIds
        - numberOfGuest
    PriceTableNeedEditId:
      type: object
      properties:
        id:
          type: number
        needEditId:
          type: number
      required:
        - id
        - needEditId
    PriceTableUpdateDocument:
      type: object
      properties:
        ids:
          description: List of delete IDs
          example: []
          type: array
          items:
            type: string
        editIds:
          example: []
          type: array
          items:
            $ref: '#/components/schemas/PriceTableNeedEditId'
        documentId:
          type: string
          description: ''
          example: ''
      required:
        - ids
        - editIds
        - documentId
    MainPlanRegister:
      type: object
      properties:
        idEdit:
          type: string
          description: Id Edit
          example: ''
        saleStartDate:
          format: date-time
          type: string
          description: Base64 code
          example: ''
        saleEndDate:
          format: date-time
          type: string
          description: Base64 code
          example: ''
        mainPlanCode:
          type: string
          description: Base64 code
          example: ''
        mainHotelCode:
          type: string
          description: Base64 code
          example: ''
        mediaYearMonth:
          type: string
          description: ''
          example: ''
      required:
        - idEdit
        - saleStartDate
        - saleEndDate
        - mainPlanCode
        - mainHotelCode
    TravelPlanDto:
      type: object
      properties:
        travel_plan_id:
          type: string
          example: '1'
          description: travel_plan_id
        hotel_id:
          type: string
          example: ht01
          description: hotel_id
        hotel_code:
          type: string
          example: '0001'
          description: hotel_code
        travel_plan_name:
          type: string
          example: ''
          description: travel_plan_name
        travel_plan_code:
          type: string
          example: '0001'
          description: travel_plan_code
        number_of_guest_by_rooms:
          example: ''
          description: numberOfGuestByRooms
          type: array
          items:
            type: string
      required:
        - travel_plan_id
        - hotel_id
        - hotel_code
        - travel_plan_name
        - travel_plan_code
        - number_of_guest_by_rooms
    TravelPlanResponseDto:
      type: object
      properties:
        travel_plan_id:
          type: string
          example: ''
          description: ''
        travel_plan_code:
          type: string
          example: ''
          description: ''
        travel_plan_name:
          type: string
          example: ''
          description: ''
        travel_plan_kana_name:
          type: string
          example: ''
          description: ''
        hotel_id:
          type: string
          example: ''
          description: ''
        reservation_stop_days:
          type: number
          example: ''
          description: ''
        reservation_stop_hour:
          type: string
          example: ''
          description: ''
        delete_flag:
          type: boolean
          example: ''
          description: ''
        number_of_adult:
          type: number
          example: ''
          description: number_of_adult
        child_price_upper_grade_setting_type:
          type: number
        child_price_underclassman_setting_type:
          type: number
        baby_price_dinner_bedding_setting_type:
          type: number
        baby_price_dinner_setting_type:
          type: number
        baby_price_bedding_setting_type:
          type: number
        baby_price_no_dinner_bedding_setting_type:
          type: number
      required:
        - travel_plan_id
        - travel_plan_code
        - travel_plan_name
        - travel_plan_kana_name
        - hotel_id
        - reservation_stop_days
        - reservation_stop_hour
        - delete_flag
        - number_of_adult
    ApplicableRoomTypeResponseDto:
      type: object
      properties:
        applicable_room_type_id:
          type: string
          example: ''
          description: ''
        base_applicable_room_type_id:
          type: string
          example: ''
          description: ''
        delete_flag:
          type: boolean
          example: ''
          description: ''
        hotel_code:
          type: string
          example: ''
          description: ''
        stock_control_room_type_code:
          type: string
          example: ''
          description: ''
        travel_plan_code:
          type: string
          example: ''
          description: ''
        travel_plan_id:
          type: string
          example: ''
          description: ''
      required:
        - applicable_room_type_id
        - base_applicable_room_type_id
        - delete_flag
        - hotel_code
        - stock_control_room_type_code
        - travel_plan_code
        - travel_plan_id
    EntryPlanReponseDto:
      type: object
      properties:
        entry_plan_id:
          type: string
          example: ''
          description: ''
        entry_plan_number:
          type: string
          example: ''
          description: ''
        entry_id:
          type: string
          example: ''
          description: ''
        entry_name:
          type: string
          example: ''
          description: ''
        travel_plan_id:
          type: string
          example: ''
          description: ''
        plan_name:
          type: string
          example: ''
          description: ''
        applicable_room_type_id:
          type: string
          example: ''
          description: ''
        room_name:
          type: string
          example: ''
          description: ''
        is_deleted:
          type: boolean
          example: ''
          description: ''
        media_yearmonth:
          type: string
          example: ''
          description: ''
        travel_plans:
          example: ''
          description: ''
          allOf:
            - $ref: '#/components/schemas/TravelPlanResponseDto'
        is_valid:
          type: boolean
        applicable_room_type:
          $ref: '#/components/schemas/ApplicableRoomTypeResponseDto'
      required:
        - entry_plan_id
        - entry_plan_number
        - entry_id
        - entry_name
        - travel_plan_id
        - plan_name
        - applicable_room_type_id
        - room_name
        - is_deleted
        - media_yearmonth
        - travel_plans
        - is_valid
    HotelAgeChargeDto:
      type: object
      properties:
        age_group_class_type:
          type: number
          example: ''
          description: ''
        charge_price:
          type: number
          example: ''
          description: ''
        delete_flag:
          type: boolean
          example: ''
          description: ''
        hotel_charge_id:
          type: string
          example: ''
          description: ''
      required:
        - age_group_class_type
        - charge_price
        - delete_flag
        - hotel_charge_id
    HotelChargeResponseDto:
      type: object
      properties:
        success:
          type: boolean
        hotels:
          type: object
      required:
        - success
        - hotels
    StockControlRoomTypes:
      type: object
      properties:
        stock_control_room_type_id:
          type: string
          example: ''
          description: ''
        hotel_id:
          type: string
          example: ''
          description: ''
        stock_control_room_type_code:
          type: string
          example: ''
          description: ''
        hotel_code:
          type: string
          example: ''
          description: ''
        stock_room_type_name:
          type: string
          example: ''
          description: ''
      required:
        - stock_control_room_type_id
        - hotel_id
        - stock_control_room_type_code
        - hotel_code
        - stock_room_type_name
    stockControlRoomTypeBreak:
      type: object
      properties:
        stock_control_room_type_id:
          type: string
          example: ''
          description: ''
        room_type_id:
          type: string
          example: ''
          description: ''
        smoking_flag:
          type: boolean
          example: ''
          description: ''
        room_type_name:
          type: string
          example: ''
          description: ''
        room_type_code:
          type: string
          example: ''
          description: ''
        room_minimum_number_of_people:
          type: number
          example: ''
          description: ''
        room_maximum_number_of_people:
          type: number
          example: ''
          description: ''
        number_of_rooms:
          type: number
          example: ''
          description: ''
        hotel_code:
          type: string
          example: ''
          description: ''
      required:
        - stock_control_room_type_id
        - room_type_id
        - smoking_flag
        - room_type_name
        - room_type_code
        - room_minimum_number_of_people
        - room_maximum_number_of_people
        - number_of_rooms
        - hotel_code
    RoomTypesDto:
      type: object
      properties:
        stockControlRoomTypes:
          example: []
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/StockControlRoomTypes'
        stockControlRoomTypeBreak:
          example: []
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/stockControlRoomTypeBreak'
      required:
        - stockControlRoomTypes
        - stockControlRoomTypeBreak
    SaveToIdmlDto:
      type: object
      properties:
        dataJsonList:
          description: List of JSON string
          example: ''
          type: array
          items:
            type: string
        idEdit:
          type: string
          description: Id Edit
          example: ''
        saleStartDate:
          format: date-time
          type: string
          description: ''
          example: ''
        saleEndDate:
          format: date-time
          type: string
          description: ''
          example: ''
        mainPlanCode:
          type: string
          description: mainPlanCode
          example: ''
        mainHotelCode:
          type: string
          description: mainHotelCode
          example: ''
        exclusion:
          type: string
        exclusionHeader:
          type: string
        hotspringfee:
          type: string
        hotspringfeeBreakLine:
          type: boolean
        childFare:
          type: string
        childFareBreakLine:
          type: boolean
        methodOfPayment:
          type: string
        methodOfPaymentBreakLine:
          type: boolean
        sameDayReservation:
          type: string
        sameDayReservationBreakLine:
          type: boolean
        checkInOut:
          type: string
        checkInOutBreakLine:
          type: boolean
        planRoom:
          type: string
        planRoomBreakLine:
          type: boolean
        bath:
          type: string
        bathBreakLine:
          type: boolean
        hotSpringQuality:
          type: string
        hotSpringQualityBreakLine:
          type: boolean
        childPrice:
          type: string
        childPriceBreakLine:
          type: boolean
      required:
        - dataJsonList
        - idEdit
    bodyRequesDto:
      type: object
      properties:
        data:
          type: string
          example: ''
          description: ''
    IdmlTextFramePageTextContentDto:
      type: object
      properties:
        content:
          type: string
          description: コンテンツ
        color:
          type: string
          description: コンテンツ色
        breakLine:
          type: boolean
      required:
        - content
        - color
    IdmlTextFramePageTextDto:
      type: object
      properties:
        parentStory:
          type: string
          description: ストーリーID
        self:
          type: string
          description: SelfID
        tagId:
          type: string
          description: タグID
        fontSize:
          type: number
          description: 文字サイズ
        fontStyle:
          type: string
          description: 文字スタイル
        fontFamily:
          type: string
          description: 文字ファミリー
        leading:
          type: number
          description: Leading
        justification:
          type: string
          description: Justification
        rotateSingleByteCharacters:
          type: boolean
          description: RotateSingleByteCharacters
        autoTcy:
          type: number
          description: AutoTcy
        autoTcyIncludeRoman:
          type: boolean
          description: AutoTcyIncludeRoman
        tatechuyoko:
          type: boolean
          description: Tatechuyoko
        contents:
          description: コンテンツ
          type: array
          items:
            $ref: '#/components/schemas/IdmlTextFramePageTextContentDto'
      required:
        - parentStory
        - self
        - tagId
        - fontSize
        - fontStyle
        - fontFamily
        - leading
        - justification
        - rotateSingleByteCharacters
        - autoTcy
        - autoTcyIncludeRoman
        - tatechuyoko
        - contents
    IdmlTextFramePageItemDto:
      type: object
      properties:
        type:
          type: string
          description: 種別
        self:
          type: string
          description: SelfID
        parentStory:
          type: string
          description: ストーリーID
        x:
          type: number
          description: 表示X座標
        'y':
          type: number
          description: 表示Y座標
        width:
          type: number
          description: 表示長さ
        height:
          type: number
          description: 表示高さ
        texts:
          description: コンテンツ
          type: array
          items:
            $ref: '#/components/schemas/IdmlTextFramePageTextDto'
        parentTagId:
          type: string
          description: 親タグID
      required:
        - type
        - self
        - parentStory
        - x
        - 'y'
        - width
        - height
        - texts
        - parentTagId
    IdmlRectanglePageItemDto:
      type: object
      properties:
        type:
          type: string
          description: 種別
        self:
          type: string
          description: SelfID
        parentStory:
          type: string
          description: ストーリーID
        x:
          type: number
          description: 表示X座標
        'y':
          type: number
          description: 表示Y座標
        width:
          type: number
          description: 表示長さ
        height:
          type: number
          description: 表示高さ
        fillColor:
          type: object
          description: 背景色
        strokeColor:
          type: object
          description: 枠線色
        strokeWeight:
          type: string
          description: 枠線Weight
        editable:
          type: boolean
          description: 編集可能フラグ
        parentTagId:
          type: string
          description: 親タグID
      required:
        - type
        - self
        - parentStory
        - x
        - 'y'
        - width
        - height
        - fillColor
        - strokeColor
        - strokeWeight
        - editable
        - parentTagId
    IdmlImagePageSubItemDto:
      type: object
      properties:
        type:
          type: string
          description: 種別
        tag:
          type: string
          description: タグID
        self:
          type: string
          description: SelfID
        x:
          type: number
          description: 表示X座標
        'y':
          type: number
          description: 表示Y座標
        width:
          type: number
          description: 表示長さ
        height:
          type: number
          description: 表示高さ
        scaleX:
          type: number
          description: ScaleX
        scaleY:
          type: number
          description: ScaleY
        linkResourceModified:
          type: number
          description: LinkResourceModified
        linkedResource:
          type: boolean
          description: LinkedResource
        imageFileName:
          type: string
          description: ImageFileName
        editable:
          type: boolean
          description: 編集可能フラグ
      required:
        - type
        - tag
        - self
        - x
        - 'y'
        - width
        - height
        - scaleX
        - scaleY
        - linkResourceModified
        - linkedResource
        - imageFileName
        - editable
    IdmlImagePageItemDto:
      type: object
      properties:
        type:
          type: string
          description: 種別
        self:
          type: string
          description: SelfID
        x:
          type: number
          description: 表示X座標
        'y':
          type: number
          description: 表示Y座標
        width:
          type: number
          description: 表示長さ
        height:
          type: number
          description: 表示高さ
        editable:
          type: boolean
          description: 編集可能フラグ
        parentTagId:
          type: string
          description: 親タグID
        images:
          description: イメージ情報
          type: array
          items:
            $ref: '#/components/schemas/IdmlImagePageSubItemDto'
      required:
        - type
        - self
        - x
        - 'y'
        - width
        - height
        - editable
        - parentTagId
        - images
    IdmlHtmlTestItemDto:
      type: object
      properties:
        type:
          type: string
          description: 種別
        self:
          type: string
          description: SelfID
        html:
          type: string
          description: HTML
        x:
          type: number
          description: 表示X座標
        'y':
          type: number
          description: 表示Y座標
        width:
          type: number
          description: 表示長さ
        height:
          type: number
          description: 表示高さ
        editable:
          type: boolean
          description: 編集可能フラグ
        parentTagId:
          type: string
          description: 親タグID
      required:
        - type
        - self
        - html
        - x
        - 'y'
        - width
        - height
        - editable
        - parentTagId
